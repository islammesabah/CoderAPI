#,API,API_CODE_#,INSTRUCT,CODE_PATH,TEST_1,TEST_2,TEST_3,TEST_4,TEST_5
1,peft,1,"Develop a Python program using the 'peft' API that assesses the sentiment of a provided news snippet. Load the necessary models, including 'THUDM/chatglm2-6b' as the base model and 'oliverwang15/FinGPT_ChatGLM2_Sentiment_Instruction_LoRA_FT' as the peft model. Create a prompt that instructs the model to determine the sentiment of the news snippet, which should be provided as input. The program should generate the sentiment result and print it.",code/peft/peft_1.py,Test that the program correctly handles different news snippets and returns the corresponding sentiment.,Test that the program can generate sentiment results for the provided news snippet.,Test that the base model ('THUDM/chatglm2-6b') and sentiment model ('oliverwang15/FinGPT_ChatGLM2_Sentiment_Instruction_LoRA_FT') are loaded successfully.,,
2,peft,2,Develop a Python program that utilizes the 'peft' API to summarize a given text. Use the 'google/pegasus-newsroom' model for summarization. The program should take an input text and produce a concise summary. Ensure that the program is capable of handling long texts and generating meaningful summaries.,code/peft/peft_2.py,Test that the program handles long input texts and produces concise summaries.,Test that the program can generate meaningful summaries for a variety of input texts.,Test that the 'google/pegasus-newsroom' model and peft model are successfully loaded.,,
3,peft,3,Create a Python program that uses the 'peft' API to translate a given English text to French. Employ the 'facebook/mbart-large-cc25' model for translation. The program should be capable of translating a range of English texts into French.,code/peft/peft_3.py,Test that the program handles both short and long English texts for translation.,Test that the program can accurately translate various English texts into French.,Test that the 'facebook/mbart-large-cc25' model and peft model are successfully loaded.,,
4,peft,4,Develop a Python program that uses the 'peft' API to answer questions based on a given passage. Utilize the 'ahotrod/eleutherai-turboqa' model for question-answering. The program should take a passage and a set of questions as input and provide corresponding answers.,code/peft/peft_4.py,Test that the program can accurately answer a variety of questions based on the provided passage.,Test that the 'ahotrod/eleutherai-turboqa' model and peft model are successfully loaded.,"Test that the program handles different passages and questions, providing correct answers.",,
5,peft,5,Create a Python program using the 'peft' API to generate text in the style of William Shakespeare. Utilize the 'gpt2' model for text generation. The program should take a starting phrase and generate a coherent and Shakespearean-style text.,code/peft/peft_5.py,Test that the program can generate coherent and Shakespearean-style text based on different starting phrases.,Test that the 'gpt2' model and peft model are successfully loaded.,Test that the program can handle various starting phrases and produce meaningful text.,,
6,peft,6,Develop a Python program using the 'peft' API to perform sentiment analysis on a given set of user reviews. Utilize the 'nlptown/bert-base-multilingual-uncased-sentiment' model for sentiment analysis. The program should accept a list of user reviews as input and provide sentiment scores for each review.,code/peft/peft_6.py,Test that the program can accurately perform sentiment analysis on different user reviews.,Test that the program handles a variety of user reviews and provides appropriate sentiment scores.,Test that the 'nlptown/bert-base-multilingual-uncased-sentiment' model and peft model are successfully loaded.,,
7,peft,7,Create a Python program that employs the 'peft' API to generate code in the Python programming language. Use the 'gpt2' model for code generation. The program should take a high-level description of a task as input and generate Python code that accomplishes the task.,code/peft/peft_7.py,Test that the 'gpt2' model and peft model are successfully loaded.,Test that the program can generate Python code based on different high-level task descriptions.,Test that the program produces functional Python code that accomplishes the specified tasks.,,
8,peft,8,"Develop a Python program using the 'peft' API to extract key information from a set of text documents. Utilize the 'dbmdz/bert-large-cased-finetuned-conll03-english' model for named entity recognition. The program should accept a list of text documents as input and identify and extract entities like names, organizations, and dates.",code/peft/peft_8.py,Test that the 'dbmdz/bert-large-cased-finetuned-conll03-english' model and peft model are successfully loaded.,Test that the program handles various text documents and identifies relevant entities.,Test that the program can accurately extract entities from different text documents.,,
9,peft,9,Create a Python program that utilizes the 'peft' API to generate SQL queries based on a given description of a database query. Use the 'gpt2' model for SQL query generation. The program should accept high-level descriptions of queries and produce SQL queries that retrieve the requested data from a database.,code/peft/peft_9.py,Test that the 'gpt2' model and peft model are successfully loaded.,Test that the program produces SQL queries that retrieve the requested data from a database.,Test that the program can generate SQL queries based on different high-level descriptions of queries.,,
10,peft,10,Develop a Python program using the 'peft' API to perform text classification on a set of documents. Utilize the 'distilbert-base-uncased' model for text classification. The program should accept a list of documents as input and classify them into predefined categories.,code/peft/peft_10.py,Test that the program handles various types of documents and assigns appropriate classifications.,Test that the 'distilbert-base-uncased' model and peft model are successfully loaded.,Test that the program can accurately classify different documents into predefined categories.,,
11,peft,11,Create a Python program that uses the 'peft' API to generate code for a simple chatbot. Utilize the 'gpt-3.5-turbo' model for chatbot code generation. The program should generate code that enables a chatbot to answer basic questions and engage in a conversation.,code/peft/peft_11.py,Test that the program can generate code for a chatbot capable of answering basic questions and engaging in conversation.,Test that the generated code allows the chatbot to provide meaningful responses in a conversation.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
12,peft,12,Develop a Python program using the 'peft' API to generate code for a simple game. Utilize the 'gpt-3.5-turbo' model for game code generation. The program should generate code for a basic text-based game with a defined objective and rules.,code/peft/peft_12.py,Test that the program can generate code for a simple text-based game with defined objectives and rules.,Test that the generated game code allows users to play and interact with the game.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
13,peft,13,Create a Python program that uses the 'peft' API to generate code for a weather forecasting application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code that takes a location as input and provides weather forecasts for that location.,code/peft/peft_13.py,Test that the program can generate code for a weather forecasting application that takes a location as input and provides weather forecasts.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated code allows users to input a location and receive accurate weather forecasts.,,
14,peft,14,"Develop a Python program using the 'peft' API to generate code for a basic e-commerce website. Utilize the 'gpt-3.5-turbo' model for website code generation. The program should generate code for a simple e-commerce website with product listings, a shopping cart, and checkout functionality.",code/peft/peft_14.py,"Test that the program can generate code for a basic e-commerce website with product listings, a shopping cart, and checkout functionality.",Test that the generated website code allows users to browse products and make purchases.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
15,peft,15,"Create a Python program that uses the 'peft' API to generate code for a social media platform. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a simplified social media platform with user profiles, posts, likes, and comments functionality.",code/peft/peft_15.py,"Test that the generated social media code allows users to create profiles, make posts, and interact with other users.","Test that the program can generate code for a simplified social media platform with user profiles, posts, likes, and comments functionality.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
16,peft,16,Develop a Python program using the 'peft' API to generate code for a basic chat application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a chat application that allows users to send and receive messages in real-time.,code/peft/peft_16.py,Test that the generated chat application code enables real-time communication between users.,Test that the program can generate code for a basic chat application that allows users to send and receive messages in real-time.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
17,peft,17,Create a Python program that utilizes the 'peft' API to generate code for a content recommendation system. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a recommendation system that suggests content based on user preferences and behavior.,code/peft/peft_17.py,Test that the program can generate code for a content recommendation system that suggests content based on user preferences and behavior.,Test that the generated recommendation system code provides relevant content recommendations to users.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
18,peft,18,"Develop a Python program using the 'peft' API to generate code for a basic e-learning platform. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for an e-learning platform that allows users to access courses, view content, and take quizzes.",code/peft/peft_18.py,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,"Test that the program can generate code for a basic e-learning platform that allows users to access courses, view content, and take quizzes.",Test that the generated e-learning platform code enables users to access educational materials and complete quizzes.,,
19,peft,19,"Create a Python program that uses the 'peft' API to generate code for a task management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a task management application that allows users to create, assign, and track tasks.",code/peft/peft_19.py,"Test that the program can generate code for a task management application that allows users to create, assign, and track tasks.",Test that the generated task management application code enables users to manage tasks effectively.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
20,peft,20,Develop a Python program using the 'peft' API to generate code for a basic image recognition application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for an image recognition application that can identify objects and scenes in images.,code/peft/peft_20.py,Test that the program can generate code for an image recognition application that can identify objects and scenes in images.,Test that the generated image recognition application code accurately recognizes objects and scenes in images.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
21,peft,21,Create a Python program that uses the 'peft' API to generate code for a basic calendar application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a calendar application that allows users to schedule events and view their calendars.,code/peft/peft_21.py,Test that the program can generate code for a calendar application that allows users to schedule events and view their calendars.,Test that the generated calendar application code enables users to manage their schedules.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
22,peft,22,"Develop a Python program using the 'peft' API to generate code for a basic music player application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a music player application that allows users to play, pause, and skip songs.",code/peft/peft_22.py,"Test that the program can generate code for a music player application that allows users to play, pause, and skip songs.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated music player application code enables users to control music playback.,,
23,peft,23,Create a Python program that uses the 'peft' API to generate code for a basic fitness tracking application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a fitness tracking application that allows users to log workouts and track their fitness progress.,code/peft/peft_23.py,Test that the program can generate code for a fitness tracking application that allows users to log workouts and track their fitness progress.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated fitness tracking application code enables users to record their fitness activities and monitor progress.,,
24,peft,24,Develop a Python program using the 'peft' API to generate code for a basic recipe recommendation application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a recipe recommendation application that suggests recipes based on user preferences and dietary restrictions.,code/peft/peft_24.py,Test that the generated recipe recommendation application code provides relevant recipe suggestions to users.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the program can generate code for a recipe recommendation application that suggests recipes based on user preferences and dietary restrictions.,,
25,peft,25,Create a Python program that utilizes the 'peft' API to generate code for a basic language translation application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a language translation application that can translate text between different languages.,code/peft/peft_25.py,Test that the program can generate code for a language translation application that can translate text between different languages.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated translation application code accurately translates text between various languages.,,
26,peft,26,"Develop a Python program using the 'peft' API to generate code for a basic note-taking application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a note-taking application that allows users to create, edit, and organize notes.",code/peft/peft_26.py,"Test that the program can generate code for a note-taking application that allows users to create, edit, and organize notes.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated note-taking application code enables users to manage their notes effectively.,,
27,peft,27,"Create a Python program that uses the 'peft' API to generate code for a basic personal finance management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a personal finance management application that allows users to track income, expenses, and budgeting.",code/peft/peft_27.py,"Test that the program can generate code for a personal finance management application that allows users to track income, expenses, and budgeting.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated finance management application code enables users to manage their finances effectively.,,
28,peft,28,Develop a Python program using the 'peft' API to generate code for a basic news aggregation application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a news aggregation application that collects and displays news articles from various sources.,code/peft/peft_28.py,Test that the program can generate code for a news aggregation application that collects and displays news articles from various sources.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated news aggregation application code allows users to access and read news articles.,,
29,peft,29,Create a Python program that utilizes the 'peft' API to generate code for a basic weather forecast application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a weather forecast application that provides weather information for a specific location.,code/peft/peft_29.py,Test that the program can generate code for a weather forecast application that provides weather information for a specific location.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated weather forecast application code delivers accurate weather forecasts.,,
30,peft,30,"Develop a Python program using the 'peft' API to generate code for a basic time management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a time management application that allows users to schedule events, set reminders, and manage their time effectively.",code/peft/peft_30.py,Test that the generated time management application code enables users to organize their schedules and stay on top of tasks.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,"Test that the program can generate code for a time management application that allows users to schedule events, set reminders, and manage their time effectively.",,
31,peft,31,"Create a Python program that uses the 'peft' API to generate code for a basic ride-sharing application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a ride-sharing application that allows users to request rides, view driver information, and track ride progress.",code/peft/peft_31.py,Test that the generated ride-sharing application code enables users to request and complete rides.,"Test that the program can generate code for a ride-sharing application that allows users to request rides, view driver information, and track ride progress.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
32,peft,32,"Develop a Python program using the 'peft' API to generate code for a basic recipe management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a recipe management application that allows users to store, organize, and search for recipes.",code/peft/peft_32.py,"Test that the program can generate code for a recipe management application that allows users to store, organize, and search for recipes.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the generated recipe management application code enables users to manage their recipe collections effectively.,,
33,peft,33,"Create a Python program that uses the 'peft' API to generate code for a basic task scheduling application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a task scheduling application that allows users to create, edit, and prioritize tasks.",code/peft/peft_33.py,Test that the generated task scheduling application code enables users to manage their tasks and schedules effectively.,"Test that the program can generate code for a task scheduling application that allows users to create, edit, and prioritize tasks.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
34,peft,34,Develop a Python program using the 'peft' API to generate code for a basic personal journal application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a personal journal application that allows users to create and organize journal entries.,code/peft/peft_34.py,Test that the program can generate code for a personal journal application that allows users to create and organize journal entries.,Test that the generated personal journal application code enables users to maintain their digital journals effectively.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
35,peft,35,"Create a Python program that utilizes the 'peft' API to generate code for a basic travel booking application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a travel booking application that allows users to search for and book flights, hotels, and travel packages.",code/peft/peft_35.py,"Test that the program can generate code for a travel booking application that allows users to search for and book flights, hotels, and travel packages.",Test that the generated travel booking application code enables users to plan and book their travel arrangements.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
36,peft,36,Develop a Python program using the 'peft' API to generate code for a basic chatbot application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a chatbot that can engage in conversations and answer user queries on various topics.,code/peft/peft_36.py,Test that the generated chatbot code effectively interacts with users and provides relevant responses.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,Test that the program can generate code for a chatbot application that can engage in conversations and answer user queries on various topics.,,
37,peft,37,"Create a Python program that uses the 'peft' API to generate code for a basic event management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for an event management application that allows users to create, organize, and promote events.",code/peft/peft_37.py,Test that the generated event management application code enables users to manage and publicize their events.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,"Test that the program can generate code for an event management application that allows users to create, organize, and promote events.",,
38,peft,38,"Develop a Python program using the 'peft' API to generate code for a basic file management application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a file management application that allows users to upload, organize, and share files and documents.",code/peft/peft_38.py,Test that the generated file management application code enables users to manage their digital files effectively.,"Test that the program can generate code for a file management application that allows users to upload, organize, and share files and documents.",Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
39,peft,39,Create a Python program that utilizes the 'peft' API to generate code for a basic home automation application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a home automation application that allows users to control smart devices and automate home routines.,code/peft/peft_39.py,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded .,Test that the generated home automation application code effectively manages and automates home devices.,Test that the program can generate code for a home automation application that allows users to control smart devices and automate home routines.,,
40,peft,40,"Develop a Python program using the 'peft' API to generate code for a basic social media application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for a social media application that allows users to create posts, interact with other users, and view a feed of posts from their network.",code/peft/peft_40.py,"Test that the program can generate code for a social media application that allows users to create posts, interact with other users, and view a feed of posts from their network.",Test that the generated social media application code enables users to participate in social interactions and share content.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,,
41,peft,41,"Create a Python program that uses the 'peft' API to generate code for a basic e-commerce application. Utilize the 'gpt-3.5-turbo' model for code generation. The program should generate code for an e-commerce application that allows users to browse products, add items to a cart, and complete purchases.",code/peft/peft_41.py,Test that the generated e-commerce application code enables users to shop for products and make online purchases.,Test that the 'gpt-3.5-turbo' model and peft model are successfully loaded.,"Test that the program can generate code for an e-commerce application that allows users to browse products, add items to a cart, and complete purchases.",,
42,apeye,1,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the path, domain, and fully qualified domain name (FQDN) information from the URL.",code/apeye/apeye_1.py,Confirm that the program correctly extracts and prints the fully qualified domain name (FQDN) from the URL.,Ensure that the program correctly extracts and prints the path from the URL.,Verify that the program accurately extracts and prints the domain information.,,
43,apeye,2,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the scheme, netloc, and query parameters from the URL.",code/apeye/apeye_2.py,Verify that the program accurately extracts and prints the netloc information.,Ensure that the program correctly extracts and prints the scheme from the URL.,Confirm that the program correctly extracts and prints the query parameters from the URL.,,
44,apeye,3,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the status code, headers, and content of the URL response.",code/apeye/apeye_3.py,Verify that the program accurately extracts and prints the headers of the URL response.,Confirm that the program correctly extracts and prints the content of the URL response.,Ensure that the program correctly extracts and prints the status code of the URL response.,,
45,apeye,4,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the title, description, and image URL from the HTML content of the URL.",code/apeye/apeye_4.py,Ensure that the program correctly extracts and prints the title from the HTML content of the URL.,Verify that the program accurately extracts and prints the description from the HTML content of the URL.,Confirm that the program correctly extracts and prints the image URL from the HTML content of the URL.,,
46,apeye,5,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the number of links, images, and forms present in the HTML content of the URL.",code/apeye/apeye_5.py,Ensure that the program correctly extracts and prints the number of links from the HTML content of the URL.,Confirm that the program correctly extracts and prints the number of forms from the HTML content of the URL.,Verify that the program accurately extracts and prints the number of images from the HTML content of the URL.,,
47,apeye,6,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the IP address, country, and city information of the server hosting the URL.",code/apeye/apeye_6.py,Confirm that the program correctly extracts and prints the city information of the server hosting the URL.,Verify that the program accurately extracts and prints the country information of the server hosting the URL.,Ensure that the program correctly extracts and prints the IP address of the server hosting the URL.,,
48,apeye,7,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the number of redirects, the final URL after following redirects, and the response time of the URL.",code/apeye/apeye_7.py,Ensure that the program correctly extracts and prints the number of redirects of the URL.,Verify that the program accurately extracts and prints the final URL after following redirects.,Confirm that the program correctly extracts and prints the response time of the URL.,,
49,apeye,8,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the SSL certificate information of the URL, including the issuer, subject, and expiration date.",code/apeye/apeye_8.py,Confirm that the program correctly extracts and prints the expiration date of the SSL certificate of the URL.,Ensure that the program correctly extracts and prints the issuer of the SSL certificate of the URL.,Verify that the program accurately extracts and prints the subject of the SSL certificate of the URL.,,
50,apeye,9,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the content type, content length, and encoding of the URL response.",code/apeye/apeye_9.py,Ensure that the program correctly extracts and prints the content type of the URL response.,Confirm that the program correctly extracts and prints the encoding of the URL response.,Verify that the program accurately extracts and prints the content length of the URL response.,,
51,apeye,10,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the cookies, user agent, and referer information from the URL request.",code/apeye/apeye_10.py,Ensure that the program correctly extracts and prints the cookies from the URL request.,Verify that the program accurately extracts and prints the user agent information from the URL request.,Confirm that the program correctly extracts and prints the referer information from the URL request.,,
52,apeye,11,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the response headers, including the content-type, content-length, and server information.",code/apeye/apeye_11.py,Confirm that the program correctly extracts and prints the server header from the URL response.,Ensure that the program correctly extracts and prints the content-type header from the URL response.,Verify that the program accurately extracts and prints the content-length header from the URL response.,,
53,apeye,12,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the status code, headers, and content of the URL response. Additionally, the program should save the content of the response to a file named 'output.txt'.",code/apeye/apeye_12.py,Verify that the program accurately extracts and prints the headers of the URL response.,"Confirm that the program correctly extracts and prints the content of the URL response and saves it to a file named ""output.txt"".",Ensure that the program correctly extracts and prints the status code of the URL response.,,
54,apeye,13,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the response time, content type, and content length of the URL response. Additionally, the program should save the content of the response to a file named 'output.html'.",code/apeye/apeye_13.py,Verify that the program accurately extracts and prints the content type of the URL response.,"Confirm that the program correctly extracts and prints the content length of the URL response and saves it to a file named ""output.html"".",Ensure that the program correctly extracts and prints the response time of the URL response.,,
55,apeye,14,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the status code, headers, and content of the URL response. Additionally, the program should save the content of the response to a file named 'output.txt' and the headers to a file named 'headers.txt'.",code/apeye/apeye_14.py,Verify that the program accurately extracts and prints the headers of the URL response.,"Confirm that the program correctly extracts and prints the content of the URL response and saves it to a file named ""output.txt"". Additionally, confirm that the program correctly saves the headers to a file named ""headers.txt"".",Ensure that the program correctly extracts and prints the status code of the URL response.,,
56,apeye,15,"Develop a Python program that utilizes the 'apeye' API to interact with a given URL. The program should extract and print the status code, headers, and content of the URL response. Additionally, the program should save the content of the response to a file named 'output.html' and the headers to a file named 'headers.txt'.",code/apeye/apeye_15.py,Verify that the program accurately extracts and prints the headers of the URL response.,"Confirm that the program correctly extracts and prints the content of the URL response and saves it to a file named ""output.html"". Additionally, confirm that the program correctly saves the headers to a file named ""headers.txt"".",Ensure that the program correctly extracts and prints the status code of the URL response.,,
83,argilla,1,"Create a Python program using 'argilla' API to train NER model on CoNLL-2003 data, selecting 100 examples, using 'ArgillaTrainer' with 'spacy,' predict named entities in 'The ArgillaTrainer is great!' and log results.",code/argilla/argilla_1.py,Test that the 'ArgillaTrainer' is initialized and configured with the specified parameters.,"Test that the NER model is successfully trained, and the predictions for the sample sentence match the expected results.",Test that the 'conll2003' dataset is loaded correctly and contains the expected number of training examples (100).,,
84,argilla,2,"Create a Python program using 'argilla' API to preprocess and clean a text dataset, perform tokenization and remove stopwords, and save the cleaned dataset to a new file.",code/argilla/argilla_2.py,"Test that the cleaned dataset is saved to a new file with the name ""imdb_cleaned.""",Test that the ArgillaPreprocessor successfully preprocesses the dataset by tokenizing and removing stopwords.,Test that the 'imdb' dataset is loaded correctly.,,
85,argilla,3,Create a Python program using 'argilla' API to perform sentiment analysis on a text dataset using 'ArgillaClassifier' and save the model's performance metrics.,code/argilla/argilla_3.py,"Test that the model's performance metrics, including accuracy and classification report, are calculated and logged correctly.",Test that the ArgillaClassifier successfully trains a sentiment analysis model.,Test that the 'imdb' dataset is loaded correctly for training and testing.,,
86,argilla,4,Create a Python program using 'argilla' API to generate word embeddings for a text dataset and save them as word vectors.,code/argilla/argilla_4.py,Test that the ArgillaEmbeddings successfully generates word embeddings.,Test that the 'imdb' dataset is loaded correctly.,"Test that the word vectors are saved as word embeddings with the name ""imdb_word_embeddings.""",,
87,argilla,5,Create a Python program using 'argilla' API to perform topic modeling on a text dataset using 'ArgillaTopicModeler' and save the generated topics and their distribution for each document.,code/argilla/argilla_5.py,Test that the generated topics and document-topic distribution are logged correctly.,Test that the ArgillaTopicModeler successfully performs topic modeling.,Test that the 'imdb' dataset is loaded correctly.,,
88,argilla,6,"Create a Python program using 'argilla' API to preprocess a text dataset, split it into training and testing sets, train a text classification model, and save the model for later use.",code/argilla/argilla_6.py,Test that the dataset is split into training and testing sets.,Test that the ArgillaClassifier successfully trains a text classification model.,Test that the ArgillaPreprocessor successfully preprocesses the dataset.,Test that the trained model is saved for later use.,Test that the 'imdb' dataset is loaded correctly.
89,argilla,7,"Create a Python program using 'argilla' API to perform text classification on a text dataset using a pre-trained BERT model, and save the model's performance metrics.",code/argilla/argilla_7.py,Test that the ArgillaClassifier with a pre-trained BERT model successfully trains a text classification model.,"Test that the model's performance metrics, including accuracy and classification report, are calculated and logged correctly.",Test that the 'imdb' dataset is loaded correctly for training and testing.,,
90,argilla,8,"Create a Python program using 'argilla' API to perform named entity recognition (NER) on a text dataset using a pre-trained BERT model, and save the recognized entities and their types.",code/argilla/argilla_8.py,Test that the recognized entities and their types are logged correctly.,Test that the 'conll2003' dataset is loaded correctly.,Test that ArgillaNER with a pre-trained BERT model successfully recognizes named entities.,,
91,argilla,9,"Create a Python program using 'argilla' API to generate word embeddings for a text dataset using a pre-trained BERT model, and save the embeddings as word vectors.",code/argilla/argilla_9.py,"Test that the word vectors are saved as word embeddings with the name ""imdb_bert_word_embeddings.""",Test that the 'imdb' dataset is loaded correctly.,Test that ArgillaEmbeddings with a pre-trained BERT model successfully generates word embeddings.,,
92,argilla,10,"Create a Python program using 'argilla' API to preprocess and clean a text dataset, perform tokenization, remove stopwords, and save the cleaned dataset to a new file using a custom stopword list.",code/argilla/argilla_10.py,"Test that the cleaned dataset is saved to a new file with the name ""imdb_custom_stopwords.""",Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaPreprocessor successfully preprocesses the dataset by tokenizing and removing custom stopwords.,,
93,argilla,11,"Create a Python program using 'argilla' API to perform sentiment analysis on a text dataset using 'ArgillaClassifier' with a custom text classification model, and save the model's performance metrics.",code/argilla/argilla_11.py,"Test that the model\'s performance metrics, including accuracy and classification report, are calculated and logged correctly.",Test that the ArgillaClassifier with a custom text classification model successfully trains a text classification model.,Test that the 'imdb' dataset is loaded correctly for training and testing.,,
94,argilla,12,"Create a Python program using 'argilla' API to perform topic modeling on a text dataset using 'ArgillaTopicModeler' with a custom topic modeling model, and save the generated topics and their distribution for each document.",code/argilla/argilla_12.py,Test that the generated topics and document-topic distribution are logged correctly.,Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaTopicModeler with a custom topic modeling model successfully performs topic modeling.,,
95,argilla,13,"Create a Python program using 'argilla' API to preprocess a text dataset, split it into training and testing sets, train a text classification model with a custom model code, and save the model for later use.",code/argilla/argilla_13.py,Test that the dataset is split into training and testing sets.,Test that the ArgillaClassifier with custom model code successfully trains a text classification model.,Test that the ArgillaPreprocessor successfully preprocesses the dataset.,Test that the trained model is saved for later use.,Test that the 'imdb' dataset is loaded correctly.
96,argilla,14,"Create a Python program using 'argilla' API to perform sentiment analysis on a text dataset using 'ArgillaClassifier' with a custom model code that includes feature extraction and a machine learning classifier, and save the model's performance metrics.",code/argilla/argilla_14.py,"Test that the model\'s performance metrics, including accuracy and classification report, are calculated and logged correctly.",Test that the ArgillaClassifier with custom model code successfully trains a text classification model.,Test that the 'imdb' dataset is loaded correctly for training and testing.,,
97,argilla,15,"Create a Python program using 'argilla' API to generate word embeddings for a text dataset using a custom embedding model, and save the embeddings as word vectors.",code/argilla/argilla_15.py,Test that ArgillaEmbeddings with a custom embedding model code successfully generates word embeddings.,Test that the 'imdb' dataset is loaded correctly.,"Test that the word vectors are saved as word embeddings with the name ""imdb_custom_word_embeddings.""",,
98,argilla,16,"Create a Python program using 'argilla' API to perform topic modeling on a text dataset using 'ArgillaTopicModeler' with a custom topic modeling model that includes a different number of topics, and save the generated topics and their distribution for each document.",code/argilla/argilla_16.py,Test that the generated topics and document-topic distribution are logged correctly.,Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaTopicModeler with a custom topic modeling model successfully performs topic modeling.,,
99,argilla,17,"Create a Python program using 'argilla' API to preprocess a text dataset, split it into training and testing sets, train a text classification model with a custom model code that uses a different machine learning classifier, and save the model for later use.",code/argilla/argilla_17.py,Test that the dataset is split into training and testing sets.,Test that the ArgillaPreprocessor successfully preprocesses the dataset.,Test that the trained model is saved for later use.,Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaClassifier with custom model code successfully trains a text classification model with a different classifier.
100,argilla,18,"Create a Python program using 'argilla' API to perform sentiment analysis on a text dataset using 'ArgillaClassifier' with a custom model code that includes feature extraction and a different machine learning classifier, and save the model's performance metrics.",code/argilla/argilla_18.py,"Test that the model\'s performance metrics, including accuracy and classification report, are calculated and logged correctly.",Test that the ArgillaClassifier with custom model code that includes a different classifier successfully trains a text classification model.,Test that the 'imdb' dataset is loaded correctly for training and testing.,,
101,argilla,19,"Create a Python program using 'argilla' API to generate word embeddings for a text dataset using a custom embedding model that uses a different embedding technique, and save the embeddings as word vectors.",code/argilla/argilla_19.py,"Test that the word vectors are saved as word embeddings with the name ""imdb_custom_fasttext_word_embeddings.""",Test that the 'imdb' dataset is loaded correctly.,Test that ArgillaEmbeddings with custom embedding model code that uses a different embedding technique successfully generates word embeddings.,,
102,argilla,20,"Create a Python program using 'argilla' API to perform topic modeling on a text dataset using 'ArgillaTopicModeler' with a custom topic modeling model that uses a different topic modeling technique, and save the generated topics and their distribution for each document.",code/argilla/argilla_20.py,Test that the generated topics and document-topic distribution are logged correctly.,Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaTopicModeler with custom topic modeling model code that uses a different topic modeling technique successfully performs topic modeling.,,
103,argilla,21,"Create a Python program using 'argilla' API to preprocess a text dataset, split it into training and testing sets, train a text classification model with a custom model code that includes a different feature extraction technique, and save the model for later use.",code/argilla/argilla_21.py,Test that the dataset is split into training and testing sets.,Test that the trained model is saved for later use.,Test that the ArgillaPreprocessor successfully preprocesses the dataset.,Test that the ArgillaClassifier with custom model code successfully trains a text classification model with a different feature extraction technique.,Test that the 'imdb' dataset is loaded correctly.
114,argilla,32,"Create a Python program using 'argilla' API to perform topic modeling on a text dataset using 'ArgillaTopic Modeler' with a custom topic modeling model that uses a different topic modeling technique, and save the generated topics and their distribution for each document.",code/argilla/argilla_32.py,Test that the generated topics and document-topic distribution are logged correctly.,Test that the 'imdb' dataset is loaded correctly.,Test that the ArgillaTopicModeler with custom topic modeling model code that uses a different topic modeling technique successfully performs topic modeling.,,
124,bitstring,1,"Create a Python program using the 'bitstring' API to perform a prime number check for a given integer and determine if it's an emirp (a prime number whose reverse is also a prime). The program should print whether the input number is prime, emirp, or not prime.",code/bitstring/bitstring_1.py,Verify that the program accurately determines non-prime numbers.,Ensure that the program correctly identifies prime numbers and emirps.,Confirm that the program handles various input numbers and produces the correct output.,,
125,bitstring,2,Create a Python program using the 'bitstring' API to perform a binary to decimal conversion. The program should take a binary string as input and convert it to its decimal equivalent. The program should then print the decimal value.,code/bitstring/bitstring_2.py,Test the program with a binary string that contains leading zeros.,Test the program with a binary string that represents a large decimal number.,Test the program with a binary string that represents a small decimal number.,,
126,bitstring,3,Create a Python program using the 'bitstring' API to perform a bitwise AND operation on two binary strings. The program should take two binary strings as input and perform the bitwise AND operation on them. The program should then print the result of the bitwise AND operation.,code/bitstring/bitstring_3.py,Test the program with two binary strings that have different lengths.,Test the program with two binary strings that have the same length and contain only 1s.,Test the program with two binary strings that have the same length and contain only 0s.,,
127,bitstring,4,Create a Python program using the 'bitstring' API to perform a bitwise XOR operation on two binary strings. The program should take two binary strings as input and perform the bitwise XOR operation on them. The program should then print the result of the bitwise XOR operation.,code/bitstring/bitstring_4.py,Test the program with two binary strings that have different lengths.,Test the program with two binary strings that have the same length and contain only 1s.,Test the program with two binary strings that have the same length and contain only 0s.,,
128,bitstring,5,Create a Python program using the 'bitstring' API to perform a bitwise OR operation on two binary strings. The program should take two binary strings as input and perform the bitwise OR operation on them. The program should then print the result of the bitwise OR operation.,code/bitstring/bitstring_5.py,Test the program with two binary strings that have different lengths.,Test the program with two binary strings that have the same length and contain only 1s.,Test the program with two binary strings that have the same length and contain only 0s.,,
129,bitstring,6,Create a Python program using the 'bitstring' API to perform a bitwise NOT operation on a binary string. The program should take a binary string as input and perform the bitwise NOT operation on it. The program should then print the result of the bitwise NOT operation.,code/bitstring/bitstring_6.py,Test the program with a binary string that contains only 0s.,Test the program with a binary string that contains only 1s.,Test the program with a binary string that contains a mix of 0s and 1s.,,
130,bitstring,7,Create a Python program using the 'bitstring' API to perform a bitwise shift operation on a binary string. The program should take a binary string and a shift amount as input and perform the bitwise shift operation on the binary string. The program should then print the result of the bitwise shift operation.,code/bitstring/bitstring_7.py,Test the program with a binary string that contains only 1s and a negative shift amount.,Test the program with a binary string that contains a mix of 0s and 1s and a zero shift amount.,Test the program with a binary string that contains only 0s and a positive shift amount.,,
131,bitstring,8,Create a Python program using the 'bitstring' API to perform a bitwise rotation operation on a binary string. The program should take a binary string and a rotation amount as input and perform the bitwise rotation operation on the binary string. The program should then print the result of the bitwise rotation operation.,code/bitstring/bitstring_8.py,Test the program with a binary string that contains a mix of 0s and 1s and a zero rotation amount.,Test the program with a binary string that contains only 0s and a positive rotation amount.,Test the program with a binary string that contains only 1s and a negative rotation amount.,,
132,bitstring,9,Create a Python program using the 'bitstring' API to perform a bitwise concatenation operation on two binary strings. The program should take two binary strings as input and perform the bitwise concatenation operation on them. The program should then print the result of the bitwise concatenation operation.,code/bitstring/bitstring_9.py,Test the program with two binary strings that have different lengths.,Test the program with two binary strings that have the same length and contain only 1s.,Test the program with two binary strings that have the same length and contain only 0s.,,
133,bitstring,10,Create a Python program using the 'bitstring' API to perform a bitwise inversion operation on a binary string. The program should take a binary string as input and perform the bitwise inversion operation on it. The program should then print the result of the bitwise inversion operation.,code/bitstring/bitstring_10.py,Test the program with a binary string that contains only 0s.,Test the program with a binary string that contains only 1s.,Test the program with a binary string that contains a mix of 0s and 1s.,,
165,category-encoders,1,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using binary encoding and print the resulting data frame.,code/category-encoders/category-encoders_1.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using binary encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform binary encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
166,category-encoders,2,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using one-hot encoding and print the resulting data frame.,code/category-encoders/category-encoders_2.py,Test with a different set of categorical data to ensure the program can handle various inputs and still perform one-hot encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using one-hot encoding and displays the transformed data frame.,,
167,category-encoders,3,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using ordinal encoding and print the resulting data frame.,code/category-encoders/category-encoders_3.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using ordinal encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform ordinal encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
168,category-encoders,4,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using target encoding and print the resulting data frame.,code/category-encoders/category-encoders_4.py,Test with a different set of categorical data to ensure the program can handle various inputs and still perform target encoding accurately.,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using target encoding and displays the transformed data frame.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
169,category-encoders,5,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using leave-one-out encoding and print the resulting data frame.,code/category-encoders/category-encoders_5.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using leave-one-out encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform leave-one-out encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
170,category-encoders,6,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using count encoding and print the resulting data frame.,code/category-encoders/category-encoders_6.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using count encoding and displays the transformed data frame.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform count encoding accurately.,,
171,category-encoders,7,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using hash encoding and print the resulting data frame.,code/category-encoders/category-encoders_7.py,Test with a different set of categorical data to ensure the program can handle various inputs and still perform hash encoding accurately.,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using hash encoding and displays the transformed data frame.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
172,category-encoders,8,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using backward difference encoding and print the resulting data frame.,code/category-encoders/category-encoders_8.py,Test with a different set of categorical data to ensure the program can handle various inputs and still perform backward difference encoding accurately.,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using backward difference encoding and displays the transformed data frame.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
173,category-encoders,9,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using helmert encoding and print the resulting data frame.,code/category-encoders/category-encoders_9.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using helmert encoding and displays the transformed data frame.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform helmert encoding accurately.,,
174,category-encoders,10,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using polynomial encoding and print the resulting data frame.,code/category-encoders/category-encoders_10.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using polynomial encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform polynomial encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
175,category-encoders,11,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using base N encoding and print the resulting data frame.,code/category-encoders/category-encoders_11.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using base N encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform base N encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
176,category-encoders,12,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using James-Stein encoding and print the resulting data frame.,code/category-encoders/category-encoders_12.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using James-Stein encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform James-Stein encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
177,category-encoders,13,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using M-estimate encoding and print the resulting data frame.,code/category-encoders/category-encoders_13.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using M-estimate encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform M-estimate encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
178,category-encoders,14,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using target mean encoding and print the resulting data frame.,code/category-encoders/category-encoders_14.py,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform target mean encoding accurately.,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using target mean encoding and displays the transformed data frame.,,
179,category-encoders,15,Create a Python program using the 'category-encoders' API to demonstrate category encoding. The program should encode categorical data using weight of evidence encoding and print the resulting data frame.,code/category-encoders/category-encoders_15.py,Verify that the program correctly encodes the categorical data in the 'OUTLOOK' and 'TEMPERATURE' columns using weight of evidence encoding and displays the transformed data frame.,Test with a different set of categorical data to ensure the program can handle various inputs and still perform weight of evidence encoding accurately.,Test the program's ability to handle larger datasets with more categorical columns to validate its scalability and encoding accuracy.,,
206,chardet,1,Develop a Python program that uses the 'chardet' API to detect the encoding of a given text. The program should encode the text in ASCII and use the detector to identify the encoding. Print the result of the encoding detection.,code/chardet/chardet_1.py,Verify that the program correctly encodes the text in ASCII.,Confirm that the program provides the correct encoding result.,Ensure that the program accurately detects the encoding of the provided text.,,
207,chardet,2,Develop a Python program that reads a file containing text with an unknown encoding and uses the 'chardet' API to detect the encoding. The program should then read and print the text using the detected encoding.,code/chardet/chardet_2.py,Create a sample text file with unknown encoding and ensure that the program successfully detects and reads it.,Test the program with various text files to ensure it consistently detects and reads text with unknown encodings.,Verify that the program accurately reads and prints the text using the detected encoding.,,
208,chardet,3,Develop a Python program that takes a list of text strings with different encodings and uses the 'chardet' API to detect the encoding of each string in the list. The program should then print the encoding detection results for each string.,code/chardet/chardet_3.py,Provide a list of text strings with different encodings and confirm that the program accurately detects and prints their encodings.,Test the program with additional text strings to ensure consistent and accurate results.,Verify that the program correctly utilizes the chardet API for encoding detection.,,
209,chardet,4,Develop a Python program that reads a CSV file with text data in various encodings. Use the 'chardet' API to detect the encoding of each column and print the encoding detection results for each column in the CSV file.,code/chardet/chardet_4.py,Create a CSV file with columns containing text data in various encodings and ensure that the program successfully detects and prints the encoding of each column.,Test the program with different CSV files to ensure consistent and accurate encoding detection for various columns.,Verify that the program correctly reads and processes CSV data using the chardet API.,,
210,chardet,5,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then print the detected encoding.",code/chardet/chardet_5.py,Test the program with various web pages to ensure consistent and accurate encoding detection.,Verify that the program correctly utilizes the chardet API to detect web page encoding.,Provide different URLs as input and ensure that the program successfully fetches web page content and detects the encoding.,,
211,chardet,6,Develop a Python program that reads a directory containing multiple text files with various encodings. Use the 'chardet' API to detect the encoding of each file and print the encoding detection results for each file in the directory.,code/chardet/chardet_6.py,Verify that the program correctly processes the text files using the chardet API.,Test the program with different directories containing text files to ensure consistent and accurate encoding detection.,Create a directory with multiple text files in various encodings and ensure that the program successfully detects and prints the encoding of each file.,,
212,chardet,7,Develop a Python program that takes a user-input text string and uses the 'chardet' API to detect the encoding of the input. The program should then encode the input text using the detected encoding and print the encoded text.,code/chardet/chardet_7.py,Test the program with various user inputs to ensure consistent and accurate results.,Verify that the program correctly utilizes the chardet API for encoding detection and text encoding.,Enter different text strings as user input and ensure that the program successfully detects the encoding and prints the encoded text.,,
213,chardet,8,Develop a Python program that reads a JSON file containing text data in various encodings. Use the 'chardet' API to detect the encoding of each JSON value and print the encoding detection results for each value in the JSON file.,code/chardet/chardet_8.py,Create a JSON file with key-value pairs containing text data in various encodings and ensure that the program successfully detects and prints the encoding of each value.,Test the program with different JSON files to ensure consistent and accurate encoding detection for various values.,Verify that the program correctly reads and processes JSON data using the chardet API.,,
214,chardet,9,Develop a Python program that reads a text file containing mixed encodings and uses the 'chardet' API to detect the encoding of each line. The program should then print the encoding detection results for each line in the file.,code/chardet/chardet_9.py,Verify that the program correctly reads and processes the lines using the chardet API.,Test the program with different text files containing mixed encodings to ensure consistent and accurate encoding detection for each line.,Create a text file with multiple lines of mixed encodings and ensure that the program successfully detects and prints the encoding of each line.,,
215,chardet,10,Develop a Python program that takes a list of text strings with mixed encodings and uses the 'chardet' API to detect the encoding of each string in the list. The program should then print the encoding detection results for each string.,code/chardet/chardet_10.py,Provide a list of text strings with mixed encodings and confirm that the program accurately detects and prints their encodings.,Test the program with additional text strings to ensure consistent and accurate results.,Verify that the program correctly utilizes the chardet API for encoding detection.,,
216,chardet,11,Develop a Python program that reads a text file and uses the 'chardet' API to detect the encoding of the entire file. The program should then encode and decode the text to ensure accuracy.,code/chardet/chardet_11.py,"Verify that the program correctly uses the chardet API for encoding detection, encoding, and decoding.",Test the program with different text files of known encodings to ensure consistent and accurate results.,"Create a text file with known encoding and ensure that the program successfully detects, encodes, and decodes the text accurately.",,
217,chardet,12,Develop a Python program that takes a list of byte strings with different encodings and uses the 'chardet' API to detect the encoding of each byte string in the list. The program should then print the encoding detection results for each byte string.,code/chardet/chardet_12.py,Test the program with additional byte strings to ensure consistent and accurate results.,Provide a list of byte strings with different encodings and confirm that the program accurately detects and prints their encodings.,Verify that the program correctly utilizes the chardet API for encoding detection.,,
218,chardet,13,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then saves the file with the detected encoding.",code/chardet/chardet_13.py,Create a text file with unknown encoding and ensure that the program successfully detects and saves it with the detected encoding.,Verify that the program correctly utilizes the chardet API for encoding detection and file writing.,Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and file saving.,,
219,chardet,14,"Develop a Python program that reads a text file with a known encoding, uses the 'chardet' API to detect the encoding, and verifies that the detected encoding matches the known encoding.",code/chardet/chardet_14.py,Test the program with different text files of known encodings to ensure consistent and accurate encoding detection and verification.,Create a text file with a known encoding and ensure that the program successfully detects and verifies the encoding.,Verify that the program correctly utilizes the chardet API for encoding detection and comparison.,,
220,chardet,15,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then save the web page with the detected encoding to a file.",code/chardet/chardet_15.py,Test the program with various web pages to ensure consistent and accurate encoding detection and file saving.,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and saves the web page with the detected encoding to a file.",Verify that the program correctly utilizes the chardet API for encoding detection and file writing.,,
221,chardet,16,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then processes the text by removing any non-ASCII characters before saving it with the detected encoding.",code/chardet/chardet_16.py,"Verify that the program correctly utilizes the chardet API for encoding detection, text processing, and file writing.",Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and text cleaning.,"Create a text file with unknown encoding, ensure that the program successfully detects and processes the text by removing non-ASCII characters, and saves it with the detected encoding.",,
222,chardet,17,"Develop a Python program that reads a JSON file with text data in various encodings, uses the 'chardet' API to detect the encoding of each value, and then saves the JSON data with the detected encodings to a new file.",code/chardet/chardet_17.py,"Verify that the program correctly utilizes the chardet API for encoding detection, data processing, and file writing.",Test the program with different JSON files to ensure consistent and accurate encoding detection and data saving.,Create a JSON file with key-value pairs containing text data in various encodings and ensure that the program successfully detects and saves the data with the detected encodings to a new file.,,
223,chardet,18,"Develop a Python program that takes a list of text strings with mixed encodings, uses the 'chardet' API to detect the encoding of each string in the list, and then saves the strings with the detected encodings to a text file.",code/chardet/chardet_18.py,Provide a list of text strings with mixed encodings and ensure that the program successfully detects and saves the strings with the detected encodings to a text file.,Test the program with additional text strings to ensure consistent and accurate results.,Verify that the program correctly utilizes the chardet API for encoding detection and text processing.,,
224,chardet,19,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then translates the text to English using the detected encoding before saving it with the detected encoding.",code/chardet/chardet_19.py,"Verify that the program correctly utilizes the chardet API for encoding detection, translation, and file writing.","Create a text file with unknown encoding, ensure that the program successfully detects the encoding, translates the text to English, and saves it with the detected encoding.",Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and translation.,,
225,chardet,20,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, and verifies that the detected encoding matches the known encoding before translating the text to English using the detected encoding.",code/chardet/chardet_20.py,"Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, and translates the text to English using the detected encoding.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, translation, and file writing.","Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, and translation.",,
226,chardet,21,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then translate the web page content to English using the detected encoding before saving it to a file.",code/chardet/chardet_21.py,"Verify that the program correctly utilizes the chardet API for encoding detection, translation, and file writing.","Test the program with various web pages to ensure consistent and accurate encoding detection, translation, and file saving.","Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, translates the content to English, and saves it with the detected encoding to a file.",,
227,chardet,22,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then performs sentiment analysis on the text before saving it with the detected encoding.",code/chardet/chardet_22.py,Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and sentiment analysis.,"Verify that the program correctly utilizes the chardet API for encoding detection, sentiment analysis, and file writing.","Create a text file with unknown encoding, ensure that the program successfully detects the encoding, performs sentiment analysis, and saves the text with the detected encoding.",,
228,chardet,23,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, and verifies that the detected encoding matches the known encoding before performing sentiment analysis on the text.",code/chardet/chardet_23.py,"Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, and sentiment analysis.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, and performs sentiment analysis on the text.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, sentiment analysis, and file writing.",,
229,chardet,24,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then perform sentiment analysis on the web page content and print the sentiment score.",code/chardet/chardet_24.py,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and performs sentiment analysis with the sentiment score.",Verify that the program correctly utilizes the chardet API for encoding detection and the TextBlob library for sentiment analysis.,Test the program with various web pages to ensure consistent and accurate encoding detection and sentiment analysis.,,
230,chardet,25,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then summarizes the text before saving it with the detected encoding.",code/chardet/chardet_25.py,Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and text summarization.,"Verify that the program correctly utilizes the chardet API for encoding detection, text summarization, and file writing.","Create a text file with unknown encoding, ensure that the program successfully detects the encoding, summarizes the text, and saves it with the detected encoding.",,
231,chardet,26,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, and verifies that the detected encoding matches the known encoding before summarizing the text.",code/chardet/chardet_26.py,"Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, and text summarization.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, text summarization, and file writing.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, and summarizes the text.",,
232,chardet,27,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then summarize the web page content and print the summary.",code/chardet/chardet_27.py,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and summarizes the content with the summary.",Verify that the program correctly utilizes the chardet API for encoding detection and the gensim library for text summarization.,Test the program with various web pages to ensure consistent and accurate encoding detection and text summarization.,,
233,chardet,28,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then translates the text to English before summarizing it and saving it with the detected encoding.",code/chardet/chardet_28.py,"Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection, translation, and text summarization.","Create a text file with unknown encoding, ensure that the program successfully detects the encoding, translates the text to English, summarizes it, and saves it with the detected encoding.","Verify that the program correctly utilizes the chardet API for encoding detection, translation, text summarization, and file writing.",,
234,chardet,29,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, verifies that the detected encoding matches the known encoding, translates the text to English, and summarizes it before saving the text with the detected encoding.",code/chardet/chardet_29.py,"Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, translation, and text summarization.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, translates the text to English, summarizes it, and saves it with the detected encoding.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, translation, text summarization, and file writing.",,
235,chardet,30,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then translate the web page content to English and summarize it before printing the summary.",code/chardet/chardet_30.py,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, translates the content to English, and summarizes the content before printing the summary.","Verify that the program correctly utilizes the chardet API for encoding detection, translation, and text summarization.","Test the program with various web pages to ensure consistent and accurate encoding detection, translation, and text summarization.",,
236,chardet,31,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then checks if the text contains specific keywords or phrases before saving it with the detected encoding.",code/chardet/chardet_31.py,"Create a text file with unknown encoding, ensure that the program successfully detects the encoding, checks for specific keywords or phrases, and saves the text with the detected encoding if the keywords are present.",Test the program with different text files of unknown encodings and various keyword combinations to ensure consistent and accurate encoding detection and keyword checking.,"Verify that the program correctly utilizes the chardet API for encoding detection, keyword checking, and file writing.",,
237,chardet,32,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, verifies that the detected encoding matches the known encoding, checks if the text contains specific keywords or phrases, and saves the text with the detected encoding if the keywords are present.",code/chardet/chardet_32.py,"Verify that the program correctly utilizes the chardet API for encoding detection, comparison, keyword checking, and file writing.","Test the program with different text files of known encodings and various keyword combinations to ensure consistent and accurate encoding detection, verification, and keyword checking.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, checks for specific keywords or phrases, and saves the text with the detected encoding if the keywords are present.",,
238,chardet,33,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then check if the web page content contains specific keywords or phrases before printing the result of the keyword check.",code/chardet/chardet_33.py,Test the program with various web pages and keyword combinations to ensure consistent and accurate encoding detection and keyword checking.,Verify that the program correctly utilizes the chardet API for encoding detection and keyword checking.,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and checks if the content contains specific keywords or phrases, printing the result of the keyword check.",,
239,chardet,34,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then performs entity recognition on the text before saving it with the detected encoding.",code/chardet/chardet_34.py,Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and entity recognition.,Verify that the program correctly utilizes the chardet API for encoding detection and the spaCy library for entity recognition.,"Create a text file with unknown encoding, ensure that the program successfully detects the encoding, performs entity recognition, and saves the text with the detected encoding.",,
240,chardet,35,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, verifies that the detected encoding matches the known encoding, performs entity recognition on the text, and saves the entities with the detected encoding.",code/chardet/chardet_35.py,"Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, and entity recognition.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, entity recognition, and file writing.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, performs entity recognition, and saves the entities with the detected encoding.",,
241,chardet,36,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then perform entity recognition on the web page content and print the recognized entities.",code/chardet/chardet_36.py,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and performs entity recognition, printing the recognized entities.",Verify that the program correctly utilizes the chardet API for encoding detection and the spaCy library for entity recognition.,Test the program with various web pages to ensure consistent and accurate encoding detection and entity recognition.,,
242,chardet,37,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then checks if the text is in a specific language before saving it with the detected encoding.",code/chardet/chardet_37.py,Verify that the program correctly utilizes the chardet API for encoding detection and the langdetect library for language detection.,"Create a text file with unknown encoding, ensure that the program successfully detects the encoding, checks if the text is in a specific language, and saves the text with the detected encoding if it matches the desired language.",Test the program with different text files of unknown encodings and various language codes to ensure consistent and accurate encoding detection and language checking.,,
243,chardet,38,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, verifies that the detected encoding matches the known encoding, checks if the text is in a specific language, and saves the text with the detected encoding if it matches the desired language.",code/chardet/chardet_38.py,"Test the program with different text files of known encodings and various language codes to ensure consistent and accurate encoding detection, verification, and language checking.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, language detection, and file writing.","Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, checks if the text is in a specific language, and saves the text with the detected encoding if it matches the desired language.",,
244,chardet,39,"Develop a Python program that takes a URL as input, fetches the content from the web page, and uses the 'chardet' API to detect the encoding of the web page. The program should then check if the web page content is in a specific language and print the result of the language check.",code/chardet/chardet_39.py,"Provide different URLs as input and ensure that the program successfully fetches web page content, detects the encoding, and checks if the content is in a specific language, printing the result of the language check.",Verify that the program correctly utilizes the chardet API for encoding detection and the langdetect library for language checking.,Test the program with various web pages and language codes to ensure consistent and accurate encoding detection and language checking.,,
245,chardet,40,"Develop a Python program that reads a text file with unknown encoding, uses the 'chardet' API to detect the encoding, and then tokenizes the text before saving it with the detected encoding.",code/chardet/chardet_40.py,Test the program with different text files of unknown encodings to ensure consistent and accurate encoding detection and text tokenization.,Verify that the program correctly utilizes the chardet API for encoding detection and the NLTK library for text tokenization.,"Create a text file with unknown encoding, ensure that the program successfully detects the encoding, tokenizes the text, and saves it with the detected encoding.",,
246,chardet,41,"Develop a Python program that reads a text file with known encoding, uses the 'chardet' API to detect the encoding, verifies that the detected encoding matches the known encoding, tokenizes the text, and saves the tokens with the detected encoding.",code/chardet/chardet_41.py,"Create a text file with a known encoding, ensure that the program successfully detects the encoding, verifies the match with the known encoding, tokenizes the text, and saves the tokens with the detected encoding.","Test the program with different text files of known encodings to ensure consistent and accurate encoding detection, verification, and text tokenization.","Verify that the program correctly utilizes the chardet API for encoding detection, comparison, text tokenization, and file writing.",,
247,click,1,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'divider' and 'divisor'. It should then calculate the result of dividing 'divider' by 'divisor' and print the result.,code/click/click_1.py,Enter '10' as the divider and '2' as the divisor. Ensure that the program correctly calculates and prints 'The Result: 5.0'.,Enter '15' as the divider and '3' as the divisor. Verify that the program computes and prints 'The Result: 5.0'.,Enter '20' as the divider and '4' as the divisor. Confirm that the program accurately calculates and prints 'The Result: 5.0'.,,
248,click,2,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'name'. It should then print a personalized greeting message using the provided name.,code/click/click_2.py,"Enter 'Alice' as the name. Confirm that the program prints 'Hello, Alice!'.","Enter 'John' as the name. Verify that the program prints 'Hello, John!'.",,,
249,click,3,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'number1' and 'number2'. It should then calculate the sum of 'number1' and 'number2' and print the result.,code/click/click_3.py,Enter '5' as the first number and '3' as the second number. Verify that the program correctly calculates and prints 'The sum is: 8'.,Enter '15' as the first number and '20' as the second number. Ensure that the program computes and prints 'The sum is: 35'.,Enter '10' as the first number and '7' as the second number. Confirm that the program accurately calculates and prints 'The sum is: 17'.,,
250,click,4,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'file'. It should then read the contents of the specified file and print them to the console.,code/click/click_4.py,"Create a file named 'sample.txt' with the contents 'Hello, world!'. Enter 'sample.txt' as the file path. Ensure that the program reads and prints 'Hello, world!'.",Create a file named 'data.txt' with the contents '12345'. Enter 'data.txt' as the file path. Confirm that the program reads and prints '12345'.,Create a file named 'test.txt' with the contents 'This is a test file.'. Enter 'test.txt' as the file path. Verify that the program reads and prints 'This is a test file.'.,,
251,click,5,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'number'. It should then check if the number is even or odd and print the corresponding message.,code/click/click_5.py,Enter '10' as the number. Verify that the program prints '10 is even'.,Enter '15' as the number. Ensure that the program prints '15 is odd'.,Enter '7' as the number. Confirm that the program prints '7 is odd'.,,
252,click,6,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'name' and 'age'. It should then print a personalized message that includes the provided name and age.,code/click/click_6.py,"Enter 'John' as the name and '25' as the age. Verify that the program prints 'Hello, John! You are 25 years old'.","Enter 'Alice' as the name and '30' as the age. Confirm that the program prints 'Hello, Alice! You are 30 years old'.","Enter 'Bob' as the name and '40' as the age. Ensure that the program prints 'Hello, Bob! You are 40 years old'.",,
253,click,7,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'name'. It should then check if the provided name is in a predefined list of names and print a corresponding message.,code/click/click_7.py,"Enter 'Dave' as the name. Ensure that the program prints 'Sorry, your name is not on the list'.","Enter 'John' as the name. Verify that the program prints 'Welcome, John!'.","Enter 'Alice' as the name. Confirm that the program prints 'Welcome, Alice!'.",,
254,click,8,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'length' and 'width'. It should then calculate the area of a rectangle with the given length and width and print the result.,code/click/click_8.py,Enter '5' as the length and '3' as the width. Verify that the program correctly calculates and prints 'The area of the rectangle is: 15.0'.,Enter '10' as the length and '7' as the width. Confirm that the program accurately calculates and prints 'The area of the rectangle is: 70.0'.,Enter '15' as the length and '20' as the width. Ensure that the program computes and prints 'The area of the rectangle is: 300.0'.,,
255,click,9,"Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'number'. It should then check if the number is positive, negative, or zero and print the corresponding message.",code/click/click_9.py,Enter '10' as the number. Verify that the program prints '10 is positive'.,Enter '-7' as the number. Confirm that the program prints '-7 is negative'.,Enter '0' as the number. Ensure that the program prints '0 is zero'.,,
256,click,10,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'base' and 'exponent'. It should then calculate the result of raising 'base' to the power of 'exponent' and print the result.,code/click/click_10.py,Enter '10' as the base and '0.5' as the exponent. Ensure that the program computes and prints 'The result is: 3.1622776601683795'.,Enter '5' as the base and '2' as the exponent. Confirm that the program accurately calculates and prints 'The result is: 25.0'.,Enter '2' as the base and '3' as the exponent. Verify that the program correctly calculates and prints 'The result is: 8.0'.,,
257,click,11,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'number'. It should then check if the number is prime or not and print the corresponding message.,code/click/click_11.py,Enter '7' as the number. Verify that the program prints '7 is prime'.,Enter '13' as the number. Ensure that the program prints '13 is prime'.,Enter '10' as the number. Confirm that the program prints '10 is not prime'.,,
258,click,12,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'radius' and 'height'. It should then calculate the volume of a cylinder with the given radius and height and print the result.,code/click/click_12.py,Enter '2' as the radius and '5' as the height. Verify that the program correctly calculates and prints 'The volume of the cylinder is: 62.83185307179586'.,Enter '3' as the radius and '10' as the height. Confirm that the program accurately calculates and prints 'The volume of the cylinder is: 282.7433388230814'.,Enter '5' as the radius and '8' as the height. Ensure that the program computes and prints 'The volume of the cylinder is: 628.3185307179587'.,,
259,click,13,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'number'. It should then check if the number is a palindrome or not and print the corresponding message.,code/click/click_13.py,Enter '12345' as the number. Confirm that the program prints '12345 is not a palindrome'.,Enter '121' as the number. Verify that the program prints '121 is a palindrome'.,Enter '1001' as the number. Ensure that the program prints '1001 is a palindrome'.,,
260,click,14,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'number1' and 'number2'. It should then calculate the product of 'number1' and 'number2' and print the result.,code/click/click_14.py,Enter '15' as the first number and '20' as the second number. Ensure that the program computes and prints 'The product is: 300'.,Enter '5' as the first number and '3' as the second number. Verify that the program correctly calculates and prints 'The product is: 15'.,Enter '10' as the first number and '7' as the second number. Confirm that the program accurately calculates and prints 'The product is: 70'.,,
261,click,15,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'string'. It should then check if the string is a palindrome or not and print the corresponding message.,code/click/click_15.py,Enter 'racecar' as the string. Verify that the program prints 'racecar is a palindrome'.,Enter 'madam' as the string. Ensure that the program prints 'madam is a palindrome'.,Enter 'hello' as the string. Confirm that the program prints 'hello is not a palindrome'.,,
262,click,16,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'number1' and 'number2'. It should then calculate the difference between 'number1' and 'number2' and print the result.,code/click/click_16.py,Enter '15' as the first number and '20' as the second number. Ensure that the program computes and prints 'The difference is: -5'.,Enter '10' as the first number and '5' as the second number. Verify that the program correctly calculates and prints 'The difference is: 5'.,Enter '20' as the first number and '7' as the second number. Confirm that the program accurately calculates and prints 'The difference is: 13'.,,
263,click,17,Create a Python program using the 'click' API to build a command-line tool. The program should accept a single input option: 'number'. It should then check if the number is a prime number or not and print the corresponding message.,code/click/click_17.py,Enter '10' as the number. Confirm that the program prints '10 is not a prime number'.,Enter '13' as the number. Ensure that the program prints '13 is a prime number'.,Enter '7' as the number. Verify that the program prints '7 is a prime number'.,,
264,click,18,Create a Python program using the 'click' API to build a command-line tool. The program should accept two input options: 'number1' and 'number2'. It should then calculate the quotient of 'number1' divided by 'number2' and print the result.,code/click/click_18.py,Enter '10' as the first number and '2' as the second number. Verify that the program correctly calculates and prints 'The quotient is: 5.0'.,Enter '20' as the first number and '4' as the second number. Confirm that the program accurately calculates and prints 'The quotient is: 5.0'.,Enter '15' as the first number and '3' as the second number. Ensure that the program computes and prints 'The quotient is: 5.0'.,,
288,datacompy,1,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on the 'employee_id' column, and produce a comparison report. Ensure that it reports matches and does not ignore extra columns.",code/datacompy/datacompy_1.py,Confirm that the program does not ignore extra columns during comparison.,Verify that the program produces a comparison report.,Ensure that the program correctly compares two dataframes for data matching.,,
289,datacompy,2,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on multiple columns ('employee_id' and 'department'), and produce a comparison report. Ensure that it reports matches and ignores extra columns.",code/datacompy/datacompy_2.py,Verify that the program produces a comparison report.,Confirm that the program ignores extra columns during comparison.,Ensure that the program correctly compares two dataframes for data matching based on multiple columns.,,
290,datacompy,3,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on a specific column ('employee_id'), and produce a comparison report. Ensure that it reports matches and ignores extra columns.",code/datacompy/datacompy_3.py,Verify that the program produces a comparison report.,Confirm that the program ignores extra columns during comparison.,Ensure that the program correctly compares two dataframes for data matching based on a specific column.,,
291,datacompy,4,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on a specific column ('employee_id'), and produce a comparison report. Ensure that it reports matches and includes extra columns in the comparison.",code/datacompy/datacompy_4.py,Confirm that the program includes extra columns in the comparison.,Verify that the program produces a comparison report.,Ensure that the program correctly compares two dataframes for data matching based on a specific column.,,
292,datacompy,5,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on multiple columns ('employee_id' and 'department'), and produce a comparison report. Ensure that it reports matches and does not ignore extra columns.",code/datacompy/datacompy_5.py,Confirm that the program does not ignore extra columns during comparison.,Verify that the program produces a comparison report.,Ensure that the program correctly compares two dataframes for data matching based on multiple columns.,,
295,datacompy,8,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on a specific column ('employee_id'), and produce a comparison report. Ensure that it reports matches and does not ignore extra columns.",code/datacompy/datacompy_8.py,Confirm that the program does not ignore extra columns during comparison.,Verify that the program produces a comparison report.,Ensure that the program correctly compares two dataframes for data matching based on a specific column.,,
297,datacompy,10,"Develop a Python program that utilizes the 'datacompy' API to compare two dataframes for data matching. The program should load two dataframes, compare them based on multiple columns ('employee_id' and 'department'), and produce a comparison report. Ensure that it reports matches and includes extra columns in the comparison.",code/datacompy/datacompy_10.py,Confirm that the program includes extra columns in the comparison.,Verify that the program produces a comparison report.,Ensure that the program correctly compares two dataframes for data matching based on multiple columns.,,
329,datasets,1,Develop a Python program using the 'datasets' API to load the IMDb dataset and process it with a BERT tokenizer from the 'transformers' API. The program should tokenize both the training and testing data from the IMDb dataset using the BERT tokenizer and print the processed data.,code/datasets/datasets_1.py,"Validate that the program effectively tokenizes the text data using the BERT tokenizer, ensuring that padding and truncation are applied correctly.",Confirm that the program successfully loads the IMDb dataset and retrieves the training and testing splits.,Check that the processed training and testing data is correctly printed and ready for use in natural language processing tasks.,,
330,datasets,2,"Develop a Python program using the 'datasets' API to load the COCO dataset and extract image captions for a specific image ID. The program should load the COCO dataset, select a random image ID, and retrieve the corresponding image captions. Finally, it should print the image ID and its associated captions.",code/datasets/datasets_2.py,Verify that the program retrieves and prints the image captions for the selected image ID.,Confirm that the program successfully loads the COCO dataset and selects a random image ID from the training set.,"Ensure that the program handles different image IDs and captions correctly, providing a consistent output for each run.",,
331,datasets,3,"Develop a Python program using the 'datasets' API to load the SQuAD dataset and extract a sample question and its corresponding answer span. The program should load the SQuAD dataset, select a random question, and print the question text along with its answer span.",code/datasets/datasets_3.py,Verify that the program successfully loads the SQuAD dataset and selects a random question from the training set.,Confirm that the program retrieves and prints the question text along with its corresponding answer span.,"Ensure that the program handles different questions and answer spans correctly, providing a consistent output for each run.",,
332,datasets,4,"Develop a Python program using the 'datasets' API to load the MNLI dataset and count the number of unique labels in the training set. The program should load the MNLI dataset, access the training labels, and count the unique label classes.",code/datasets/datasets_4.py,Ensure that the program consistently provides the same count of unique labels for the MNLI training set.,Verify that the program successfully loads the MNLI dataset and accesses the training labels.,Confirm that the program accurately counts the number of unique label classes in the training set.,,
333,datasets,5,"Develop a Python program using the 'datasets' API to load the WMT16 dataset and retrieve a translation pair (source and target language). The program should load the WMT16 dataset, select a random translation pair, and print the source and target language sentences.",code/datasets/datasets_5.py,Confirm that the program retrieves and prints the source and target language sentences for the selected pair.,Verify that the program successfully loads the WMT16 dataset and selects a random translation pair from the training set.,"Ensure that the program handles different translation pairs correctly, providing a consistent output for each run.",,
334,datasets,6,"Develop a Python program using the 'datasets' API to load the Iris dataset and calculate the mean sepal length for a specific species. The program should load the Iris dataset, select a specific species, and calculate the mean sepal length for that species.",code/datasets/datasets_6.py,Ensure that the program handles different species correctly and provides a consistent mean sepal length for each run.,"Confirm that the program successfully loads the Iris dataset and selects a specific species for analysis (e.g., ""setosa"").",Verify that the program accurately calculates the mean sepal length for the selected species.,,
335,datasets,7,"Develop a Python program using the 'datasets' API to load the WikiText-2 dataset and extract a random article. The program should load the WikiText-2 dataset, select a random article, and print its content.",code/datasets/datasets_7.py,Verify that the program successfully loads the WikiText-2 dataset and selects a random article from the training set.,Confirm that the program retrieves and prints the content of the selected random article.,Ensure that the program consistently provides different random articles for each run.,,
336,datasets,8,"Develop a Python program using the 'datasets' API to load the AmazonPolarity dataset and calculate the average length of positive and negative reviews. The program should load the AmazonPolarity dataset, separate positive and negative reviews, and calculate the average review length for each category.",code/datasets/datasets_8.py,Verify that the program successfully loads the AmazonPolarity dataset and separates positive and negative reviews.,Ensure that the program consistently provides the same average lengths for each category when run multiple times.,Confirm that the program accurately calculates the average review length for positive and negative reviews.,,
337,datasets,9,"Develop a Python program using the 'datasets' API to load the IWSLT dataset and retrieve a random translation pair (source and target language). The program should load the IWSLT dataset, select a random translation pair, and print the source and target language sentences.",code/datasets/datasets_9.py,Confirm that the program retrieves and prints the source and target language sentences for the selected pair.,Verify that the program successfully loads the IWSLT dataset and selects a random translation pair from the training set.,"Ensure that the program handles different translation pairs correctly, providing a consistent output for each run.",,
338,datasets,10,"Develop a Python program using the 'datasets' API to load the StanfordDogs dataset and list the unique dog breed names. The program should load the StanfordDogs dataset, access the labels, and print the unique dog breed names.",code/datasets/datasets_10.py,Verify that the program successfully loads the StanfordDogs dataset and accesses the label names.,Confirm that the program accurately lists the unique dog breed names in the dataset.,Ensure that the program consistently provides the same unique breed names when run multiple times.,,
339,datasets,11,"Develop a Python program using the 'datasets' API to load the C4 dataset and count the number of unique languages in the training set. The program should load the C4 dataset, access the training languages, and count the unique language codes.",code/datasets/datasets_11.py,Ensure that the program consistently provides the same count of unique languages for the C4 training set.,Confirm that the program accurately counts the number of unique language codes in the training set.,Verify that the program successfully loads the C4 dataset and accesses the training languages.,,
340,datasets,12,"Develop a Python program using the 'datasets' API to load the MultiNLI dataset and count the number of unique genres in the training set. The program should load the MultiNLI dataset, access the training genres, and count the unique genre labels.",code/datasets/datasets_12.py,Verify that the program successfully loads the MultiNLI dataset and accesses the training genres.,Confirm that the program accurately counts the number of unique genre labels in the training set.,Ensure that the program consistently provides the same count of unique genres for the MultiNLI training set.,,
341,datasets,13,"Develop a Python program using the 'datasets' API to load the TIMIT dataset and extract a random speech signal. The program should load the TIMIT dataset, select a random speech signal, and print the signal's waveform.",code/datasets/datasets_13.py,Confirm that the program retrieves and prints the waveform of the selected random speech signal.,Ensure that the program consistently provides different random speech signals for each run.,Verify that the program successfully loads the TIMIT dataset and selects a random speech signal from the training set.,,
342,datasets,14,"Develop a Python program using the 'datasets' API to load the GLUE dataset and count the number of unique tasks in the training set. The program should load the GLUE dataset, access the training tasks, and count the unique task names.",code/datasets/datasets_14.py,Verify that the program successfully loads the GLUE dataset and accesses the training tasks.,Ensure that the program consistently provides the same count of unique tasks for the GLUE training set.,Confirm that the program accurately counts the number of unique task names in the training set.,,
343,datasets,15,"Develop a Python program using the 'datasets' API to load the EuroParl dataset and retrieve a random translated sentence pair (source and target language). The program should load the EuroParl dataset, select a random translation pair, and print the source and target language sentences.",code/datasets/datasets_15.py,Confirm that the program retrieves and prints the source and target language sentences for the selected pair.,Verify that the program successfully loads the EuroParl dataset and selects a random translation pair from the training set.,"Ensure that the program handles different translation pairs correctly, providing a consistent output for each run.",,
344,datasets,16,"Develop a Python program using the 'datasets' API to load the WikiText-103 dataset and extract a random article. The program should load the WikiText-103 dataset, select a random article, and print its content.",code/datasets/datasets_16.py,Verify that the program successfully loads the WikiText-103 dataset and selects a random article from the training set.,Ensure that the program consistently provides different random articles for each run.,Confirm that the program retrieves and prints the content of the selected random article.,,
345,datasets,17,"Develop a Python program using the 'datasets' API to load the SAMSum dataset and extract a random conversation. The program should load the SAMSum dataset, select a random conversation, and print its content.",code/datasets/datasets_17.py,Ensure that the program consistently provides different random conversations for each run.,"Confirm that the program retrieves and prints the content of the selected random conversation, including all messages.",Verify that the program successfully loads the SAMSum dataset and selects a random conversation from the training set.,,
346,datasets,18,"Develop a Python program using the 'datasets' API to load the LJSpeech dataset and extract a random audio file. The program should load the LJSpeech dataset, select a random audio file, and play the audio.",code/datasets/datasets_18.py,Ensure that the program consistently provides different random audio files for each run.,Verify that the program successfully loads the LJSpeech dataset and selects a random audio file from the training set.,Confirm that the program retrieves and plays the selected random audio file.,,
347,datasets,19,"Develop a Python program using the 'datasets' API to load the ParaCrawl dataset and retrieve a random translated sentence pair (source and target language). The program should load the ParaCrawl dataset, select a random translation pair, and print the source and target language sentences.",code/datasets/datasets_19.py,Verify that the program successfully loads the ParaCrawl dataset and selects a random translation pair from the training set.,Confirm that the program retrieves and prints the source and target language sentences for the selected pair.,"Ensure that the program handles different translation pairs correctly, providing a consistent output for each run.",,
348,datasets,20,"Develop a Python program using the 'datasets' API to load the Yelp Polarity dataset and calculate the average length of positive and negative reviews. The program should load the Yelp Polarity dataset, separate positive and negative reviews, and calculate the average review length for each category.",code/datasets/datasets_20.py,Confirm that the program accurately calculates the average review length for positive and negative reviews.,Ensure that the program consistently provides the same average lengths for each category when run multiple times.,Verify that the program successfully loads the Yelp Polarity dataset and separates positive and negative reviews.,,
349,datasets,21,"Develop a Python program using the 'datasets' API to load the SNLI dataset and count the number of unique genres in the training set. The program should load the SNLI dataset, access the training genres, and count the unique genre labels.",code/datasets/datasets_21.py,Ensure that the program consistently provides the same count of unique genres for the SNLI training set.,Confirm that the program accurately counts the number of unique genre labels in the training set.,Verify that the program successfully loads the SNLI dataset and accesses the training genres.,,
350,datasets,22,"Develop a Python program using the 'datasets' API to load the OpenSubtitles dataset and extract a random subtitle. The program should load the OpenSubtitles dataset, select a random subtitle, and print its content.",code/datasets/datasets_22.py,Verify that the program successfully loads the OpenSubtitles dataset and selects a random subtitle from the training set.,Confirm that the program retrieves and prints the content of the selected random subtitle.,Ensure that the program consistently provides different random subtitles for each run.,,
351,datasets,23,"Develop a Python program using the 'datasets' API to load the TREC dataset and count the number of unique question types in the training set. The program should load the TREC dataset, access the training question types, and count the unique question type labels.",code/datasets/datasets_23.py,Verify that the program successfully loads the TREC dataset and accesses the training question types.,Confirm that the program accurately counts the number of unique question type labels in the training set.,Ensure that the program consistently provides the same count of unique question types for the TREC training set.,,
352,datasets,24,"Develop a Python program using the 'datasets' API to load the BigPatent dataset and retrieve a random patent document. The program should load the BigPatent dataset, select a random patent document, and print its content.",code/datasets/datasets_24.py,Verify that the program successfully loads the BigPatent dataset and selects a random patent document from the training set.,Confirm that the program retrieves and prints the content of the selected random patent document.,Ensure that the program consistently provides different random patent documents for each run.,,
353,datasets,25,"Develop a Python program using the 'datasets' API to load the COCO dataset and count the number of images with a specific annotation category. The program should load the COCO dataset, select a specific annotation category (e.g., ""person""), and count the number of images containing that category.",code/datasets/datasets_25.py,Confirm that the program accurately counts the number of images containing the selected category.,"Verify that the program successfully loads the COCO dataset and selects a specific annotation category (e.g., ""person"").",Ensure that the program consistently provides the same count of images with the specified category when run multiple times.,,
354,datasets,26,"Develop a Python program using the 'datasets' API to load the Quora Question Pairs dataset and count the number of duplicate question pairs in the training set. The program should load the Quora Question Pairs dataset, identify duplicate question pairs, and count their occurrences.",code/datasets/datasets_26.py,Verify that the program successfully loads the Quora Question Pairs dataset and identifies duplicate question pairs in the training set.,Confirm that the program accurately counts the number of duplicate question pairs.,Ensure that the program consistently provides the same count of duplicate pairs for the Quora Question Pairs training set when run multiple times.,,
355,datasets,27,"Develop a Python program using the 'datasets' API to load the SNLI dataset and count the number of unique premises in the training set. The program should load the SNLI dataset, access the training premises, and count the unique premise texts.",code/datasets/datasets_27.py,Verify that the program successfully loads the SNLI dataset and accesses the training premises.,Confirm that the program accurately counts the number of unique premise texts in the training set.,Ensure that the program consistently provides the same count of unique premises for the SNLI training set.,,
356,datasets,28,"Develop a Python program using the 'datasets' API to load the TED MultiTranslation dataset and retrieve a random translated speech. The program should load the TED MultiTranslation dataset, select a random translated speech, and print the source and target language transcripts.",code/datasets/datasets_28.py,"Ensure that the program handles different translated speeches correctly, providing a consistent output for each run.",Verify that the program successfully loads the TED MultiTranslation dataset and selects a random translated speech from the training set.,Confirm that the program retrieves and prints the source and target language transcripts for the selected speech.,,
357,datasets,29,"Develop a Python program using the 'datasets' API to load the Paws-X dataset and count the number of positive and negative sentence pairs in the training set. The program should load the Paws-X dataset, separate positive and negative pairs, and count their occurrences.",code/datasets/datasets_29.py,Confirm that the program accurately counts the number of positive and negative pairs.,Verify that the program successfully loads the Paws-X dataset and separates positive and negative sentence pairs in the training set.,Ensure that the program consistently provides the same counts for positive and negative pairs when run multiple times.,,
358,datasets,30,"Develop a Python program using the 'datasets' API to load the ChIP-Seq dataset and retrieve a random sequence. The program should load the ChIP-Seq dataset, select a random sequence, and print its content.",code/datasets/datasets_30.py,Confirm that the program retrieves and prints the content of the selected random sequence.,Ensure that the program consistently provides different random sequences for each run.,Verify that the program successfully loads the ChIP-Seq dataset and selects a random sequence from the training set.,,
359,datasets,31,"Develop a Python program using the 'datasets' API to load the OpenWebText dataset and extract a random web page document. The program should load the OpenWebText dataset, select a random web page document, and print its content.",code/datasets/datasets_31.py,Verify that the program successfully loads the OpenWebText dataset and selects a random web page document from the training set.,Ensure that the program consistently provides different random web page documents for each run.,Confirm that the program retrieves and prints the content of the selected random web page document.,,
360,datasets,32,"Develop a Python program using the 'datasets' API to load the BERT dataset and count the number of unique token types in the training set. The program should load the BERT dataset, access the training token types, and count the unique token types.",code/datasets/datasets_32.py,Confirm that the program accurately counts the number of unique token types in the training set.,Ensure that the program consistently provides the same count of unique token types for the BERT training set.,Verify that the program successfully loads the BERT dataset and accesses the training token types.,,
361,datasets,33,"Develop a Python program using the 'datasets' API to load the ELI5 dataset and extract a random explanation. The program should load the ELI5 dataset, select a random explanation, and print its content.",code/datasets/datasets_33.py,Verify that the program successfully loads the ELI5 dataset and selects a random explanation from the training set.,Confirm that the program retrieves and prints the content of the selected random explanation.,Ensure that the program consistently provides different random explanations for each run.,,
362,datasets,34,"Develop a Python program using the 'datasets' API to load the SQAD dataset and extract a random question and its corresponding answer span. The program should load the SQAD dataset, select a random question, and print the question text along with its answer span.",code/datasets/datasets_34.py,Confirm that the program retrieves and prints the question text along with its corresponding answer span.,"Ensure that the program handles different questions and answer spans correctly, providing a consistent output for each run.",Verify that the program successfully loads the SQAD dataset and selects a random question from the training set.,,
363,datasets,35,"Develop a Python program using the 'datasets' API to load the BookCorpus dataset and extract a random book summary. The program should load the BookCorpus dataset, select a random book summary, and print its content.",code/datasets/datasets_35.py,Verify that the program successfully loads the BookCorpus dataset and selects a random book summary from the training set.,Ensure that the program consistently provides different random book summaries for each run.,Confirm that the program retrieves and prints the content of the selected random book summary.,,
364,datasets,36,"Develop a Python program using the 'datasets' API to load the SQuAD 2.0 dataset and count the number of paragraphs that do not have an answer. The program should load the SQuAD 2.0 dataset, identify paragraphs without answers, and count their occurrences.",code/datasets/datasets_36.py,Verify that the program successfully loads the SQuAD 2.0 dataset and identifies paragraphs without answers in the validation set.,Ensure that the program consistently provides the same count of no-answer paragraphs for the SQuAD 2.0 dataset when run multiple times.,Confirm that the program accurately counts the number of paragraphs without answers.,,
365,datasets,37,"Develop a Python program using the 'datasets' API to load the Waymo Open Dataset and extract a random sensor data record. The program should load the Waymo Open Dataset, select a random sensor data record, and print its content.",code/datasets/datasets_37.py,Verify that the program successfully loads the Waymo Open Dataset and selects a random sensor data record from the training set.,Ensure that the program consistently provides different random sensor data records for each run.,Confirm that the program retrieves and prints the content of the selected random sensor data record.,,
366,datasets,38,"Develop a Python program using the 'datasets' API to load the WMT16 dataset and retrieve a random translated sentence pair (source and target language). The program should load the WMT16 dataset, select a random translation pair, and print the source and target language sentences.",code/datasets/datasets_38.py,Confirm that the program retrieves and prints the source and target language sentences for the selected pair.,Verify that the program successfully loads the WMT16 dataset and selects a random translation pair from the training set.,"Ensure that the program handles different translation pairs correctly, providing a consistent output for each run.",,
367,datasets,39,"Develop a Python program using the 'datasets' API to load the AdversarialNLI dataset and count the number of unique prompt types in the training set. The program should load the AdversarialNLI dataset, access the training prompt types, and count the unique prompt type labels.",code/datasets/datasets_39.py,Confirm that the program accurately counts the number of unique prompt type labels in the training set.,Verify that the program successfully loads the AdversarialNLI dataset and accesses the training prompt types.,Ensure that the program consistently provides the same count of unique prompt types for the AdversarialNLI training set.,,
368,datasets,40,"Develop a Python program using the 'datasets' API to load the TREC dataset and count the number of unique labels in the training set. The program should load the TREC dataset, access the training labels, and count the unique label names.",code/datasets/datasets_40.py,Ensure that the program consistently provides the same count of unique labels for the TREC training set.,Verify that the program successfully loads the TREC dataset and accesses the training labels.,Confirm that the program accurately counts the number of unique label names in the training set.,,
369,datasets,41,"Develop a Python program using the 'datasets' API to load the GPT-2 dataset and extract a random text prompt. The program should load the GPT-2 dataset, select a random text prompt, and print its content.",code/datasets/datasets_41.py,Ensure that the program consistently provides different random text prompts for each run.,Confirm that the program retrieves and prints the content of the selected random text prompt.,Verify that the program successfully loads the GPT-2 dataset and selects a random text prompt from the training set.,,
370,diffusers,1,"Write a Python program that utilizes the 'diffusers' API to generate an image based on the provided prompt, 'a photo of an astronaut riding a horse on the moon.'",code/diffusers/diffusers_1.py,"Verify that the saved image (""astronaut_rides_horse.png"") exists and can be opened.",Test the execution time of the code to ensure it's within reasonable limits.,Test whether the code successfully generates an image based on the provided prompt.,,
371,diffusers,2,"Write a Python program that utilizes the 'diffusers' API to generate a text-based output based on the provided prompt, 'Translate the following English sentence to French: ""Hello, how are you?""'.",code/diffusers/diffusers_2.py,Test whether the code successfully generates a text-based output based on the provided prompt.,"Verify that the output is a valid translation of the English sentence ""Hello, how are you?"" to French.",Test the execution time of the code to ensure it's within reasonable limits.,,
372,diffusers,3,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'I enjoy ____.'",code/diffusers/diffusers_3.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""I enjoy ____.""",Test the execution time of the code to ensure it's within reasonable limits.,,
373,diffusers,4,"Write a Python program that utilizes the 'diffusers' API to generate a summary of the provided text, 'In recent years, artificial intelligence has made significant advancements in various fields such as healthcare, finance, and transportation. AI technologies have been used to develop more accurate diagnostic tools, improve financial forecasting models, and enhance autonomous driving systems. These advancements have the potential to revolutionize industries and improve the quality of life for individuals around the world.'",code/diffusers/diffusers_4.py,Test the execution time of the code to ensure it's within reasonable limits.,Test whether the code successfully generates a summary of the provided text.,Verify that the output is a concise and accurate summary of the provided text.,,
374,diffusers,5,"Write a Python program that utilizes the 'diffusers' API to generate a list of keywords related to the provided prompt, 'What are the benefits of exercise?'.",code/diffusers/diffusers_5.py,Test whether the code successfully generates a list of keywords related to the provided prompt.,Test the execution time of the code to ensure it's within reasonable limits.,"Verify that the output is a list of relevant keywords related to the prompt ""What are the benefits of exercise?""",,
375,diffusers,6,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'If I could travel anywhere in the world, I would go to ____.'",code/diffusers/diffusers_6.py,"Verify that the output is a list of valid completions for the prompt ""If I could travel anywhere in the world, I would go to ____.""",Test whether the code successfully generates a list of possible completions for the provided prompt.,Test the execution time of the code to ensure it's within reasonable limits.,,
376,diffusers,7,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'The best way to learn a new programming language is ____.'",code/diffusers/diffusers_7.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,Test the execution time of the code to ensure it's within reasonable limits.,"Verify that the output is a list of valid completions for the prompt ""The best way to learn a new programming language is ____.""",,
377,diffusers,8,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the advantages of using cloud computing?'.",code/diffusers/diffusers_8.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the advantages of using cloud computing?""",Test the execution time of the code to ensure it's within reasonable limits.,,
378,diffusers,9,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the steps to bake a chocolate cake?'",code/diffusers/diffusers_9.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the steps to bake a chocolate cake?""",Test the execution time of the code to ensure it's within reasonable limits.,,
379,diffusers,10,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the benefits of reading books?'",code/diffusers/diffusers_10.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the benefits of reading books?""",Test the execution time of the code to ensure it's within reasonable limits.,,
380,diffusers,11,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the steps to learn a new programming language?'",code/diffusers/diffusers_11.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the steps to learn a new programming language?""",Test the execution time of the code to ensure it's within reasonable limits.,,
381,diffusers,12,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the benefits of regular exercise?'",code/diffusers/diffusers_12.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the benefits of regular exercise?""",Test the execution time of the code to ensure it's within reasonable limits.,,
382,diffusers,13,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the benefits of learning a new language?'",code/diffusers/diffusers_13.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the benefits of learning a new language?""",Test the execution time of the code to ensure it's within reasonable limits.,,
383,diffusers,14,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the benefits of meditation?'",code/diffusers/diffusers_14.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the benefits of meditation?""",Test the execution time of the code to ensure it's within reasonable limits.,,
384,diffusers,15,"Write a Python program that utilizes the 'diffusers' API to generate a list of possible completions for the provided prompt, 'What are the benefits of a healthy diet?'",code/diffusers/diffusers_15.py,Test whether the code successfully generates a list of possible completions for the provided prompt.,"Verify that the output is a list of valid completions for the prompt ""What are the benefits of a healthy diet?""",Test the execution time of the code to ensure it's within reasonable limits.,,
411,emoji,1,Create a Python program that uses the 'emoji' API to flip emojis within a text. The program should identify emojis and convert them to their text representation and vice versa. Run the program on a list of sample texts containing emojis.,code/emoji/emoji_1.py,Confirm that the program handles texts without emojis without errors.,Ensure that the program correctly identifies and converts emojis within the text.,Verify that the program accurately converts emoji text representations back to emojis.,,
412,emoji,2,Create a Python program that uses the 'emoji' API to count the number of emojis in a given text. The program should take a text as input and return the count of emojis present in the text. Run the program on a list of sample texts containing emojis.,code/emoji/emoji_2.py,Verify that the program handles texts without emojis and returns a count of 0.,Confirm that the program accurately counts multiple occurrences of the same emoji in a single text.,Ensure that the program correctly counts the number of emojis in the given text.,,
413,emoji,3,"Create a Python program that uses the 'emoji' API to replace specific emojis in a given text with custom text. The program should take a text and a dictionary of emoji replacements as input, and return the updated text with the specified replacements. Run the program on a list of sample texts containing emojis and a dictionary of replacements.",code/emoji/emoji_3.py,Ensure that the program correctly replaces the specified emojis with the custom text in the given text.,Verify that the program handles texts without emojis and returns the original text without any changes.,Confirm that the program accurately replaces multiple occurrences of the same emoji with the specified replacement text.,,
414,emoji,4,Create a Python program that uses the 'emoji' API to extract all emojis from a given text. The program should take a text as input and return a list of all emojis present in the text. Run the program on a list of sample texts containing emojis.,code/emoji/emoji_4.py,Verify that the program handles texts without emojis and returns an empty list.,Ensure that the program correctly extracts all emojis from the given text and returns them as a list.,Confirm that the program accurately extracts multiple occurrences of the same emoji in a single text.,,
415,emoji,5,Create a Python program that uses the 'emoji' API to generate a random emoji. The program should generate a random emoji from the available emoji list and print it. Run the program multiple times to verify that it generates different emojis each time.,code/emoji/emoji_5.py,Ensure that the program handles the random selection of emojis without errors.,Confirm that the program prints the generated emoji correctly.,Verify that the program generates a random emoji from the available emoji list each time it is run.,,
416,emoji,6,"Create a Python program that uses the 'emoji' API to check if a given text contains any emojis. The program should take a text as input and return True if the text contains at least one emoji, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis.",code/emoji/emoji_6.py,Verify that the program returns True for texts containing emojis and False for texts without emojis.,Confirm that the program handles texts with both emojis and non-emojis without errors.,Ensure that the program correctly identifies if the given text contains any emojis.,,
417,emoji,7,Create a Python program that uses the 'emoji' API to convert a given text into a string of emoji flags. The program should take a country code as input and return a string of emoji flags representing the country. Run the program on a list of sample country codes.,code/emoji/emoji_7.py,Verify that the program handles invalid country codes and returns an empty string.,Confirm that the program accurately converts multiple country codes into their respective emoji flags.,Ensure that the program correctly converts the given country code into a string of emoji flags.,,
418,emoji,8,Create a Python program that uses the 'emoji' API to find the most commonly used emoji in a given text. The program should take a text as input and return the emoji that appears the most number of times in the text. Run the program on a list of sample texts containing emojis.,code/emoji/emoji_8.py,Confirm that the program accurately identifies the most commonly used emoji when multiple emojis have the same count.,Verify that the program handles texts without emojis and returns None.,Ensure that the program correctly identifies the most commonly used emoji in the given text.,,
419,emoji,9,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emojis. The program should take a text and a list of emojis as input and return True if the text contains any of the specified emojis, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emojis to check for each text.",code/emoji/emoji_9.py,Verify that the program returns True for texts containing any of the specified emojis and False for texts without any of the specified emojis.,Ensure that the program correctly identifies if the given text contains any of the specified emojis.,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emojis.",,
420,emoji,10,Create a Python program that uses the 'emoji' API to convert a given text into a string of emoji letters. The program should take a text as input and replace each letter in the text with its corresponding emoji letter. Run the program on a list of sample texts containing letters.,code/emoji/emoji_10.py,Verify that the program handles non-letter characters in the text and leaves them unchanged.,Confirm that the program accurately converts multiple occurrences of the same letter into the corresponding emoji letter.,Ensure that the program correctly converts each letter in the given text into its corresponding emoji letter.,,
421,emoji,11,"Create a Python program that uses the 'emoji' API to check if a given text contains any skin tone modifiers. The program should take a text as input and return True if the text contains any skin tone modifiers, and False otherwise. Run the program on a list of sample texts containing skin tone modifiers and non-skin tone modifiers.",code/emoji/emoji_11.py,Ensure that the program correctly identifies if the given text contains any skin tone modifiers.,Verify that the program returns True for texts containing skin tone modifiers and False for texts without skin tone modifiers.,Confirm that the program handles texts with both skin tone modifiers and non-skin tone modifiers without errors.,,
422,emoji,12,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji categories. The program should take a text and a list of emoji categories as input and return True if the text contains any emojis from the specified categories, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji categories to check for each text.",code/emoji/emoji_12.py,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified categories.",Verify that the program returns True for texts containing emojis from any of the specified categories and False for texts without any emojis from the specified categories.,Ensure that the program correctly identifies if the given text contains any emojis from the specified categories.,,
423,emoji,13,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji aliases. The program should take a text and a list of emoji aliases as input and return True if the text contains any of the specified emoji aliases, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji aliases to check for each text.",code/emoji/emoji_13.py,Verify that the program returns True for texts containing any of the specified emoji aliases and False for texts without any of the specified emoji aliases.,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji aliases.",Ensure that the program correctly identifies if the given text contains any of the specified emoji aliases.,,
424,emoji,14,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji patterns. The program should take a text and a list of emoji patterns as input and return True if the text contains any emojis that match the specified patterns, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji patterns to check for each text.",code/emoji/emoji_14.py,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji patterns.",Verify that the program returns True for texts containing emojis that match any of the specified patterns and False for texts without any emojis that match the specified patterns.,Ensure that the program correctly identifies if the given text contains any emojis that match the specified patterns.,,
425,emoji,15,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji keywords. The program should take a text and a list of emoji keywords as input and return True if the text contains any emojis that match the specified keywords, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji keywords to check for each text.",code/emoji/emoji_15.py,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji keywords.",Ensure that the program correctly identifies if the given text contains any emojis that match the specified keywords.,Verify that the program returns True for texts containing emojis that match any of the specified keywords and False for texts without any emojis that match the specified keywords.,,
426,emoji,16,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji tags. The program should take a text and a list of emoji tags as input and return True if the text contains any emojis that match the specified tags, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji tags to check for each text.",code/emoji/emoji_16.py,Ensure that the program correctly identifies if the given text contains any emojis that match the specified tags.,Verify that the program returns True for texts containing emojis that match any of the specified tags and False for texts without any emojis that match the specified tags.,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji tags.",,
427,emoji,17,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji names. The program should take a text and a list of emoji names as input and return True if the text contains any emojis that match the specified names, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji names to check for each text.",code/emoji/emoji_17.py,Ensure that the program correctly identifies if the given text contains any emojis that match the specified names.,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji names.",Verify that the program returns True for texts containing emojis that match any of the specified names and False for texts without any emojis that match the specified names.,,
428,emoji,18,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji codes. The program should take a text and a list of emoji codes as input and return True if the text contains any emojis that match the specified codes, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji codes to check for each text.",code/emoji/emoji_18.py,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji codes.",Ensure that the program correctly identifies if the given text contains any emojis that match the specified codes.,Verify that the program returns True for texts containing emojis that match any of the specified codes and False for texts without any emojis that match the specified codes.,,
429,emoji,19,"Create a Python program that uses the 'emoji' API to check if a given text contains any specific emoji versions. The program should take a text and a list of emoji versions as input and return True if the text contains any emojis that match the specified versions, and False otherwise. Run the program on a list of sample texts containing emojis and non-emojis, and specify a list of emoji versions to check for each text.",code/emoji/emoji_19.py,"Confirm that the program handles texts with both emojis and non-emojis, and correctly checks for multiple specified emoji versions.",Verify that the program returns True for texts containing emojis that match any of the specified versions and False for texts without any emojis that match the specified versions.,Ensure that the program correctly identifies if the given text contains any emojis that match the specified versions.,,
452,evaluate,1,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a dataset. The program should load the IMDb dataset, shuffle it, select the first 1000 examples, and then use the 'lvwerra/distilbert-imdb' model to classify the text as either 'NEGATIVE' or 'POSITIVE.' The results should be printed.",code/evaluate/evaluate_1.py,Test that the 'eval_results' variable contains the expected sentiment analysis results for the selected dataset.,Test that the IMDb dataset is loaded correctly and contains 1000 examples.,Test that the 'lvwerra/distilbert-imdb' model is successfully used for text classification.,,
453,evaluate,2,"Create a Python program that uses the 'evaluate' API to calculate the cosine similarity between two sets of vectors. You should generate two sets of random vectors, each containing 100 vectors with 300 dimensions. Then, calculate the cosine similarity between the corresponding vectors in both sets and print the results.",code/evaluate/evaluate_2.py,"Test that the ""similarity_scores"" variable contains the expected cosine similarity scores.","Test that two sets of random vectors are generated correctly, each with 100 vectors of 300 dimensions.",Test that the cosine similarity between corresponding vectors in both sets is calculated accurately.,,
454,evaluate,3,"Create a Python program that uses the 'evaluate' API to perform object detection on an image. The program should load an image, use the 'ultralytics/yolov5s' model to perform object detection, and then display the detected objects with their labels and confidence scores.",code/evaluate/evaluate_3.py,"Test that the program correctly displays the detected objects with labels, confidence scores, and bounding boxes.",Test that the image is loaded successfully for object detection.,Test that the 'ultralytics/yolov5s' model is used for object detection.,,
455,evaluate,4,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a given text using a custom model. The program should allow the user to input a text, then use the custom sentiment analysis model to classify the text as either 'Negative', 'Neutral', or 'Positive'. The result should be printed.",code/evaluate/evaluate_4.py,Test that the custom sentiment analysis model is successfully used to classify the text as 'Negative,Test that the program allows the user to input text for sentiment analysis.,Test that the sentiment result is correctly printed.,,
456,evaluate,5,"Create a Python program that uses the 'evaluate' API to perform named entity recognition (NER) on a text. The program should take a text as input, use the 'dbmdz/bert-large-cased-finetuned-conll03-english' model for NER, and print the recognized named entities with their labels.",code/evaluate/evaluate_5.py,Test that the program allows the user to input text for named entity recognition.,Test that the recognized named entities with their labels are correctly printed.,Test that the 'dbmdz/bert-large-cased-finetuned-conll03-english' model is successfully used for NER.,,
457,evaluate,6,"Create a Python program that uses the 'evaluate' API to perform image classification. The program should load an image, use the 'google/vit-base-patch16' model to classify the image, and print the top predicted classes along with their confidence scores.",code/evaluate/evaluate_6.py,Test that the image is loaded successfully for image classification.,Test that the 'google/vit-base-patch16' model is used for image classification.,Test that the top predicted classes and their confidence scores are correctly printed.,,
458,evaluate,7,"Create a Python program that uses the 'evaluate' API to perform text summarization on a given text. The program should allow the user to input a text, then use the 'sshleifer/distilbart-cnn-12-3' model for text summarization and print the summarized text.",code/evaluate/evaluate_7.py,Test that the 'sshleifer/distil bart-cnn-12-3' model is successfully used for text summarization.,Test that the program allows the user to input text for summarization.,Test that the summarized text is correctly printed.,,
459,evaluate,8,"Create a Python program that uses the 'evaluate' API to perform text translation. The program should take a text in one language as input, use the 'Helsinki-NLP/opus-mt-en-fr' model to translate it to French, and then print the translated text.",code/evaluate/evaluate_8.py,Test that the translated text is correctly printed.,Test that the program allows the user to input text for translation.,Test that the 'Helsinki-NLP/opus-mt-en-fr' model is successfully used for translation.,,
460,evaluate,9,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a dataset of customer reviews. The program should load the customer reviews dataset, preprocess the text, and use the 'textblob' model to classify the sentiment of each review as 'Positive', 'Neutral', or 'Negative'. The results should be stored in a CSV file.",code/evaluate/evaluate_9.py,Test that the customer reviews dataset is loaded correctly.,Test that the text is preprocessed to lowercase.,Test that the sentiment analysis using the 'textblob' model and the storage of results in a CSV file are both successful.,,
461,evaluate,10,"Create a Python program that uses the 'evaluate' API to perform image segmentation on an image. The program should load an image, use the 'pytorch/vision-deeplabv3' model to perform image segmentation, and then display the segmented image.",code/evaluate/evaluate_10.py,Test that the segmented image is correctly displayed.,Test that the 'pytorch/vision-deeplabv3' model is used for image segmentation.,Test that the image is loaded successfully for image segmentation.,,
462,evaluate,11,"Create a Python program that uses the 'evaluate' API to perform question answering on a given passage of text. The program should take a passage and a question as input, use the 'deepset/bert-base-cased-squad2' model for question answering, and print the answer.",code/evaluate/evaluate_11.py,Test that the 'deepset/bert-base-cased-squad2' model is successfully used for question answering.,Test that the program allows the user to input a passage and a question for question answering.,Test that the answer is correctly printed.,,
463,evaluate,12,"Create a Python program that uses the 'evaluate' API to perform language detection on a given text. The program should take a text as input, use the 'joeddav/xlm-roberta-large-xnli' model for language detection, and print the detected language.",code/evaluate/evaluate_12.py,Test that the detected language is correctly printed.,Test that the 'joeddav/xlm-roberta-large-xnli' model is successfully used for language detection.,Test that the program allows the user to input text for language detection.,,
464,evaluate,13,"Create a Python program that uses the 'evaluate' API to perform text classification on a given text. The program should take a text as input, use the 'cardiffnlp/twitter-roberta-base-sentiment' model for text classification, and print the predicted sentiment label.",code/evaluate/evaluate_13.py,Test that the 'cardiffnlp/twitter-roberta-base-sentiment' model is successfully used for text classification.,Test that the predicted sentiment label is correctly printed.,Test that the program allows the user to input text for text classification.,,
465,evaluate,14,"Create a Python program that uses the 'evaluate' API to perform document classification on a set of text documents. The program should load a collection of text documents, use the 'distilbert-base-uncased' model to classify each document, and print the predicted categories.",code/evaluate/evaluate_14.py,Test that a collection of text documents is loaded and read from a directory.,Test that document classification results with predicted categories and confidence scores are correctly printed.,Test that the program loads the document classification model correctly.,,
466,evaluate,15,Create a Python program that uses the 'evaluate' API to perform text generation. The program should use the 'gpt2' model to generate a creative text based on a provided prompt.,code/evaluate/evaluate_15.py,Test that the generated text is correctly printed.,Test that the 'gpt2' model is successfully used for generating creative text.,Test that the program allows the user to input a prompt for text generation.,,
467,evaluate,16,"Create a Python program that uses the 'evaluate' API to perform text classification on a dataset of product reviews. The program should load the product reviews dataset, preprocess the text, and use the 'textblob' model to classify the sentiment of each review as 'Positive', 'Neutral', or 'Negative'. The results should be stored in a JSON file.",code/evaluate/evaluate_16.py,Test that the text is preprocessed to lowercase.,Test that the sentiment analysis using the 'textblob' model and the storage of results in a JSON file are both successful.,Test that the product reviews dataset is loaded correctly.,,
468,evaluate,17,"Create a Python program that uses the 'evaluate' API to perform text translation. The program should take a text in one language as input, use the 'Helsinki-NLP/opus-mt-fr-en' model to translate it to English, and then print the translated text.",code/evaluate/evaluate_17.py,Test that the program allows the user to input text for translation.,Test that the 'Helsinki-NLP/opus-mt-fr-en' model is successfully used for translation.,Test that the translated text to English is correctly printed.,,
469,evaluate,18,"Create a Python program that uses the 'evaluate' API to perform text summarization on a given text. The program should allow the user to input a text, then use the 'facebook/bart-large-cnn' model for text summarization and print the summarized text.",code/evaluate/evaluate_18.py,Test that the program allows the user to input text for summarization.,Test that the 'facebook/bart-large-cnn' model is successfully used for text summarization.,Test that the summarized text is correctly printed.,,
470,evaluate,19,"Create a Python program that uses the 'evaluate' API to perform language detection on a given text. The program should take a text as input, use the 'textblob' model for language detection, and print the detected language.",code/evaluate/evaluate_19.py,Test that the detected language is correctly printed.,Test that the program allows the user to input text for language detection.,Test that the 'textblob' model is successfully used for language detection.,,
471,evaluate,20,"Create a Python program that uses the 'evaluate' API to perform text classification on a given text. The program should take a text as input, use the 'textblob' model for text classification, and print the predicted sentiment label.",code/evaluate/evaluate_20.py,Test that the 'textblob' model is successfully used for text classification.,Test that the predicted sentiment label is correctly printed.,Test that the program allows the user to input text for text classification.,,
472,evaluate,21,"Create a Python program that uses the 'evaluate' API to perform named entity recognition (NER) on a text. The program should take a text as input, use the 'deepset/bert-large-ner' model for NER, and print the recognized named entities with their labels.",code/evaluate/evaluate_21.py,Test that the program allows the user to input text for named entity recognition.,Test that the recognized named entities with their labels are correctly printed.,Test that the 'deepset/bert-large-ner' model is successfully used for NER.,,
474,evaluate,23,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a dataset of tweets. The program should load the tweet dataset, preprocess the text, and use the 'textblob' model to classify the sentiment of each tweet as 'Positive', 'Neutral', or 'Negative'. The results should be stored in a JSON file.",code/evaluate/evaluate_23.py,Test that the text is preprocessed to lowercase.,Test that the tweet dataset is loaded correctly.,Test that the sentiment analysis using the 'textblob' model and the storage of results in a JSON file are both successful.,,
477,evaluate,26,"Create a Python program that uses the 'evaluate' API to perform text summarization on a given text. The program should take a text as input, use the 'facebook/bart-large-cnn' model for text summarization, and print the summarized text.",code/evaluate/evaluate_26.py,Test that the program allows the user to input text for summarization.,Test that the 'facebook/bart-large-cnn' model is successfully used for text summarization.,Test that the summarized text is correctly printed.,,
478,evaluate,27,"Create a Python program that uses the 'evaluate' API to perform text translation. The program should take a text in one language as input, use the 'Helsinki-NLP/opus-mt-en-de' model to translate it to German, and then print the translated text.",code/evaluate/evaluate_27.py,Test that the program allows the user to input text for translation.,Test that the 'Helsinki-NLP/opus-mt-en-de' model is successfully used for translation.,Test that the translated text to German is correctly printed.,,
480,evaluate,29,"Create a Python program that uses the 'evaluate' API to perform document classification on a set of text documents. The program should load a collection of text documents, use the 'textblob' model to classify each document, and print the predicted categories.",code/evaluate/evaluate_29.py,"Test that the ""textblob"" model is used to classify each document into ""Positive,"" ""Neutral,"" or ""Negative"" categories.",Test that the program successfully loads a collection of text documents from a specified directory.,Test that the predicted categories for each document are correctly printed.,,
482,evaluate,31,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a dataset of movie reviews. The program should load the movie reviews dataset, preprocess the text, and use the 'textblob' model to classify the sentiment of each review as 'Positive', 'Neutral', or 'Negative'. The results should be stored in a CSV file.",code/evaluate/evaluate_31.py,Test that the movie reviews dataset is loaded correctly.,Test that the text is preprocessed to lowercase.,Test that the sentiment analysis using the 'textblob' model and the storage of results in a CSV file are both successful.,,
487,evaluate,36,"Create a Python program that uses the 'evaluate' API to perform sentiment analysis on a dataset of tweets. The program should load the tweet dataset, preprocess the text, and use the 'cardiffnlp/twitter-roberta-base-sentiment' model to classify the sentiment of each tweet. The results should be stored in a CSV file.",code/evaluate/evaluate_36.py,Test that the sentiment analysis model is loaded correctly.,Test that the tweet dataset is loaded correctly.,Test that the text is preprocessed to lowercase and sentiment analysis results are stored in a CSV file.,,
489,evaluate,38,"Create a Python program that uses the 'evaluate' API to perform text translation. The program should take a text in one language as input, use the 'Helsinki-NLP/opus-mt-de-en' model to translate it to English, and then print the translated text.",code/evaluate/evaluate_38.py,Test that the program allows the user to input text for translation.,Test that the 'Helsinki-NLP/opus-mt-de-en' model is successfully used for translation.,Test that the translated text to English is correctly printed.,,
492,evaluate,41,"Create a Python program that uses the 'evaluate' API to perform named entity recognition (NER) on a text. The program should take a text as input, use the 'bert-base-cased' model for NER, and print the recognized named entities with their labels.",code/evaluate/evaluate_41.py,Test that the program allows the user to input text for named entity recognition.,Test that the 'bert-base-cased' model is successfully used for NER.,Test that the recognized named entities with their labels are correctly printed.,,
493,gymnasium,1,"Develop a Python program using the 'gymnasium' API to play the 'CarRacing-v2' environment. The program should control a car within the environment using keyboard inputs (W, A, S, D) to accelerate, turn left, reverse, and turn right, respectively.",code/gymnasium/gymnasium_1.py,Test the program with different keyboard inputs and verify that the car's movements are responsive and accurate.,Validate that the program interprets the keyboard inputs correctly and controls the car within the environment as expected.,Ensure that the program successfully creates and runs the 'CarRacing-v2' environment from the 'gymnasium' API.,,
494,gymnasium,2,"Develop a Python program using the 'gymnasium' API to play the 'Pong-v0' environment. The program should control the paddle within the environment using keyboard inputs (W, S) to move up and down, respectively.",code/gymnasium/gymnasium_2.py,Ensure that the program successfully creates and runs the 'Pong-v0' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the paddle within the environment as expected.,Test the program with different keyboard inputs and verify that the paddle's movements are responsive and accurate.,,
495,gymnasium,3,"Develop a Python program using the 'gymnasium' API to play the 'LunarLander-v2' environment. The program should control the lunar lander within the environment using keyboard inputs (W, A, S, D) to fire the main engine, rotate left, rotate right, and do nothing, respectively.",code/gymnasium/gymnasium_3.py,Validate that the program interprets the keyboard inputs correctly and controls the lunar lander within the environment as expected.,Test the program with different keyboard inputs and verify that the lunar lander's movements are responsive and accurate.,Ensure that the program successfully creates and runs the 'LunarLander-v2' environment from the 'gymnasium' API.,,
496,gymnasium,4,"Develop a Python program using the 'gymnasium' API to play the 'MountainCar-v0' environment. The program should control the car within the environment using keyboard inputs (A, S, D) to move left, do nothing, and move right, respectively.",code/gymnasium/gymnasium_4.py,Test the program with different keyboard inputs and verify that the car's movements are responsive and accurate.,Validate that the program interprets the keyboard inputs correctly and controls the car within the environment as expected.,Ensure that the program successfully creates and runs the 'MountainCar-v0' environment from the 'gymnasium' API.,,
497,gymnasium,5,"Develop a Python program using the 'gymnasium' API to play the 'CartPole-v1' environment. The program should control the cart within the environment using keyboard inputs (A, D) to move left and right, respectively.",code/gymnasium/gymnasium_5.py,Ensure that the program successfully creates and runs the 'CartPole-v1' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the cart within the environment as expected.,Test the program with different keyboard inputs and verify that the cart's movements are responsive and accurate.,,
498,gymnasium,6,"Develop a Python program using the 'gymnasium' API to play the 'Breakout-v0' environment. The program should control the paddle within the environment using keyboard inputs (A, D) to move left and right, respectively.",code/gymnasium/gymnasium_6.py,Validate that the program interprets the keyboard inputs correctly and controls the paddle within the environment as expected.,Ensure that the program successfully creates and runs the 'Breakout-v0' environment from the 'gymnasium' API.,Test the program with different keyboard inputs and verify that the paddle's movements are responsive and accurate.,,
499,gymnasium,7,"Develop a Python program using the 'gymnasium' API to play the 'SpaceInvaders-v0' environment. The program should control the spaceship within the environment using keyboard inputs (A, D, W, S, Space) to move left, move right, move up, move down, and fire, respectively.",code/gymnasium/gymnasium_7.py,Ensure that the program successfully creates and runs the 'SpaceInvaders-v0' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the spaceship within the environment as expected.,Test the program with different keyboard inputs and verify that the spaceship's movements and firing are responsive and accurate.,,
500,gymnasium,8,"Develop a Python program using the 'gymnasium' API to play the 'Acrobot-v1' environment. The program should control the two joints of the acrobot within the environment using keyboard inputs (W, A, S, D) to apply torque to the first joint clockwise, counterclockwise, to the second joint clockwise, and counterclockwise, respectively.",code/gymnasium/gymnasium_8.py,Validate that the program interprets the keyboard inputs correctly and controls the acrobot within the environment as expected.,Ensure that the program successfully creates and runs the 'Acrobot-v1' environment from the 'gymnasium' API.,Test the program with different keyboard inputs and verify that the acrobot's movements are responsive and accurate.,,
501,gymnasium,9,"Develop a Python program using the 'gymnasium' API to play the 'FrozenLake-v0' environment. The program should control the agent within the environment using keyboard inputs (W, A, S, D) to move up, left, down, and right, respectively.",code/gymnasium/gymnasium_9.py,Ensure that the program successfully creates and runs the 'FrozenLake-v0' environment from the 'gymnasium' API.,Test the program with different keyboard inputs and verify that the agent's movements are responsive and accurate.,Validate that the program interprets the keyboard inputs correctly and controls the agent within the environment as expected.,,
502,gymnasium,10,"Develop a Python program using the 'gymnasium' API to play the 'Taxi-v3' environment. The program should control the taxi within the environment using keyboard inputs (W, A, S, D) to move up, left, down, and right, respectively.",code/gymnasium/gymnasium_10.py,Validate that the program interprets the keyboard inputs correctly and controls the taxi within the environment as expected.,Ensure that the program successfully creates and runs the 'Taxi-v3' environment from the 'gymnasium' API.,Test the program with different keyboard inputs and verify that the taxi's movements are responsive and accurate.,,
503,gymnasium,11,Develop a Python program using the 'gymnasium' API to play the 'Blackjack-v0' environment. The program should play the game of blackjack by taking actions based on the current state of the game.,code/gymnasium/gymnasium_11.py,Validate that the program takes actions based on the current state of the game and interacts with the environment correctly.,Ensure that the program successfully creates and runs the 'Blackjack-v0' environment from the 'gymnasium' API.,Test the program with different initial states of the game and verify that the actions taken by the program are appropriate.,,
504,gymnasium,12,"Develop a Python program using the 'gymnasium' API to play the 'FrozenLake8x8-v0' environment. The program should control the agent within the environment using keyboard inputs (W, A, S, D) to move up, left, down, and right, respectively.",code/gymnasium/gymnasium_12.py,Test the program with different keyboard inputs and verify that the agent's movements are responsive and accurate.,Ensure that the program successfully creates and runs the 'FrozenLake8x8-v0' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the agent within the environment as expected.,,
505,gymnasium,13,"Develop a Python program using the 'gymnasium' API to play the 'MsPacman-v0' environment. The program should control Ms. Pacman within the environment using keyboard inputs (A, D, W, S) to move left, move right, move up, and move down, respectively.",code/gymnasium/gymnasium_13.py,Test the program with different keyboard inputs and verify that Ms. Pacman's movements are responsive and accurate.,Ensure that the program successfully creates and runs the 'MsPacman-v0' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls Ms. Pacman within the environment as expected.,,
506,gymnasium,14,"Develop a Python program using the 'gymnasium' API to play the 'SpaceInvaders-v4' environment. The program should control the spaceship within the environment using keyboard inputs (A, D, W, S, Space) to move left, move right, move up, move down, and fire, respectively.",code/gymnasium/gymnasium_14.py,Ensure that the program successfully creates and runs the 'SpaceInvaders-v4' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the spaceship within the environment as expected.,Test the program with different keyboard inputs and verify that the spaceship's movements and firing are responsive and accurate.,,
507,gymnasium,15,"Develop a Python program using the 'gymnasium' API to play the 'Assault-v0' environment. The program should control the spaceship within the environment using keyboard inputs (A, D, W, S, Space) to move left, move right, move up, move down, and fire, respectively.",code/gymnasium/gymnasium_15.py,Ensure that the program successfully creates and runs the 'Assault-v0' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the spaceship within the environment as expected.,Test the program with different keyboard inputs and verify that the spaceship's movements and firing are responsive and accurate.,,
509,gymnasium,17,"Develop a Python program using the 'gymnasium' API to play the 'Breakout-v4' environment. The program should control the paddle within the environment using keyboard inputs (A, D) to move left and right, respectively.",code/gymnasium/gymnasium_17.py,Ensure that the program successfully creates and runs the 'Breakout-v4' environment from the 'gymnasium' API.,Validate that the program interprets the keyboard inputs correctly and controls the paddle within the environment as expected.,Test the program with different keyboard inputs and verify that the paddle's movements are responsive and accurate.,,
510,gymnasium,18,Develop a Python program using the 'gymnasium' API to play the 'LunarLanderContinuous-v2' environment. The program should control the lunar lander within the environment using continuous actions to fire the main engine and rotate the lander left or right.,code/gymnasium/gymnasium_18.py,Test the program with different initial states of the lunar lander and verify that the actions taken by the program are appropriate.,Validate that the program takes continuous actions to control the lunar lander within the environment.,Ensure that the program successfully creates and runs the 'LunarLanderContinuous-v2' environment from the 'gymnasium' API.,,
511,gymnasium,19,Develop a Python program using the 'gymnasium' API to play the 'Ant-v2' environment. The program should control the ant within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_19.py,Validate that the program takes continuous actions to control the ant within the environment.,Ensure that the program successfully creates and runs the 'Ant-v2' environment from the 'gymnasium' API.,Test the program with different initial states of the ant and verify that the actions taken by the program are appropriate.,,
512,gymnasium,20,Develop a Python program using the 'gymnasium' API to play the 'Hopper-v2' environment. The program should control the hopper within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_20.py,Ensure that the program successfully creates and runs the 'Hopper-v2' environment from the 'gymnasium' API.,Validate that the program takes continuous actions to control the hopper within the environment.,Test the program with different initial states of the hopper and verify that the actions taken by the program are appropriate.,,
513,gymnasium,21,Develop a Python program using the 'gymnasium' API to play the 'Humanoid-v2' environment. The program should control the humanoid within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_21.py,Ensure that the program successfully creates and runs the 'Humanoid-v2' environment from the 'gymnasium' API.,Test the program with different initial states of the humanoid and verify that the actions taken by the program are appropriate.,Validate that the program takes continuous actions to control the humanoid within the environment.,,
514,gymnasium,22,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolAnt-v1' environment. The program should control the ant within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_22.py,Validate that the program takes continuous actions to control the ant within the environment.,Test the program with different initial states of the ant and verify that the actions taken by the program are appropriate.,Ensure that the program successfully creates and runs the 'RoboschoolAnt-v1' environment from the 'gymnasium' API.,,
515,gymnasium,23,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolHumanoid-v1' environment. The program should control the humanoid within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_23.py,Ensure that the program successfully creates and runs the 'RoboschoolHumanoid-v1' environment from the 'gymnasium' API.,Test the program with different initial states of the humanoid and verify that the actions taken by the program are appropriate.,Validate that the program takes continuous actions to control the humanoid within the environment.,,
516,gymnasium,24,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolWalker2d-v1' environment. The program should control the walker within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_24.py,Test the program with different initial states of the walker and verify that the actions taken by the program are appropriate.,Ensure that the program successfully creates and runs the 'RoboschoolWalker2d-v1' environment from the 'gymnasium' API.,Validate that the program takes continuous actions to control the walker within the environment.,,
517,gymnasium,25,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolHalfCheetah-v1' environment. The program should control the half cheetah within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_25.py,Test the program with different initial states of the half cheetah and verify that the actions taken by the program are appropriate.,Ensure that the program successfully creates and runs the 'RoboschoolHalfCheetah-v1' environment from the 'gymnasium' API.,Validate that the program takes continuous actions to control the half cheetah within the environment.,,
518,gymnasium,26,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolHumanoidFlagrun-v1' environment. The program should control the humanoid within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_26.py,Validate that the program takes continuous actions to control the humanoid within the environment.,Test the program with different initial states of the humanoid and verify that the actions taken by the program are appropriate.,Ensure that the program successfully creates and runs the 'RoboschoolHumanoidFlagrun-v1' environment from the 'gymnasium' API.,,
519,gymnasium,27,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolInvertedPendulum-v1' environment. The program should control the inverted pendulum within the environment using continuous actions to apply torque to the joint.,code/gymnasium/gymnasium_27.py,Ensure that the program successfully creates and runs the 'RoboschoolInvertedPendulum-v1' environment from the 'gymnasium' API.,Validate that the program takes continuous actions to control the inverted pendulum within the environment.,Test the program with different initial states of the inverted pendulum and verify that the actions taken by the program are appropriate.,,
520,gymnasium,28,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolInvertedDoublePendulum-v1' environment. The program should control the inverted double pendulum within the environment using continuous actions to apply torque to the joints.,code/gymnasium/gymnasium_28.py,Test the program with different initial states of the inverted double pendulum and verify that the actions taken by the program are appropriate.,Validate that the program takes continuous actions to control the inverted double pendulum within the environment.,Ensure that the program successfully creates and runs the 'RoboschoolInvertedDoublePendulum-v1' environment from the 'gymnasium' API.,,
523,gymnasium,31,Develop a Python program using the 'gymnasium' API to play the 'RoboschoolHumanoidFlagrunHarder-v1' environment. The program should control the humanoid within the environment using continuous actions to move its joints and apply torque.,code/gymnasium/gymnasium_31.py,Test the program with different initial states of the humanoid and verify that the actions taken by the program are appropriate.,Validate that the program takes continuous actions to control the humanoid within the environment.,Ensure that the program successfully creates and runs the 'RoboschoolHumanoidFlagrunHarder-v1' environment from the 'gymnasium' API.,,
534,holidays,1,Create a Python program using the 'holidays' API to check if a specified date is a public holiday in a given country or region.,code/holidays/holidays_1.py,Verify that the program accurately identifies a date that is not a public holiday in the specified country or region.,Test if the program correctly identifies a known public holiday in the specified country or region.,Check the program's behavior when using an invalid date or an unsupported country code.,,
535,holidays,2,Create a Python program using the 'holidays' API to list all the public holidays in a specific country or region for a given year.,code/holidays/holidays_2.py,Check the program for performance with a year that has a large number of holidays.,Verify that the program correctly handles a country code that is not supported by the holidays API.,Test if the program accurately lists all known public holidays in the specified country for a given year.,,
536,holidays,3,"Create a Python program using the 'holidays' API to calculate the number of working days between two specified dates in a particular country or region, excluding public holidays.",code/holidays/holidays_3.py,Verify that the program handles cases where the start date is later than the end date.,Test if the program correctly calculates the number of working days between two specified dates in the specified country or region.,Check the program with a country that has a large number of public holidays.,,
537,holidays,4,Create a Python program using the 'holidays' API to determine the next upcoming public holiday in a specified country or region.,code/holidays/holidays_4.py,Verify the program's behavior when there are no upcoming public holidays in the rest of the year.,Test if the program accurately identifies the next upcoming public holiday in the specified country or region.,Check the program for performance with a country that has many holidays throughout the year.,,
538,holidays,5,Create a Python program using the 'holidays' API to check if a specific date is a public holiday in a given state or province of a country.,code/holidays/holidays_5.py,Verify that the program accurately identifies a date that is not a public holiday in the specified state or province.,Check the program for performance with a state or province that has a large number of public holidays.,Test if the program correctly identifies a known public holiday in the specified state or province of the country.,,
539,holidays,6,Create a Python program using the 'holidays' API to list all the public holidays in a specific state or province of a country for a given year.,code/holidays/holidays_6.py,Test if the program accurately lists all known public holidays in the specified state or province for a given year.,Verify that the program correctly handles a state code that is not supported by the holidays API.,Check the program for performance with a state or province that has a large number of public holidays.,,
540,holidays,7,"Create a Python program using the 'holidays' API to calculate the number of working days between two specified dates in a particular state or province of a country, excluding public holidays.",code/holidays/holidays_7.py,Verify that the program handles cases where the start date is later than the end date.,Test if the program correctly calculates the number of working days between two specified dates in the specified state or province of the country.,Check the program with a state or province that has a large number of public holidays.,,
541,holidays,8,Create a Python program using the 'holidays' API to determine the next upcoming public holiday in a specified state or province of a country.,code/holidays/holidays_8.py,Check the program for performance with a state or province that has many holidays throughout the year.,Verify the program\'s behavior when there are no upcoming public holidays in the rest of the year.,Test if the program accurately identifies the next upcoming public holiday in the specified state or province of the country.,,
542,holidays,9,"Create a Python program using the 'holidays' API to check if a specific date is a public holiday in a given region (e.g., a city or district) within a country.",code/holidays/holidays_9.py,Verify that the program accurately identifies a date that is not a public holiday in the specified region.,Check the program for performance with a region that has a large number of public holidays.,Test if the program correctly identifies a known public holiday in the specified region within the country.,,
543,holidays,10,"Create a Python program using the 'holidays' API to list all the public holidays in a specific region (e.g., a city or district) within a country for a given year.",code/holidays/holidays_10.py,Check the program for performance with a region that has a large number of public holidays.,Verify that the program correctly handles a region code that is not supported by the holidays API.,Test if the program accurately lists all known public holidays in the specified region within the country for a given year.,,
544,holidays,11,"Create a Python program using the 'holidays' API to calculate the number of working days between two specified dates in a particular region (e.g., a city or district) within a country, excluding public holidays.",code/holidays/holidays_11.py,Verify that the program handles cases where the start date is later than the end date.,Test if the program correctly calculates the number of working days between two specified dates in the specified region within the country.,Check the program with a region that has a large number of public holidays.,,
545,holidays,12,"Create a Python program using the 'holidays' API to determine the next upcoming public holiday in a specified region (e.g., a city or district) within a country.",code/holidays/holidays_12.py,Check the program for performance with a region that has many holidays throughout the year.,Test if the program accurately identifies the next upcoming public holiday in the specified region within the country.,Verify the program\'s behavior when there are no upcoming public holidays in the rest of the year.,,
546,holidays,13,Create a Python program using the 'holidays' API to check if a specific date is a public holiday in a given country and state.,code/holidays/holidays_13.py,Verify that the program accurately identifies a date that is not a public holiday in the specified state.,Test if the program correctly identifies a known public holiday in the specified state of the country.,Check the program for performance with a state that has a large number of public holidays.,,
547,holidays,14,Create a Python program using the 'holidays' API to list all the public holidays in a specific country and state for a given year.,code/holidays/holidays_14.py,Test if the program accurately lists all known public holidays in the specified state of the country for a given year.,Verify that the program correctly handles a state code that is not supported by the holidays API.,Check the program for performance with a state that has a large number of public holidays.,,
548,holidays,15,"Create a Python program using the 'holidays' API to calculate the number of working days between two specified dates in a particular country and state, excluding public holidays.",code/holidays/holidays_15.py,Verify that the program handles cases where the start date is later than the end date.,Test if the program correctly calculates the number of working days between two specified dates in the specified state of the country.,Check the program with a state that has a large number of public holidays.,,
549,holidays,16,Create a Python program using the 'holidays' API to determine the next upcoming public holiday in a specified country and state.,code/holidays/holidays_16.py,Test if the program accurately identifies the next upcoming public holiday in the specified state of the country.,Verify the program\'s behavior when there are no upcoming public holidays in the rest of the year.,Check the program for performance with a state that has many holidays throughout the year.,,
550,holidays,17,"Create a Python program using the 'holidays' API to check if a specific date is a public holiday in a given region (e.g., a city or district) within a country and state.",code/holidays/holidays_17.py,Verify that the program accurately identifies a date that is not a public holiday in the specified region.,Test if the program correctly identifies a known public holiday in the specified region within the country and state.,Check the program for performance with a region that has a large number of public holidays.,,
551,holidays,18,"Create a Python program using the 'holidays' API to list all the public holidays in a specific region (e.g., a city or district) within a country and state for a given year.",code/holidays/holidays_18.py,Check the program for performance with a region that has a large number of public holidays.,Verify that the program correctly handles a region code that is not supported by the holidays API.,Test if the program accurately lists all known public holidays in the specified region within the country and state for a given year.,,
552,holidays,19,"Create a Python program using the 'holidays' API to calculate the number of working days between two specified dates in a particular region (e.g., a city or district) within a country and state, excluding public holidays.",code/holidays/holidays_19.py,Verify that the program handles cases where the start date is later than the end date.,Check the program with a region that has a large number of public holidays.,Test if the program correctly calculates the number of working days between two specified dates in the specified region within the country and state.,,
553,holidays,20,"Create a Python program using the 'holidays' API to determine the next upcoming public holiday in a specified region (e.g., a city or district) within a country and state.",code/holidays/holidays_20.py,Test if the program accurately identifies the next upcoming public holiday in the specified region within the country and state.,Check the program for performance with a region that has many holidays throughout the year.,Verify the program\'s behavior when there are no upcoming public holidays in the rest of the year.,,
575,hypothesis,1,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that simulates creating a goal in a hypothetical 'waspfinder' application. This function should take goal data as input and make a POST request to a test API. The 'hypothesis' library will be used to generate various goal data parameters and verify the behavior of the function.,code/hypothesis/hypothesis_1.py,Validate that the 'create_goal_dry_run' function behaves correctly when making a POST request with generated goal data.,Test that the program successfully generates and tests hypothetical goal data for the 'create_goal_dry_run' function.,Ensure that the 'create_goal_dry_run' function handles various data types and edge cases when interacting with the test API.,,
576,hypothesis,2,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that calculates the factorial of a given number. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the factorial function.,code/hypothesis/hypothesis_2.py,Ensure that the 'factorial' function handles edge cases such as 0 and negative numbers correctly.,Validate that the 'factorial' function correctly calculates the factorial of the generated input numbers.,Test that the program successfully generates and tests hypothetical input numbers for the 'factorial' function.,,
577,hypothesis,3,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a palindrome. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the palindrome checking function.,code/hypothesis/hypothesis_3.py,Ensure that the 'is_palindrome' function handles edge cases such as empty strings and strings with special characters correctly.,Test that the program successfully generates and tests hypothetical input strings for the 'is_palindrome' function.,Validate that the 'is_palindrome' function correctly identifies palindromes among the generated input strings.,,
578,hypothesis,4,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that sorts a list of integers in ascending order. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the sorting function.,code/hypothesis/hypothesis_4.py,Test that the program successfully generates and tests hypothetical input lists for the 'sort_list' function.,Validate that the 'sort_list' function correctly sorts the generated input lists in ascending order.,Ensure that the 'sort_list' function handles edge cases such as empty lists and lists with duplicate elements correctly.,,
579,hypothesis,5,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that calculates the sum of all prime numbers up to a given number. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the sum calculation function.,code/hypothesis/hypothesis_5.py,Test that the program successfully generates and tests hypothetical input numbers for the 'sum_primes' function.,Ensure that the 'sum_primes' function handles edge cases such as 0 and negative numbers correctly.,Validate that the 'sum_primes' function correctly calculates the sum of all prime numbers up to the generated input numbers.,,
580,hypothesis,6,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of integers is sorted in ascending order. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the sorting check function.,code/hypothesis/hypothesis_6.py,Test that the program successfully generates and tests hypothetical input lists for the 'is_sorted' function.,Validate that the 'is_sorted' function correctly identifies whether the generated input lists are sorted in ascending order.,Ensure that the 'is_sorted' function handles edge cases such as empty lists and lists with duplicate elements correctly.,,
581,hypothesis,7,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that calculates the Fibonacci sequence up to a given number of terms. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the Fibonacci sequence calculation function.,code/hypothesis/hypothesis_7.py,Test that the program successfully generates and tests hypothetical input numbers for the 'fibonacci' function.,Ensure that the 'fibonacci' function handles edge cases such as 0 and negative numbers correctly.,Validate that the 'fibonacci' function correctly calculates the Fibonacci sequence up to the generated input numbers.,,
582,hypothesis,8,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given number is a perfect square. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the perfect square checking function.,code/hypothesis/hypothesis_8.py,Validate that the 'is_perfect_square' function correctly identifies whether the generated input numbers are perfect squares.,Ensure that the 'is_perfect_square' function handles edge cases such as 0 and negative numbers correctly.,Test that the program successfully generates and tests hypothetical input numbers for the 'is_perfect_square' function.,,
583,hypothesis,9,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any duplicate elements. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the duplicate checking function.,code/hypothesis/hypothesis_9.py,Validate that the 'has_duplicates' function correctly identifies whether the generated input lists contain any duplicate elements.,Ensure that the 'has_duplicates' function handles edge cases such as empty lists and lists with only unique elements correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_duplicates' function.,,
584,hypothesis,10,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that calculates the sum of all even numbers up to a given number. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the sum calculation function.,code/hypothesis/hypothesis_10.py,Test that the program successfully generates and tests hypothetical input numbers for the 'sum_even_numbers' function.,Ensure that the 'sum_even_numbers' function handles edge cases such as 0 and negative numbers correctly.,Validate that the 'sum_even_numbers' function correctly calculates the sum of all even numbers up to the generated input numbers.,,
585,hypothesis,11,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of integers contains any negative numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the negative number checking function.,code/hypothesis/hypothesis_11.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_negative_numbers' function.,Ensure that the 'has_negative_numbers' function handles edge cases such as empty lists and lists with only non-negative numbers correctly.,Validate that the 'has_negative_numbers' function correctly identifies whether the generated input lists contain any negative numbers.,,
586,hypothesis,12,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid email address. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the email address validation function.,code/hypothesis/hypothesis_12.py,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_email' function.,Validate that the 'is_valid_email' function correctly identifies whether the generated input strings are valid email addresses.,Ensure that the 'is_valid_email' function handles edge cases such as empty strings and strings without the '@' symbol correctly.,,
587,hypothesis,13,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings is sorted in lexicographic order. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the sorting check function.,code/hypothesis/hypothesis_13.py,Validate that the 'is_lexicographically_sorted' function correctly identifies whether the generated input lists are sorted in lexicographic order.,Ensure that the 'is_lexicographically_sorted' function handles edge cases such as empty lists and lists with duplicate elements correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'is_lexicographically_sorted' function.,,
588,hypothesis,14,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given number is a prime number. The 'hypothesis' library will be used to generate various input numbers and verify the correctness of the prime number checking function.,code/hypothesis/hypothesis_14.py,Ensure that the 'is_prime' function handles edge cases such as 0 and 1 correctly.,Test that the program successfully generates and tests hypothetical input numbers for the 'is_prime' function.,Validate that the 'is_prime' function correctly identifies whether the generated input numbers are prime numbers.,,
589,hypothesis,15,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of integers contains any even numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the even number checking function.,code/hypothesis/hypothesis_15.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_even_numbers' function.,Ensure that the 'has_even_numbers' function handles edge cases such as empty lists and lists with only odd numbers correctly.,Validate that the 'has_even_numbers' function correctly identifies whether the generated input lists contain any even numbers.,,
590,hypothesis,16,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid URL. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the URL validation function.,code/hypothesis/hypothesis_16.py,Validate that the 'is_valid_url' function correctly identifies whether the generated input strings are valid URLs.,Ensure that the 'is_valid_url' function handles edge cases such as empty strings and strings without the 'http://' or 'https://' prefix correctly.,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_url' function.,,
591,hypothesis,17,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any empty strings. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the empty string checking function.,code/hypothesis/hypothesis_17.py,Ensure that the 'has_empty_strings' function handles edge cases such as empty lists and lists with only non-empty strings correctly.,Validate that the 'has_empty_strings' function correctly identifies whether the generated input lists contain any empty strings.,Test that the program successfully generates and tests hypothetical input lists for the 'has_empty_strings' function.,,
592,hypothesis,18,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of integers contains any prime numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the prime number checking function.,code/hypothesis/hypothesis_18.py,Validate that the 'has_prime_numbers' function correctly identifies whether the generated input lists contain any prime numbers.,Test that the program successfully generates and tests hypothetical input lists for the 'has_prime_numbers' function.,Ensure that the 'has_prime_numbers' function handles edge cases such as empty lists and lists with only non-prime numbers correctly.,,
593,hypothesis,19,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid phone number. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the phone number validation function.,code/hypothesis/hypothesis_19.py,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_phone_number' function.,Ensure that the 'is_valid_phone_number' function handles edge cases such as empty strings and strings with special characters correctly.,Validate that the 'is_valid_phone_number' function correctly identifies whether the generated input strings are valid phone numbers.,,
594,hypothesis,20,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any uppercase letters. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the uppercase letter checking function.,code/hypothesis/hypothesis_20.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_uppercase_letters' function.,Validate that the 'has_uppercase_letters' function correctly identifies whether the generated input lists contain any uppercase letters.,Ensure that the 'has_uppercase_letters' function handles edge cases such as empty lists and lists with only lowercase letters correctly.,,
595,hypothesis,21,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid password. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the password validation function.,code/hypothesis/hypothesis_21.py,Ensure that the 'is_valid_password' function handles edge cases such as empty strings and strings without the required characters correctly.,Validate that the 'is_valid_password' function correctly identifies whether the generated input strings are valid passwords.,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_password' function.,,
596,hypothesis,22,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any palindromes. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the palindrome checking function.,code/hypothesis/hypothesis_22.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_palindromes' function.,Validate that the 'has_palindromes' function correctly identifies whether the generated input lists contain any palindromes.,Ensure that the 'has_palindromes' function handles edge cases such as empty lists and lists with only non-palindrome strings correctly.,,
597,hypothesis,23,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of integers contains any odd numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the odd number checking function.,code/hypothesis/hypothesis_23.py,Ensure that the 'has_odd_numbers' function handles edge cases such as empty lists and lists with only even numbers correctly.,Validate that the 'has_odd_numbers' function correctly identifies whether the generated input lists contain any odd numbers.,Test that the program successfully generates and tests hypothetical input lists for the 'has_odd_numbers' function.,,
598,hypothesis,24,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid username. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the username validation function.,code/hypothesis/hypothesis_24.py,Ensure that the 'is_valid_username' function handles edge cases such as empty strings and strings with special characters correctly.,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_username' function.,Validate that the 'is_valid_username' function correctly identifies whether the generated input strings are valid usernames.,,
599,hypothesis,25,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any lowercase letters. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the lowercase letter checking function.,code/hypothesis/hypothesis_25.py,Ensure that the 'has_lowercase_letters' function handles edge cases such as empty lists and lists with only uppercase letters correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_lowercase_letters' function.,Validate that the 'has_lowercase_letters' function correctly identifies whether the generated input lists contain any lowercase letters.,,
600,hypothesis,26,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid credit card number. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the credit card number validation function.,code/hypothesis/hypothesis_26.py,Validate that the 'is_valid_credit_card_number' function correctly identifies whether the generated input strings are valid credit card numbers.,Ensure that the 'is_valid_credit_card_number' function handles edge cases such as empty strings and strings with special characters correctly.,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_credit_card_number' function.,,
601,hypothesis,27,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the number checking function.,code/hypothesis/hypothesis_27.py,Ensure that the 'has_numbers' function handles edge cases such as empty lists and lists with only non-numeric strings correctly.,Validate that the 'has_numbers' function correctly identifies whether the generated input lists contain any numbers.,Test that the program successfully generates and tests hypothetical input lists for the 'has_numbers' function.,,
602,hypothesis,28,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid IPv4 address. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the IPv4 address validation function.,code/hypothesis/hypothesis_28.py,Validate that the 'is_valid_ipv4_address' function correctly identifies whether the generated input strings are valid IPv4 addresses.,Ensure that the 'is_valid_ipv4_address' function handles edge cases such as empty strings and strings with invalid IP address formats correctly.,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_ipv4_address' function.,,
603,hypothesis,29,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any special characters. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the special character checking function.,code/hypothesis/hypothesis_29.py,Ensure that the 'has_special_characters' function handles edge cases such as empty lists and lists with only strings without special characters correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_special_characters' function.,Validate that the 'has_special_characters' function correctly identifies whether the generated input lists contain any special characters.,,
604,hypothesis,30,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given string is a valid date in the format 'YYYY-MM-DD'. The 'hypothesis' library will be used to generate various input strings and verify the correctness of the date validation function.,code/hypothesis/hypothesis_30.py,Test that the program successfully generates and tests hypothetical input strings for the 'is_valid_date' function.,Validate that the 'is_valid_date' function correctly identifies whether the generated input strings are valid dates in the format 'YYYY-MM-DD'.,Ensure that the 'is_valid_date' function handles edge cases such as empty strings and strings with invalid date formats correctly.,,
605,hypothesis,31,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any whitespace characters. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the whitespace character checking function.,code/hypothesis/hypothesis_31.py,Validate that the 'has_whitespace_characters' function correctly identifies whether the generated input lists contain any whitespace characters.,Test that the program successfully generates and tests hypothetical input lists for the 'has_whitespace_characters' function.,Ensure that the 'has_whitespace_characters' function handles edge cases such as empty lists and lists with only strings without whitespace characters correctly.,,
607,hypothesis,33,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any email addresses. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the email address checking function.,code/hypothesis/hypothesis_33.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_email_addresses' function.,Validate that the 'has_email_addresses' function correctly identifies whether the generated input lists contain any email addresses.,Ensure that the 'has_email_addresses' function handles edge cases such as empty lists and lists with only strings without email addresses correctly.,,
608,hypothesis,34,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any valid phone numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the phone number checking function.,code/hypothesis/hypothesis_34.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_valid_phone_numbers' function.,Ensure that the 'has_valid_phone_numbers' function handles edge cases such as empty lists and lists with only strings without valid phone numbers correctly.,Validate that the 'has_valid_phone_numbers' function correctly identifies whether the generated input lists contain any valid phone numbers.,,
609,hypothesis,35,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any valid URLs. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the URL checking function.,code/hypothesis/hypothesis_35.py,Validate that the 'has_valid_urls' function correctly identifies whether the generated input lists contain any valid URLs.,Ensure that the 'has_valid_urls' function handles edge cases such as empty lists and lists with only strings without valid URLs correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_valid_urls' function.,,
610,hypothesis,36,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any valid email addresses. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the email address checking function.,code/hypothesis/hypothesis_36.py,Validate that the 'has_valid_emails' function correctly identifies whether the generated input lists contain any valid email addresses.,Ensure that the 'has_valid_emails' function handles edge cases such as empty lists and lists with only strings without valid email addresses correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_valid_emails' function.,,
611,hypothesis,37,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any valid credit card numbers. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the credit card number checking function.,code/hypothesis/hypothesis_37.py,Test that the program successfully generates and tests hypothetical input lists for the 'has_valid_credit_card_numbers' function.,Ensure that the 'has_valid_credit_card_numbers' function handles edge cases such as empty lists and lists with only strings without valid credit card numbers correctly.,Validate that the 'has_valid_credit_card_numbers' function correctly identifies whether the generated input lists contain any valid credit card numbers.,,
612,hypothesis,38,Develop a Python program using the 'hypothesis' API to create and test a hypothetical function. The program should utilize 'hypothesis' to generate test cases for a function that checks if a given list of strings contains any valid dates in the format 'YYYY-MM-DD'. The 'hypothesis' library will be used to generate various input lists and verify the correctness of the date checking function.,code/hypothesis/hypothesis_38.py,Validate that the 'has_valid_dates' function correctly identifies whether the generated input lists contain any valid dates in the format 'YYYY-MM-DD'.,Ensure that the 'has_valid_dates' function handles edge cases such as empty lists and lists with only strings without valid dates correctly.,Test that the program successfully generates and tests hypothetical input lists for the 'has_valid_dates' function.,,
616,ibis-framework,1,"Create a Python program using the 'ibis-framework' API to work with data tables and schemas. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, define a schema, and display the table and its schema.",code/ibis-framework/ibis-framework_1.py,Ensure that the 'ibis-framework' API operations and interactions within the program are functioning as expected.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,Check if the program correctly displays the 'ibis' data table and its schema.,,
617,ibis-framework,2,"Create a Python program using the 'ibis-framework' API to perform basic data manipulation operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, filter rows based on a condition, select specific columns, and perform aggregation operations on the table.",code/ibis-framework/ibis-framework_2.py,Check if the program correctly filters rows based on a condition and selects specific columns.,Ensure that the program accurately performs aggregation operations on the table and displays the aggregated results.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
618,ibis-framework,3,"Create a Python program using the 'ibis-framework' API to perform join operations on two data tables. The program should define two sample data tables using Pandas DataFrames and convert them to 'ibis' tables. You need to interact with the 'ibis-framework' library to load the data, define a join condition, and perform the join operation on the tables.",code/ibis-framework/ibis-framework_3.py,Check if the program correctly defines the join condition and performs the join operation on the tables.,Ensure that the program displays the joined table with the expected results.,Verify that the program successfully converts the Pandas DataFrames into 'ibis' tables.,,
619,ibis-framework,4,"Create a Python program using the 'ibis-framework' API to perform data aggregation and grouping operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, group the table by a specific column, and perform aggregation operations on the grouped data.",code/ibis-framework/ibis-framework_4.py,Ensure that the program accurately performs aggregation operations on the grouped data and displays the aggregated results.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,Check if the program correctly groups the table by a specific column.,,
620,ibis-framework,5,"Create a Python program using the 'ibis-framework' API to perform data filtering and sorting operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, filter rows based on a condition, and sort the table based on a specific column.",code/ibis-framework/ibis-framework_5.py,Ensure that the program accurately sorts the table based on a specific column and displays the sorted results.,Check if the program correctly filters rows based on a condition.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
621,ibis-framework,6,"Create a Python program using the 'ibis-framework' API to perform data transformation operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, transform the table by adding a new column, and rename existing columns.",code/ibis-framework/ibis-framework_6.py,Check if the program correctly adds a new column to the table by performing a transformation operation.,Ensure that the program accurately renames existing columns and displays the transformed table with the expected results.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
622,ibis-framework,7,"Create a Python program using the 'ibis-framework' API to perform data aggregation and filtering operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, filter rows based on a condition, and perform aggregation operations on the filtered data.",code/ibis-framework/ibis-framework_7.py,Ensure that the program accurately performs aggregation operations on the filtered data and displays the aggregated results.,Check if the program correctly filters rows based on a condition.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
623,ibis-framework,8,"Create a Python program using the 'ibis-framework' API to perform data transformation and aggregation operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, transform the table by adding a new column, and perform aggregation operations on the transformed data.",code/ibis-framework/ibis-framework_8.py,Ensure that the program accurately performs aggregation operations on the transformed data and displays the aggregated results.,Check if the program correctly adds a new column to the table by performing a transformation operation.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
624,ibis-framework,9,"Create a Python program using the 'ibis-framework' API to perform data filtering and grouping operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, filter rows based on a condition, and group the table by a specific column.",code/ibis-framework/ibis-framework_9.py,Ensure that the program accurately groups the table by a specific column and displays the grouped results.,Check if the program correctly filters rows based on a condition.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
626,ibis-framework,11,"Create a Python program using the 'ibis-framework' API to perform data transformation and filtering operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, transform the table by adding a new column, and filter rows based on a condition.",code/ibis-framework/ibis-framework_11.py,Ensure that the program accurately filters rows based on a condition and displays the filtered results.,Check if the program correctly adds a new column to the table by performing a transformation operation.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
627,ibis-framework,12,"Create a Python program using the 'ibis-framework' API to perform data transformation and sorting operations on a data table. The program should define a sample data table using a Pandas DataFrame and convert it to an 'ibis' table. You need to interact with the 'ibis-framework' library to load the data, transform the table by adding a new column, and sort the table based on a specific column.",code/ibis-framework/ibis-framework_12.py,Ensure that the program accurately sorts the table based on a specific column and displays the sorted results.,Check if the program correctly adds a new column to the table by performing a transformation operation.,Verify that the program successfully converts a Pandas DataFrame into an 'ibis' table.,,
657,json-tricks,1,"Create a Python program using the 'json-tricks' API to demonstrate custom JSON encoding. In the program, define a custom class and implement a 'json_encode' method that returns a dictionary with specific attributes to be included in the JSON representation. Use the 'dumps' function from 'json-tricks' to serialize the custom class object into a JSON string with custom encoding.",code/json-tricks/json-tricks_1.py,Verify that the program successfully encodes the custom class object into a JSON string with the specified attributes.,Check if the JSON string representation contains only the relevant attributes as defined in the 'json_encode' method.,Ensure that the 'json-tricks' API for custom JSON encoding is functioning as expected within the program.,,
658,json-tricks,2,Use the 'json-tricks' API to demonstrate custom JSON decoding in a Python program. Create a program that defines a custom class with a 'json_decode' method. This method should extract specific attributes from a JSON string and initialize the class object. Utilize the 'loads' function from 'json-tricks' to deserialize the JSON string with custom decoding.,code/json-tricks/json-tricks_2.py,Verify that only the relevant attributes are extracted and assigned to the class object.,Ensure that the program successfully decodes the JSON string into the custom class object with the specified attributes.,Check if the 'json-tricks' API for custom JSON decoding works as intended within the program.,,
659,json-tricks,3,"Create a Python program that uses the 'json-tricks' API to demonstrate the serialization and deserialization of complex data structures. In the program, define a dictionary containing various data types, such as strings, numbers, lists, and nested dictionaries. Use the 'dumps' function to serialize the dictionary into a JSON string and then use the 'loads' function to deserialize it back into a Python object.",code/json-tricks/json-tricks_3.py,Ensure that the deserialized data matches the original dictionary.,Confirm that the program can successfully serialize a complex dictionary into a JSON string.,"Verify that specific values, such as the ""name,"" can be accessed from the deserialized object.",,
660,json-tricks,4,"Develop a Python program that showcases the usage of 'json-tricks' to handle JSON files. The program should read a JSON file, modify its content by adding a new key-value pair, and then save the updated data back to the file. Use 'json_tricks' to ensure proper serialization and deserialization during these operations.",code/json-tricks/json-tricks_4.py,Ensure that the program correctly adds a new key-value pair to the JSON data.,Verify that the program can successfully read an existing JSON file.,Confirm that the program properly saves the updated data back to the file while preserving its structure and formatting.,,
661,json-tricks,5,"Create a Python program that demonstrates the use of 'json-tricks' for handling JSON arrays. Define a list of dictionaries, each representing a person's information, such as name, age, and address. Serialize this list of dictionaries into a JSON string using the 'dumps' function. Then, deserialize the JSON string back into a list of dictionaries using the 'loads' function.",code/json-tricks/json-tricks_5.py,Confirm that the program successfully serializes a list of dictionaries into a JSON string.,"Verify that specific values, such as the name of the first person, can be accessed from the deserialized object.",Ensure that the deserialized data matches the original list of dictionaries.,,
662,json-tricks,6,"Develop a Python program that uses 'json-tricks' to handle JSON data containing dates. Create a dictionary with a date object and other data. Serialize the dictionary into a JSON string, ensuring the date object is properly formatted. Then, deserialize the JSON string back into a Python object while preserving the date format.",code/json-tricks/json-tricks_6.py,Confirm that the program successfully serializes a dictionary containing a date object into a JSON string with the specified date format.,"Verify that specific values, such as the date, can be accessed from the deserialized object.",Ensure that the deserialized data retains the date format.,,
663,json-tricks,7,"Create a Python program that uses 'json-tricks' to handle JSON data with custom class objects. Define a custom class and create an instance of it with various attributes. Serialize the class instance into a JSON string using 'dumps'. Then, deserialize the JSON string back into a class instance using 'loads', ensuring that the custom attributes are preserved.",code/json-tricks/json-tricks_7.py,"Check that the specific attributes of the deserialized object, such as ""name,"" ""age,"" and ""score,"" can be accessed.",Verify that the program can successfully serialize a custom class instance into a JSON string.,Ensure that the deserialized object is an instance of the custom class with the preserved attributes.,,
664,json-tricks,8,"Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with binary data. Create a dictionary that includes binary data as bytes. Serialize the dictionary into a JSON string using 'dumps' while specifying binary encoding. Then, deserialize the JSON string back into a Python object, ensuring the binary data is correctly preserved.",code/json-tricks/json-tricks_8.py,Ensure that the deserialized data retains the binary data in its original form.,"Verify that specific values, such as the ""info"" and the decoded binary data, can be accessed from the deserialized object.",Confirm that the program successfully serializes a dictionary containing binary data into a JSON string with binary encoding.,,
665,json-tricks,9,Create a Python program that showcases the use of 'json-tricks' for handling JSON data with custom encoder and decoder functions. Define custom functions for encoding and decoding data. Use these functions to serialize and deserialize a dictionary containing special data types. Ensure that the custom encoding and decoding functions are applied to the data.,code/json-tricks/json-tricks_9.py,"Check that specific values, such as the complex number and the regular number, can be accessed from the deserialized object.",Ensure that the custom decoding function correctly handles the deserialization of the custom data types.,Verify that the program can successfully serialize a dictionary containing custom data types using the specified custom encoding function.,,
666,json-tricks,10,"Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom serialization options. Create a dictionary with various data types, and customize the serialization options for specific types using the 'dumps' function. Serialize the dictionary with these options and ensure that they are applied correctly.",code/json-tricks/json-tricks_10.py,Confirm that the program successfully serializes a dictionary with custom serialization options.,Check the JSON string output to validate the applied serialization options.,"Ensure that the integer is serialized as a string, the float has the specified precision, and None values are ignored in the serialization.",,
667,json-tricks,11,Create a Python program that uses 'json-tricks' to handle JSON data with large numbers. Define a dictionary containing large integer and floating-point numbers. Serialize the dictionary into a JSON string using 'dumps' and ensure that the large numbers are correctly represented in scientific notation.,code/json-tricks/json-tricks_11.py,Ensure that the large numbers are represented in scientific notation in the JSON string.,Confirm that the program successfully serializes a dictionary containing large numbers.,Check the JSON string output to validate the representation of large numbers.,,
668,json-tricks,12,Develop a Python program that demonstrates the use of 'json-tricks' to handle JSON data with circular references. Create two objects that reference each other and serialize them into a JSON string using 'dumps'. Ensure that circular references are handled properly.,code/json-tricks/json-tricks_12.py,Check the JSON string output to validate the handling of circular references.,Ensure that the circular references are handled properly in the serialized JSON string.,Confirm that the program can successfully serialize objects with circular references into a JSON string.,,
669,json-tricks,13,Create a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom key transformation. Define a dictionary with keys that need to be transformed before serialization. Use the 'dumps' function with a custom key transformation function to serialize the data with the transformed keys.,code/json-tricks/json-tricks_13.py,Ensure that the custom key transformation function is applied to the dictionary keys during serialization.,Check the JSON string output to validate the transformed keys.,Confirm that the program successfully serializes a dictionary with custom key transformation into a JSON string.,,
670,json-tricks,14,Develop a Python program that showcases the use of 'json-tricks' to handle JSON data with nested objects. Create a dictionary containing nested dictionaries and lists. Serialize the dictionary into a JSON string using 'dumps' and ensure that the nested structure is preserved.,code/json-tricks/json-tricks_14.py,Ensure that the nested structure is preserved in the serialized JSON string.,Confirm that the program successfully serializes a dictionary with nested objects into a JSON string.,Check the JSON string output to validate the preservation of nested objects.,,
671,json-tricks,15,Create a Python program that uses 'json-tricks' to handle JSON data with multiple key-value pairs. Define a dictionary with a significant number of key-value pairs. Serialize the dictionary into a JSON string using 'dumps' and ensure that all key-value pairs are correctly represented.,code/json-tricks/json-tricks_15.py,Check the JSON string output to validate the representation of multiple key-value pairs.,Confirm that the program successfully serializes a dictionary with a large number of key-value pairs into a JSON string.,Ensure that all key-value pairs are correctly represented in the serialized JSON string.,,
672,json-tricks,16,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom separators and indentation. Create a dictionary and serialize it into a JSON string using 'dumps'. Customize the separators and indentation in the JSON string.,code/json-tricks/json-tricks_16.py,Check the JSON string output to validate the custom formatting.,Ensure that the custom separators and indentation are applied to the JSON string.,Confirm that the program successfully serializes a dictionary into a JSON string with custom separators and indentation.,,
673,json-tricks,17,Create a Python program that showcases the use of 'json-tricks' for handling JSON data with comments. Define a dictionary and serialize it into a JSON string using 'dumps'. Include comments in the JSON string and ensure that they are preserved in the output.,code/json-tricks/json-tricks_17.py,Confirm that the program successfully serializes a dictionary into a JSON string with comments.,Check the JSON string output to validate the inclusion of comments.,Ensure that the comments are preserved in the output JSON string.,,
674,json-tricks,18,"Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with non-string keys. Create a dictionary with keys that are not strings, such as integers. Serialize the dictionary into a JSON string using 'dumps' and ensure that the non-string keys are correctly represented.",code/json-tricks/json-tricks_18.py,Check the JSON string output to validate the representation of non-string keys.,Ensure that the non-string keys are correctly represented in the serialized JSON string.,Confirm that the program successfully serializes a dictionary with non-string keys into a JSON string.,,
675,json-tricks,19,Create a Python program that uses 'json-tricks' to handle JSON data with custom sorting of keys. Define a dictionary with keys that need to be sorted in a specific order before serialization. Use the 'dumps' function with a custom key sorting function to serialize the data with the specified key order.,code/json-tricks/json-tricks_19.py,Confirm that the program successfully serializes a dictionary with custom key sorting into a JSON string.,Check the JSON string output to validate the custom key sorting.,Ensure that the keys are sorted in the specified order in the serialized JSON string.,,
676,json-tricks,20,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with compact encoding. Create a dictionary and serialize it into a compact JSON string using 'dumps'. Ensure that the JSON string is compact and contains no unnecessary whitespace.,code/json-tricks/json-tricks_20.py,Ensure that the compact JSON string contains no unnecessary whitespace.,Check the JSON string output to validate the compact encoding.,Confirm that the program successfully serializes a dictionary into a compact JSON string.,,
677,json-tricks,21,Create a Python program that uses 'json-tricks' to handle JSON data with key-value pairs sorted by key length. Define a dictionary and serialize it into a JSON string using 'dumps'. Ensure that the key-value pairs are sorted based on the length of the keys.,code/json-tricks/json-tricks_21.py,Confirm that the program successfully serializes a dictionary with key-value pairs sorted by key length into a JSON string.,Ensure that the key-value pairs are sorted in the JSON string based on the length of the keys.,Check the JSON string output to validate the key sorting by key length.,,
678,json-tricks,22,Develop a Python program that demonstrates the use of 'json-tricks' to handle JSON data with conditional encoding. Create a dictionary with different data types and specify conditions for encoding certain values. Serialize the dictionary into a JSON string using 'dumps' with conditional encoding and ensure that the specified conditions are applied.,code/json-tricks/json-tricks_22.py,Confirm that the program successfully serializes a dictionary with conditional encoding into a JSON string.,Check the JSON string output to validate the conditional encoding.,Ensure that the specified conditions for encoding values are applied to the data.,,
679,json-tricks,23,Create a Python program that uses 'json-tricks' to handle JSON data with custom date formatting. Define a dictionary that includes date objects and serialize it into a JSON string using 'dumps'. Customize the date formatting in the JSON string to a specific format.,code/json-tricks/json-tricks_23.py,Check the JSON string output to validate the custom date formatting.,Confirm that the program successfully serializes a dictionary containing date objects into a JSON string with custom date formatting.,Ensure that the date objects are formatted in the specified format in the JSON string.,,
680,json-tricks,24,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom null values. Create a dictionary and serialize it into a JSON string using 'dumps'. Specify custom values to represent None in the JSON string.,code/json-tricks/json-tricks_24.py,Ensure that the custom values are used to represent None in the JSON string.,Confirm that the program successfully serializes a dictionary with custom null values into a JSON string.,Check the JSON string output to validate the custom null values.,,
681,json-tricks,25,Create a Python program that uses 'json-tricks' to handle JSON data with custom serialization of NaN and Infinity. Define a dictionary with floating-point values that include NaN and Infinity. Serialize the dictionary into a JSON string using 'dumps' and ensure that the custom serialization of NaN and Infinity is applied.,code/json-tricks/json-tricks_25.py,Ensure that the custom representations for NaN and Infinity are applied in the JSON string.,Confirm that the program successfully serializes a dictionary with custom serialization of NaN and Infinity into a JSON string.,Check the JSON string output to validate the custom serialization of NaN and Infinity.,,
682,json-tricks,26,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom object serialization. Define a dictionary that includes custom Python objects and serialize it into a JSON string using 'dumps'. Specify custom serialization options for the objects.,code/json-tricks/json-tricks_26.py,Check the JSON string output to validate the custom object serialization.,Confirm that the program successfully serializes a dictionary containing custom Python objects into a JSON string with custom object serialization.,Ensure that the custom serialization options are applied to the specified objects in the JSON string.,,
683,json-tricks,27,Create a Python program that uses 'json-tricks' to handle JSON data with custom character escaping. Define a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Customize the character escaping in the JSON string.,code/json-tricks/json-tricks_27.py,Confirm that the program successfully serializes a dictionary with custom character escaping into a JSON string.,Ensure that the specified character escaping method is applied in the JSON string.,Check the JSON string output to validate the custom character escaping.,,
684,json-tricks,28,Develop a Python program that showcases the use of 'json-tricks' for handling JSON data with custom encoding of binary data. Create a dictionary that includes binary data as bytes and serialize it into a JSON string using 'dumps'. Specify custom encoding options for binary data.,code/json-tricks/json-tricks_28.py,Ensure that the custom encoding options for binary data are applied in the JSON string.,Confirm that the program successfully serializes a dictionary containing binary data into a JSON string with custom encoding of binary data.,Check the JSON string output to validate the custom encoding of binary data.,,
685,json-tricks,29,Create a Python program that uses 'json-tricks' to handle JSON data with compact encoding of binary data. Define a dictionary that includes binary data as bytes and serialize it into a compact JSON string using 'dumps'. Ensure that the JSON string is compact and contains no unnecessary whitespace.,code/json-tricks/json-tricks_29.py,Ensure that the compact JSON string contains no unnecessary whitespace.,Confirm that the program successfully serializes a dictionary containing binary data into a compact JSON string with compact encoding of binary data.,Check the JSON string output to validate the compact encoding of binary data.,,
686,json-tricks,30,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom sorting of dictionary items. Create a dictionary with key-value pairs that need to be sorted in a specific order before serialization. Use the 'dumps' function with a custom item sorting function to serialize the data with the specified order of key-value pairs.,code/json-tricks/json-tricks_30.py,Ensure that the key-value pairs are sorted in the JSON string according to the specified order.,Check the JSON string output to validate the custom item sorting.,Confirm that the program successfully serializes a dictionary with custom sorting of key-value pairs into a JSON string.,,
687,json-tricks,31,Create a Python program that uses 'json-tricks' to handle JSON data with custom item separator and indentation. Define a dictionary and serialize it into a JSON string using 'dumps'. Customize the item separator and indentation in the JSON string.,code/json-tricks/json-tricks_31.py,Check the JSON string output to validate the custom formatting.,Ensure that the custom item separator and indentation are applied to the JSON string.,Confirm that the program successfully serializes a dictionary into a JSON string with custom item separator and indentation.,,
688,json-tricks,32,Develop a Python program that showcases the use of 'json-tricks' for handling JSON data with custom encoding of large numbers. Create a dictionary that includes large integer and floating-point numbers and serialize it into a JSON string using 'dumps'. Specify custom encoding options for large numbers.,code/json-tricks/json-tricks_32.py,Confirm that the program successfully serializes a dictionary with custom encoding of large numbers into a JSON string.,Check the JSON string output to validate the custom encoding of large numbers.,Ensure that the custom encoding options for large numbers are applied in the JSON string.,,
689,json-tricks,33,Create a Python program that uses 'json-tricks' to handle JSON data with custom encoding of date objects. Define a dictionary that includes date objects and serialize it into a JSON string using 'dumps'. Specify custom encoding options for date objects.,code/json-tricks/json-tricks_33.py,Confirm that the program successfully serializes a dictionary with custom encoding of date objects into a JSON string.,Check the JSON string output to validate the custom encoding of date objects.,Ensure that the custom encoding options for date objects are applied in the JSON string.,,
690,json-tricks,34,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom escape sequences. Create a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Specify custom escape sequences for characters.,code/json-tricks/json-tricks_34.py,Check the JSON string output to validate the custom escape sequences.,Ensure that the specified custom escape sequences are applied to the characters in the JSON string.,Confirm that the program successfully serializes a dictionary with custom escape sequences into a JSON string.,,
691,json-tricks,35,Create a Python program that uses 'json-tricks' to handle JSON data with custom character substitution. Define a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Specify custom character substitutions for characters.,code/json-tricks/json-tricks_35.py,Confirm that the program successfully serializes a dictionary with custom character substitutions into a JSON string.,Ensure that the specified custom character substitutions are applied to the characters in the JSON string.,Check the JSON string output to validate the custom character substitutions.,,
692,json-tricks,36,Develop a Python program that showcases the use of 'json-tricks' for handling JSON data with custom handling of special characters. Create a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Specify custom handling options for special characters.,code/json-tricks/json-tricks_36.py,Ensure that the specified custom handling options for special characters are applied in the JSON string.,Confirm that the program successfully serializes a dictionary with custom handling of special characters into a JSON string.,Check the JSON string output to validate the custom handling of special characters.,,
693,json-tricks,37,Create a Python program that uses 'json-tricks' to handle JSON data with custom handling of large numbers. Define a dictionary that includes large integer and floating-point numbers and serialize it into a JSON string using 'dumps'. Specify custom handling options for large numbers.,code/json-tricks/json-tricks_37.py,Ensure that the specified custom handling options for large numbers are applied in the JSON string.,Check the JSON string output to validate the custom handling of large numbers.,Confirm that the program successfully serializes a dictionary with custom handling of large numbers into a JSON string.,,
694,json-tricks,38,Develop a Python program that demonstrates the use of 'json-tricks' for handling JSON data with custom object transformation. Create a dictionary that includes custom Python objects and serialize it into a JSON string using 'dumps'. Specify custom transformation functions for the objects.,code/json-tricks/json-tricks_38.py,Check the JSON string output to validate the custom object transformation.,Confirm that the program successfully serializes a dictionary containing custom Python objects into a JSON string with custom object transformation.,Ensure that the custom transformation functions are applied to the specified objects in the JSON string.,,
695,json-tricks,39,Create a Python program that uses 'json-tricks' to handle JSON data with custom serialization of binary data as hexadecimal. Define a dictionary that includes binary data as bytes and serialize it into a JSON string using 'dumps'. Specify custom serialization options for binary data as hexadecimal.,code/json-tricks/json-tricks_39.py,Ensure that the custom serialization options for binary data are applied in the JSON string.,Check the JSON string output to validate the custom serialization of binary data as hexadecimal.,Confirm that the program successfully serializes a dictionary containing binary data into a JSON string with custom serialization of binary data as hexadecimal.,,
696,json-tricks,40,Develop a Python program that showcases the use of 'json-tricks' for handling JSON data with custom escaping of special characters. Create a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Specify custom escaping options for special characters.,code/json-tricks/json-tricks_40.py,Confirm that the program successfully serializes a dictionary with custom escaping of special characters into a JSON string.,Check the JSON string output to validate the custom escaping of special characters.,Ensure that the specified custom escaping options for special characters are applied in the JSON string.,,
697,json-tricks,41,Create a Python program that uses 'json-tricks' to handle JSON data with custom escaping of characters using custom character substitution. Define a dictionary that includes special characters and serialize it into a JSON string using 'dumps'. Specify custom character substitution and escape sequences for characters.,code/json-tricks/json-tricks_41.py,Check the JSON string output to validate the custom character substitution and escape sequences.,Confirm that the program successfully serializes a dictionary with custom character substitution and escape sequences for special characters into a JSON string.,Ensure that the specified custom character substitution and escape sequences are applied in the JSON string.,,
698,jsonschema,1,Create a Python program using the 'jsonschema' API to validate a JSON object against a predefined JSON schema with specific structure and constraints.,code/jsonschema/jsonschema_1.py,Test the program with a valid JSON object that meets the schema requirements.,"Verify the program's behavior when the JSON object does not conform to the schema, ensuring it correctly identifies validation errors.","Check the program's handling of different schema constraints (e.g., data types, minimum values) and how it reports errors.",,
699,jsonschema,2,Create a Python program that uses the 'jsonschema' API to validate a JSON file against a specified JSON schema stored in a separate file.,code/jsonschema/jsonschema_2.py,"Create an invalid JSON file that does not conform to the schema, and verify that the program correctly detects the validation error.","Test the program with JSON data and schema containing complex structures, such as nested objects and arrays.",Prepare a valid JSON file and schema file and test the program to ensure it validates correctly.,,
700,jsonschema,3,Create a Python program that generates a JSON schema for a given Python dictionary and validates JSON objects against this dynamically generated schema.,code/jsonschema/jsonschema_3.py,Test the program with various Python dictionary structures to ensure it correctly generates JSON schemas from them.,Validate JSON objects against the dynamically generated schemas to verify the program’s correctness.,Check how the program handles different data types and constraints in the dynamically generated schema.,,
701,jsonschema,4,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema while applying custom validation logic in addition to the schema.,code/jsonschema/jsonschema_4.py,Test the program with JSON objects that meet the schema requirements and pass the custom validation logic.,"Create JSON objects that satisfy the schema but fail the custom validation logic, and ensure the program correctly identifies the error.",Verify how the program handles different combinations of JSON data and custom validation logic.,,
702,jsonschema,5,Create a Python program that uses 'jsonschema' to validate a JSON array against a schema that enforces a specific array format.,code/jsonschema/jsonschema_5.py,"Create an array with elements that violate the schema constraints, and verify that the program correctly detects validation errors.",Test the program with an array that conforms to the schema requirements.,Check the program's behavior when validating arrays with varying data types or nested arrays.,,
703,jsonschema,6,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema that includes custom format validation.,code/jsonschema/jsonschema_6.py,Verify how the program handles other format validation rules in addition to the custom email format validation.,Test the program with a JSON object that has a valid email format according to the custom format validation.,"Create a JSON object with an email that does not conform to the custom format validation, and ensure the program detects the error.",,
704,jsonschema,7,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema while handling schema references.,code/jsonschema/jsonschema_7.py,Create a JSON object that violates the schema with references and ensure the program correctly identifies the validation error.,Test the program with a JSON object that conforms to the schema with references.,Check the program's behavior when using schemas with more complex reference structures.,,
705,jsonschema,8,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema that enforces unique item constraints in an array.,code/jsonschema/jsonschema_8.py,Check how the program behaves when validating arrays with various data types and non-unique items.,Test the program with a JSON array that contains unique items as required by the schema.,Create a JSON array that contains duplicate items and ensure the program detects the violation of unique item constraints.,,
706,jsonschema,9,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema that includes custom keyword validation.,code/jsonschema/jsonschema_9.py,Verify how the program handles other schema keywords in addition to the custom keyword validation.,Test the program with a JSON object that matches the custom keyword as required by the schema.,Create a JSON object that does not match the custom keyword and ensure the program detects the validation error.,,
707,jsonschema,10,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on properties.,code/jsonschema/jsonschema_10.py,Test the program with a JSON object that satisfies the conditional validation based on properties.,Check how the program handles more complex conditional validation rules with nested properties and constraints.,"Create a JSON object that violates the conditional validation conditions, and ensure the program correctly identifies the validation error.",,
708,jsonschema,11,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with custom keywords and conditional validation.,code/jsonschema/jsonschema_11.py,Verify how the program handles other schema keywords in addition to the custom keywords and conditional validation.,Test the program with a JSON object that satisfies the custom keywords and conditional validation based on properties.,"Create a JSON object that violates the custom keyword and conditional validation rules, and ensure the program correctly identifies the validation error.",,
709,jsonschema,12,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with pattern-based validation for a string property.,code/jsonschema/jsonschema_12.py,Check how the program handles different pattern-based validation rules for string properties.,"Create a JSON object with an email that does not match the pattern, and ensure the program detects the validation error.",Test the program with a JSON object that has a valid email format according to the pattern-based validation.,,
710,jsonschema,13,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with conditional validation based on the value of a property.,code/jsonschema/jsonschema_13.py,Check the program's behavior when validating data with complex dependencies and property value conditions.,Test the program with a JSON object that satisfies the conditional validation based on property value.,"Create a JSON object that violates the conditional validation based on property value, and ensure the program correctly identifies the validation error.",,
711,jsonschema,14,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with multiple conditional validation rules and custom keywords.,code/jsonschema/jsonschema_14.py,"Verify how the program handles different combinations of properties, custom keywords, and conditional validation rules.",Test the program with a JSON object that satisfies the multiple conditional validation rules and custom keywords.,"Create a JSON object that violates the conditional validation rules or custom keyword conditions, and ensure the program correctly identifies the validation error.",,
712,jsonschema,15,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with format-based validation for a date property.,code/jsonschema/jsonschema_15.py,Test the program with a JSON object that has a valid date format according to the format-based validation.,"Create a JSON object with a date that does not match the required format, and ensure the program detects the validation error.",Check how the program handles different date formats and format-based validation rules.,,
713,jsonschema,16,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on multiple properties and custom keywords.,code/jsonschema/jsonschema_16.py,Test the program with a JSON object that satisfies the conditional validation and custom keywords.,"Verify how the program handles different combinations of properties, custom keywords, and conditional validation rules.","Create a JSON object that violates the conditional validation or custom keyword conditions, and ensure the program correctly identifies the validation error.",,
714,jsonschema,17,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with custom keyword validation and conditional validation based on property values.,code/jsonschema/jsonschema_17.py,"Verify how the program handles different property values, custom keywords, and conditional validation rules.","Create a JSON object that violates the custom keyword or conditional validation rules, and ensure the program correctly identifies the validation error.",Test the program with a JSON object that satisfies the custom keyword and conditional validation based on property values.,,
715,jsonschema,18,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on multiple properties and custom keyword validation.,code/jsonschema/jsonschema_18.py,Test the program with a JSON object that satisfies the conditional validation and custom keywords.,"Verify how the program handles different combinations of properties, custom keywords, and conditional validation rules.","Create a JSON object that violates the conditional validation or custom keyword conditions, and ensure the program correctly identifies the validation error.",,
716,jsonschema,19,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with conditional validation based on properties and custom keywords.,code/jsonschema/jsonschema_19.py,Test the program with a JSON object that satisfies the conditional validation and custom keywords.,"Verify how the program handles different combinations of properties, custom keywords, and conditional validation rules.","Create a JSON object that violates the conditional validation or custom keyword conditions, and ensure the program correctly identifies the validation error.",,
717,jsonschema,20,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on property values and custom keywords.,code/jsonschema/jsonschema_20.py,Test the program with a JSON object that satisfies the conditional validation and custom keywords.,"Create a JSON object that violates the conditional validation or custom keyword conditions, and ensure the program correctly identifies the validation error.","Verify how the program handles different combinations of property values, custom keywords, and conditional validation rules.",,
718,jsonschema,21,Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with pattern-based validation for a property and custom keyword validation.,code/jsonschema/jsonschema_21.py,Verify how the program handles different patterns and custom keyword conditions for property validation.,"Create a JSON object that violates the pattern-based validation or custom keyword conditions, and ensure the program correctly identifies the validation error.",Test the program with a JSON object that satisfies the pattern-based validation and custom keywords.,,
719,jsonschema,22,"Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on property values, custom keyword validation, and multiple custom keywords.",code/jsonschema/jsonschema_22.py,"Test the program with a JSON object that satisfies the conditional validation, custom keywords, and multiple custom keywords.","Create a JSON object that violates the conditional validation, custom keyword, or multiple custom keyword conditions, and ensure the program correctly identifies the validation error.","Verify how the program handles different combinations of property values, custom keywords, and multiple custom keywords for validation.",,
720,jsonschema,23,"Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with pattern-based validation for a property, custom keyword validation, and conditional validation based on property values.",code/jsonschema/jsonschema_23.py,"Verify how the program handles different patterns, custom keywords, and property values for validation.","Test the program with a JSON object that satisfies the pattern-based validation, custom keywords, and conditional validation.","Create a JSON object that violates the pattern-based validation, custom keyword, or conditional validation conditions, and ensure the program correctly identifies the validation error.",,
721,jsonschema,24,Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on property values and custom keyword validation.,code/jsonschema/jsonschema_24.py,Test the program with a JSON object that satisfies the conditional validation and custom keywords.,"Create a JSON object that violates the conditional validation or custom keyword conditions, and ensure the program correctly identifies the validation error.","Verify how the program handles different combinations of property values, custom keywords, and conditional validation rules.",,
722,jsonschema,25,"Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with conditional validation based on multiple properties, custom keyword validation, and pattern-based validation for a property.",code/jsonschema/jsonschema_25.py,"Verify how the program handles different combinations of properties, custom keywords, and pattern-based validation for validation.","Test the program with a JSON object that satisfies the conditional validation, custom keywords, and pattern-based validation.","Create a JSON object that violates the conditional validation, custom keyword, or pattern-based validation conditions, and ensure the program correctly identifies the validation error.",,
723,jsonschema,26,"Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on property values, custom keyword validation, pattern-based validation for a property, and multiple custom keywords.",code/jsonschema/jsonschema_26.py,"Create a JSON object that violates the conditional validation, custom keyword, pattern-based validation, or multiple custom keyword conditions, and ensure the program correctly identifies the validation error.","Verify how the program handles different combinations of property values, custom keywords, pattern-based validation, and multiple custom keywords for validation.","Test the program with a JSON object that satisfies the conditional validation, custom keywords, pattern-based validation, and multiple custom keywords.",,
724,jsonschema,27,"Create a Python program that utilizes 'jsonschema' to validate a JSON object against a schema with format-based date validation for a property, custom keyword validation, conditional validation based on property values, and pattern-based validation for another property.",code/jsonschema/jsonschema_27.py,"Verify how the program handles different date formats, custom keywords, property values, and pattern-based validation for validation.","Create a JSON object that violates the format-based date validation, custom keyword, conditional validation, or pattern-based validation conditions, and ensure the program correctly identifies the validation error.","Test the program with a JSON object that satisfies the format-based date validation, custom keywords, conditional validation, and pattern-based validation.",,
725,jsonschema,28,"Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with format-based date validation for a property, custom keyword validation, conditional validation based on property values, pattern-based validation for another property, and multiple custom keywords.",code/jsonschema/jsonschema_28.py,"Create a JSON object that violates the format-based date validation, custom keyword, conditional validation, pattern-based validation, or multiple custom keyword conditions, and ensure the program correctly identifies the validation error.","Test the program with a JSON object that satisfies the format-based date validation, custom keywords, conditional validation, pattern-based validation, and multiple custom keywords.","Verify how the program handles different date formats, custom keywords, property values, and pattern-based validation for validation.",,
727,jsonschema,30,"Create a Python program that uses 'jsonschema' to validate a JSON object against a schema with conditional validation based on multiple properties, custom keyword validation, format-based date validation for a property, and pattern-based validation for another property.",code/jsonschema/jsonschema_30.py,"Verify how the program handles different combinations of property values, custom keywords, format-based date validation, and pattern-based validation for validation.","Create a JSON object that violates the conditional validation, custom keyword, format-based date validation, pattern-based validation, or multiple custom keyword conditions, and ensure the program correctly identifies the validation error.","Test the program with a JSON object that satisfies the conditional validation, custom keywords, format-based date validation, and pattern-based validation.",,
738,jsonschema,41,Create a Python program using 'jsonschema' to validate a JSON object against a predefined JSON schema with specific structure and constraints.,code/jsonschema/jsonschema_41.py,Test the program with a valid JSON object that meets the schema requirements.,"Verify the program's behavior when the JSON object does not conform to the schema, ensuring it correctly identifies validation errors.","Check the program's handling of different schema constraints (e.g., data types, minimum values) and how it reports errors.",,
739,langchain,1,"Create a Python program that utilizes the ""langchain"" API to interact with the GPT-3.5 Turbo model. Define a chat prompt template that includes a variable {country}. Use this template to inquire about the capital of a specific country, e.g., ""What is the capital of {country}?"" Replace {country} with ""Germany"" and retrieve the model's response. Save the response.",code/langchain/langchain_1.py,Check if the response contains information about the capital of the specified country.,"Test that the ""langchain"" library is successfully installed.",Verify that the program retrieves a response from the GPT-3.5 Turbo model.,,
740,langchain,2,"Create a Python program that utilizes the ""langchain"" API to generate a list of natural language instructions for a specific task. Define a list of tasks, e.g., [""Write a Python program to calculate the factorial of a number."", ""Create a function that reverses a string in Python.""]. Use the ""langchain"" API to generate natural language instructions for each task in the list and store them in a new list. Finally, print the list of generated instructions.",code/langchain/langchain_2.py,Check if the generated instructions are coherent and relevant to the tasks.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates natural language instructions for each task in the list.,,
741,langchain,3,"Create a Python program that utilizes the ""langchain"" API to translate a given English text into French. Define a variable that contains the English text, e.g., ""Hello, how are you?"". Use the ""langchain"" API to translate this text into French and store the translated text in a new variable. Finally, print the translated text.",code/langchain/langchain_3.py,Verify that the program successfully translates the English text into French.,Check if the translated text is accurate and meaningful.,"Test that the ""langchain"" library is successfully installed.",,
742,langchain,4,"Create a Python program that utilizes the ""langchain"" API to summarize a given text. Define a variable that contains a long text, e.g., a news article. Use the ""langchain"" API to generate a concise summary of the text and store it in a new variable. Finally, print the summary.",code/langchain/langchain_4.py,Check if the generated summary is coherent and captures the main points of the text.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates a concise summary of the long text.,,
743,langchain,5,"Create a Python program that utilizes the ""langchain"" API to generate code for a Python function that calculates the Fibonacci sequence. The function should take an integer parameter n and return a list containing the first n Fibonacci numbers. Use the ""langchain"" API to generate the code for this function and print it.",code/langchain/langchain_5.py,Check if the generated code is correct and follows the task description.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the Fibonacci sequence function.,,
744,langchain,6,"Create a Python program that utilizes the ""langchain"" API to generate code for a Python class representing a basic calculator. The class should have methods for addition, subtraction, multiplication, and division. Use the ""langchain"" API to generate the code for this class and print it.",code/langchain/langchain_6.py,"Check if the generated code defines a class with methods for addition, subtraction, multiplication, and division.","Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the calculator class.,,
745,langchain,7,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that performs sentiment analysis on a given text. The function should take a text as input and return a sentiment score, e.g., a value between -1 and 1, where -1 indicates a negative sentiment and 1 indicates a positive sentiment. Use the ""langchain"" API to generate the code for this sentiment analysis function and print it.",code/langchain/langchain_7.py,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the sentiment analysis function.,Check if the generated code defines a function that correctly calculates the sentiment score of a given text.,,
746,langchain,8,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the cosine similarity between two text documents. The function should take two text inputs and return the cosine similarity score. Use the ""langchain"" API to generate the code for this function and print it.",code/langchain/langchain_8.py,Verify that the program generates Python code for the cosine similarity function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly calculates the cosine similarity between two text documents.,,
747,langchain,9,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that detects the language of a given text. The function should take a text as input and return the detected language. Use the ""langchain"" API to generate the code for this language detection function and print it.",code/langchain/langchain_9.py,Verify that the program generates Python code for the language detection function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly detects the language of a given text.,,
748,langchain,10,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that counts the frequency of words in a given text. The function should take a text as input and return a dictionary where keys are words, and values are their frequencies. Use the ""langchain"" API to generate the code for this word frequency counting function and print it.",code/langchain/langchain_10.py,Verify that the program generates Python code for the word frequency counting function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly counts the frequency of words in a given text and returns a dictionary.,,
749,langchain,11,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given string is a palindrome. The function should take a string as input and return True if it is a palindrome and False if it is not. Use the ""langchain"" API to generate the code for this palindrome-checking function and print it.",code/langchain/langchain_11.py,Verify that the program generates Python code for the palindrome-checking function.,Check if the generated code defines a function that correctly checks if a given string is a palindrome and returns True or False.,"Test that the ""langchain"" library is successfully installed.",,
750,langchain,12,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that sorts a list of numbers in ascending order. The function should take a list of numbers as input and return a new list with the numbers sorted in ascending order. Use the ""langchain"" API to generate the code for this sorting function and print it.",code/langchain/langchain_12.py,Verify that the program generates Python code for the sorting function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly sorts a list of numbers in ascending order.,,
751,langchain,13,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the mean of a list of numbers. The function should take a list of numbers as input and return the mean value. Use the ""langchain"" API to generate the code for this mean calculation function and print it.",code/langchain/langchain_13.py,Check if the generated code defines a function that correctly calculates the mean of a list of numbers.,Verify that the program generates Python code for the mean calculation function.,"Test that the ""langchain"" library is successfully installed.",,
752,langchain,14,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given year is a leap year. The function should take a year as input and return True if it is a leap year and False if it is not. Use the ""langchain"" API to generate the code for this leap year-checking function and print it.",code/langchain/langchain_14.py,Verify that the program generates Python code for the leap year-checking function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly checks if a given year is a leap year and returns True or False.,,
753,langchain,15,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that finds the maximum element in a list of numbers. The function should take a list of numbers as input and return the maximum value. Use the ""langchain"" API to generate the code for this maximum finding function and print it.",code/langchain/langchain_15.py,Check if the generated code defines a function that correctly finds the maximum element in a list of numbers.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the maximum finding function.,,
754,langchain,16,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the square root of a given number. The function should take a number as input and return its square root. Use the ""langchain"" API to generate the code for this square root calculation function and print it.",code/langchain/langchain_16.py,Check if the generated code defines a function that correctly calculates the square root of a given number.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the square root calculation function.,,
755,langchain,17,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given number is prime. The function should take a number as input and return True if it is a prime number and False if it is not. Use the ""langchain"" API to generate the code for this prime number-checking function and print it.",code/langchain/langchain_17.py,Verify that the program generates Python code for the prime number-checking function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly checks if a given number is prime and returns True or False.,,
756,langchain,18,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random password. The function should take a length as input and return a randomly generated password of the specified length. Use the ""langchain"" API to generate the code for this password generation function and print it.",code/langchain/langchain_18.py,Verify that the program generates Python code for the password generation function.,Check if the generated code defines a function that correctly generates a random password of the specified length.,"Test that the ""langchain"" library is successfully installed.",,
757,langchain,19,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that converts a given temperature in Celsius to Fahrenheit. The function should take a temperature in Celsius as input and return the equivalent temperature in Fahrenheit. Use the ""langchain"" API to generate the code for this temperature conversion function and print it.",code/langchain/langchain_19.py,Verify that the program generates Python code for the temperature conversion function.,Check if the generated code defines a function that correctly converts a temperature in Celsius to Fahrenheit.,"Test that the ""langchain"" library is successfully installed.",,
758,langchain,20,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random number within a specified range. The function should take a minimum and maximum value as input and return a random number within that range. Use the ""langchain"" API to generate the code for this random number generation function and print it.",code/langchain/langchain_20.py,Check if the generated code defines a function that correctly generates a random number within a specified range.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the random number generation function.,,
759,langchain,21,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that reverses a given list. The function should take a list as input and return a new list with the elements reversed. Use the ""langchain"" API to generate the code for this list reversal function and print it.",code/langchain/langchain_21.py,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly reverses a given list and returns a new list with the elements reversed.,Verify that the program generates Python code for the list reversal function.,,
760,langchain,22,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a circle. The function should take the radius of the circle as input and return the area. Use the ""langchain"" API to generate the code for this circle area calculation function and print it.",code/langchain/langchain_22.py,Check if the generated code defines a function that correctly calculates the area of a circle based on the radius.,Verify that the program generates Python code for the circle area calculation function.,"Test that the ""langchain"" library is successfully installed.",,
761,langchain,23,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the volume of a sphere. The function should take the radius of the sphere as input and return the volume. Use the ""langchain"" API to generate the code for this sphere volume calculation function and print it.",code/langchain/langchain_23.py,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the sphere volume calculation function.,Check if the generated code defines a function that correctly calculates the volume of a sphere based on the radius.,,
762,langchain,24,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the length of the hypotenuse of a right-angled triangle. The function should take the lengths of the two shorter sides as input and return the length of the hypotenuse. Use the ""langchain"" API to generate the code for this hypotenuse length calculation function and print it.",code/langchain/langchain_24.py,Check if the generated code defines a function that correctly calculates the length of the hypotenuse of a right-angled triangle based on the lengths of the two shorter sides.,Verify that the program generates Python code for the hypotenuse length calculation function.,"Test that the ""langchain"" library is successfully installed.",,
763,langchain,25,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given string is a valid email address. The function should take a string as input and return True if it is a valid email address and False if it is not. Use the ""langchain"" API to generate the code for this email address validation function and print it.",code/langchain/langchain_25.py,Verify that the program generates Python code for the email address validation function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly checks if a given string is a valid email address and returns True or False.,,
764,langchain,26,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random string of a specified length. The function should take the length of the string as input and return a randomly generated string of the specified length. Use the ""langchain"" API to generate the code for this random string generation function and print it.",code/langchain/langchain_26.py,Check if the generated code defines a function that correctly generates a random string of the specified length.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the random string generation function.,,
765,langchain,27,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the factorial of a given number. The function should take a number as input and return its factorial. Use the ""langchain"" API to generate the code for this factorial calculation function and print it.",code/langchain/langchain_27.py,Check if the generated code defines a function that correctly calculates the factorial of a given number.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the factorial calculation function.,,
766,langchain,28,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random integer within a specified range. The function should take a minimum and maximum value as input and return a random integer within that range. Use the ""langchain"" API to generate the code for this random integer generation function and print it.",code/langchain/langchain_28.py,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the random integer generation function.,Check if the generated code defines a function that correctly generates a random integer within a specified range.,,
767,langchain,29,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a rectangle. The function should take the length and width of the rectangle as input and return the area. Use the ""langchain"" API to generate the code for this rectangle area calculation function and print it.",code/langchain/langchain_29.py,Verify that the program generates Python code for the rectangle area calculation function.,Check if the generated code defines a function that correctly calculates the area of a rectangle based on the length and width.,"Test that the ""langchain"" library is successfully installed.",,
768,langchain,30,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given string is a valid URL. The function should take a string as input and return True if it is a valid URL and False if it is not. Use the ""langchain"" API to generate the code for this URL validation function and print it.",code/langchain/langchain_30.py,Check if the generated code defines a function that correctly checks if a given string is a valid URL and returns True or False.,Verify that the program generates Python code for the URL validation function.,"Test that the ""langchain"" library is successfully installed.",,
769,langchain,31,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random floating-point number within a specified range. The function should take a minimum and maximum value as input and return a random floating-point number within that range. Use the ""langchain"" API to generate the code for this random floating-point number generation function and print it.",code/langchain/langchain_31.py,Check if the generated code defines a function that correctly generates a random floating-point number within a specified range.,Verify that the program generates Python code for the random floating-point number generation function.,"Test that the ""langchain"" library is successfully installed.",,
770,langchain,32,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a triangle . The function should take the base and height of the triangle as input and return the area. Use the ""langchain"" API to generate the code for this triangle area calculation function and print it.",code/langchain/langchain_32.py,Verify that the program generates Python code for the triangle area calculation function.,Check if the generated code defines a function that correctly calculates the area of a triangle based on the base and height.,"Test that the ""langchain"" library is successfully installed.",,
771,langchain,33,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random boolean value. The function should return either True or False randomly. Use the ""langchain"" API to generate the code for this random boolean value generation function and print it.",code/langchain/langchain_33.py,Check if the generated code defines a function that correctly generates a random boolean value (True or False) randomly.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the random boolean value generation function.,,
772,langchain,34,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a square. The function should take the length of a side of the square as input and return the area. Use the ""langchain"" API to generate the code for this square area calculation function and print it.",code/langchain/langchain_34.py,Verify that the program generates Python code for the square area calculation function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly calculates the area of a square based on the length of a side.,,
773,langchain,35,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the volume of a rectangular prism. The function should take the length, width, and height of the rectangular prism as input and return the volume. Use the ""langchain"" API to generate the code for this rectangular prism volume calculation function and print it.",code/langchain/langchain_35.py,"Check if the generated code defines a function that correctly calculates the volume of a rectangular prism based on the length, width, and height.",Verify that the program generates Python code for the rectangular prism volume calculation function.,"Test that the ""langchain"" library is successfully installed.",,
774,langchain,36,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a trapezoid. The function should take the lengths of the two parallel sides, the height, and the length of the shorter side of the trapezoid as input and return the area. Use the ""langchain"" API to generate the code for this trapezoid area calculation function and print it.",code/langchain/langchain_36.py,"Test that the ""langchain"" library is successfully installed.","Check if the generated code defines a function that correctly calculates the area of a trapezoid based on the lengths of the two parallel sides, the height, and the length of the shorter side.",Verify that the program generates Python code for the trapezoid area calculation function.,,
775,langchain,37,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that checks if a given string is a palindrome. The function should take a string as input and return True if it is a palindrome (reads the same forwards and backwards) and False if it is not. Use the ""langchain"" API to generate the code for this palindrome checking function and print it.",code/langchain/langchain_37.py,Verify that the program generates Python code for the palindrome checking function.,Check if the generated code defines a function that correctly checks if a given string is a palindrome and returns True or False.,"Test that the ""langchain"" library is successfully installed.",,
776,langchain,38,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the length of a string. The function should take a string as input and return its length. Use the ""langchain"" API to generate the code for this string length calculation function and print it.",code/langchain/langchain_38.py,Check if the generated code defines a function that correctly calculates the length of a string.,Verify that the program generates Python code for the string length calculation function.,"Test that the ""langchain"" library is successfully installed.",,
777,langchain,39,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that generates a random alphanumeric string of a specified length. The function should take the length of the string as input and return a randomly generated alphanumeric string of the specified length. Use the ""langchain"" API to generate the code for this random alphanumeric string generation function and print it.",code/langchain/langchain_39.py,Verify that the program generates Python code for the random alphanumeric string generation function.,"Test that the ""langchain"" library is successfully installed.",Check if the generated code defines a function that correctly generates a random alphanumeric string of the specified length.,,
778,langchain,40,"Create a Python program that utilizes the ""langchain"" API to generate code for a function that calculates the area of a parallelogram. The function should take the base and height of the parallelogram as input and return the area. Use the ""langchain"" API to generate the code for this parallelogram area calculation function and print it.",code/langchain/langchain_40.py,Check if the generated code defines a function that correctly calculates the area of a parallelogram based on the base and height.,"Test that the ""langchain"" library is successfully installed.",Verify that the program generates Python code for the parallelogram area calculation function.,,
780,linear-operator,1,Create a Python program that utilizes the 'linear-operator' API to compute the eigenvalues and eigenvectors of a given square matrix. The program should print the computed eigenvalues and eigenvectors.,code/linear-operator/linear-operator_1.py,Ensure the program correctly computes the eigenvalues of the input square matrix.,Verify that the program accurately computes the eigenvectors of the input matrix.,Confirm that the program correctly prints the computed eigenvalues and eigenvectors.,,
781,linear-operator,2,"Create a Python program that utilizes the 'linear-operator' API to solve a system of linear equations. The program should take as input a coefficient matrix and a vector of constants, and it should print the solution to the system of equations.",code/linear-operator/linear-operator_2.py,Verify that the program accurately prints the solution to the system of equations.,Ensure the program correctly solves the system of linear equations for the given coefficient matrix and vector of constants.,,,
782,linear-operator,3,Create a Python program that utilizes the 'linear-operator' API to perform matrix multiplication. The program should take as input two matrices and compute their product. The program should print the resulting matrix.,code/linear-operator/linear-operator_3.py,Verify that the program accurately prints the resulting matrix.,Ensure the program correctly computes the product of the input matrices.,,,
783,linear-operator,4,Create a Python program that utilizes the 'linear-operator' API to perform matrix inversion. The program should take as input a square matrix and compute its inverse. The program should print the inverse matrix.,code/linear-operator/linear-operator_4.py,Verify that the program accurately prints the inverse matrix.,Ensure the program correctly computes the inverse of the input square matrix.,,,
784,linear-operator,5,Create a Python program that utilizes the 'linear-operator' API to perform matrix addition. The program should take as input two matrices and compute their sum. The program should print the resulting matrix.,code/linear-operator/linear-operator_5.py,Ensure the program correctly computes the sum of the input matrices.,Verify that the program accurately prints the resulting matrix.,,,
785,linear-operator,6,Create a Python program that utilizes the 'linear-operator' API to perform matrix subtraction. The program should take as input two matrices and compute their difference. The program should print the resulting matrix.,code/linear-operator/linear-operator_6.py,Verify that the program accurately prints the resulting matrix.,Ensure the program correctly computes the difference of the input matrices.,,,
786,linear-operator,7,Create a Python program that utilizes the 'linear-operator' API to perform matrix transposition. The program should take as input a matrix and compute its transpose. The program should print the transposed matrix.,code/linear-operator/linear-operator_7.py,Ensure the program correctly computes the transpose of the input matrix.,Verify that the program accurately prints the transposed matrix.,,,
787,linear-operator,8,"Create a Python program that utilizes the 'linear-operator' API to perform matrix scaling. The program should take as input a matrix and a scalar value, and it should compute the scaled matrix. The program should print the scaled matrix.",code/linear-operator/linear-operator_8.py,Ensure the program correctly computes the scaled matrix.,Verify that the program accurately prints the scaled matrix.,,,
788,linear-operator,9,Create a Python program that utilizes the 'linear-operator' API to perform matrix division. The program should take as input two matrices and compute their division. The program should print the resulting matrix.,code/linear-operator/linear-operator_9.py,Ensure the program correctly computes the division of the input matrices.,Verify that the program accurately prints the resulting matrix.,,,
789,linear-operator,10,Create a Python program that utilizes the 'linear-operator' API to compute the determinant of a given square matrix. The program should print the computed determinant.,code/linear-operator/linear-operator_10.py,Verify that the program accurately prints the computed determinant.,Ensure the program correctly computes the determinant of the input square matrix.,,,
790,linear-operator,11,Create a Python program that utilizes the 'linear-operator' API to compute the trace of a given square matrix. The program should print the computed trace.,code/linear-operator/linear-operator_11.py,Verify that the program accurately prints the computed trace.,Ensure the program correctly computes the trace of the input square matrix.,,,
791,linear-operator,12,Create a Python program that utilizes the 'linear-operator' API to compute the rank of a given matrix. The program should print the computed rank.,code/linear-operator/linear-operator_12.py,Verify that the program accurately prints the computed rank.,Ensure the program correctly computes the rank of the input matrix.,,,
792,linear-operator,13,"Create a Python program that utilizes the 'linear-operator' API to compute the singular value decomposition (SVD) of a given matrix. The program should print the computed singular values, left singular vectors, and right singular vectors.",code/linear-operator/linear-operator_13.py,"Verify that the program accurately prints the computed singular values, left singular vectors, and right singular vectors.",Ensure the program correctly computes the singular value decomposition of the input matrix.,,,
793,linear-operator,14,Create a Python program that utilizes the 'linear-operator' API to compute the Moore-Penrose pseudoinverse of a given matrix. The program should print the computed pseudoinverse.,code/linear-operator/linear-operator_14.py,Ensure the program correctly computes the Moore-Penrose pseudoinverse of the input matrix.,Verify that the program accurately prints the computed pseudoinverse.,,,
794,linear-operator,15,Create a Python program that utilizes the 'linear-operator' API to compute the matrix exponential of a given matrix. The program should print the computed matrix exponential.,code/linear-operator/linear-operator_15.py,Verify that the program accurately prints the computed matrix exponential.,Ensure the program correctly computes the matrix exponential of the input matrix.,,,
795,linear-operator,16,Create a Python program that utilizes the 'linear-operator' API to compute the matrix logarithm of a given matrix. The program should print the computed matrix logarithm.,code/linear-operator/linear-operator_16.py,Verify that the program accurately prints the computed matrix logarithm.,Ensure the program correctly computes the matrix logarithm of the input matrix.,,,
796,linear-operator,17,Create a Python program that utilizes the 'linear-operator' API to compute the matrix square root of a given matrix. The program should print the computed matrix square root.,code/linear-operator/linear-operator_17.py,Ensure the program correctly computes the matrix square root of the input matrix.,Verify that the program accurately prints the computed matrix square root.,,,
797,linear-operator,18,"Create a Python program that utilizes the 'linear-operator' API to compute the matrix power of a given matrix. The program should take as input a matrix and an exponent, and it should compute the matrix raised to the given exponent. The program should print the resulting matrix.",code/linear-operator/linear-operator_18.py,Verify that the program accurately prints the resulting matrix.,Ensure the program correctly computes the matrix power of the input matrix.,,,
798,linear-operator,19,Create a Python program that utilizes the 'linear-operator' API to compute the matrix cosine of a given matrix. The program should print the computed matrix cosine.,code/linear-operator/linear-operator_19.py,Ensure the program correctly computes the matrix cosine of the input matrix.,Verify that the program accurately prints the computed matrix cosine.,,,
799,linear-operator,20,Create a Python program that utilizes the 'linear-operator' API to compute the matrix sine of a given matrix. The program should print the computed matrix sine.,code/linear-operator/linear-operator_20.py,Verify that the program accurately prints the computed matrix sine.,Ensure the program correctly computes the matrix sine of the input matrix.,,,
800,linear-operator,21,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic sine of a given matrix. The program should print the computed matrix hyperbolic sine.,code/linear-operator/linear-operator_21.py,Verify that the program accurately prints the computed matrix hyperbolic sine.,Ensure the program correctly computes the matrix hyperbolic sine of the input matrix.,,,
801,linear-operator,22,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic cosine of a given matrix. The program should print the computed matrix hyperbolic cosine.,code/linear-operator/linear-operator_22.py,Verify that the program accurately prints the computed matrix hyperbolic cosine.,Ensure the program correctly computes the matrix hyperbolic cosine of the input matrix.,,,
802,linear-operator,23,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic tangent of a given matrix. The program should print the computed matrix hyperbolic tangent.,code/linear-operator/linear-operator_23.py,Verify that the program accurately prints the computed matrix hyperbolic tangent.,Ensure the program correctly computes the matrix hyperbolic tangent of the input matrix.,,,
803,linear-operator,24,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic cotangent of a given matrix. The program should print the computed matrix hyperbolic cotangent.,code/linear-operator/linear-operator_24.py,Ensure the program correctly computes the matrix hyperbolic cotangent of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic cotangent.,,,
804,linear-operator,25,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic secant of a given matrix. The program should print the computed matrix hyperbolic secant.,code/linear-operator/linear-operator_25.py,Ensure the program correctly computes the matrix hyperbolic secant of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic secant.,,,
805,linear-operator,26,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic cosecant of a given matrix. The program should print the computed matrix hyperbolic cosecant.,code/linear-operator/linear-operator_26.py,Ensure the program correctly computes the matrix hyperbolic cosecant of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic cosecant.,,,
806,linear-operator,27,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic versine of a given matrix. The program should print the computed matrix hyperbolic versine.,code/linear-operator/linear-operator_27.py,Verify that the program accurately prints the computed matrix hyperbolic versine.,Ensure the program correctly computes the matrix hyperbolic versine of the input matrix.,,,
807,linear-operator,28,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic coversine of a given matrix. The program should print the computed matrix hyperbolic coversine.,code/linear-operator/linear-operator_28.py,Ensure the program correctly computes the matrix hyperbolic coversine of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic coversine.,,,
808,linear-operator,29,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic haversine of a given matrix. The program should print the computed matrix hyperbolic haversine.,code/linear-operator/linear-operator_29.py,Verify that the program accurately prints the computed matrix hyperbolic haversine.,Ensure the program correctly computes the matrix hyperbolic haversine of the input matrix.,,,
809,linear-operator,30,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic exsecant of a given matrix. The program should print the computed matrix hyperbolic exsecant.,code/linear-operator/linear-operator_30.py,Ensure the program correctly computes the matrix hyperbolic exsecant of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic exsecant.,,,
810,linear-operator,31,Create a Python program that utilizes the 'linear-operator' API to compute the matrix hyperbolic excosecant of a given matrix. The program should print the computed matrix hyperbolic excosecant.,code/linear-operator/linear-operator_31.py,Ensure the program correctly computes the matrix hyperbolic excosecant of the input matrix.,Verify that the program accurately prints the computed matrix hyperbolic excosecant.,,,
821,llama-index,1,"Develop a Python program with 'llama-index' to query 'https://en.wikipedia.org/wiki/Ahmed_Zewail' using 'TrafilaturaWebReader,' create 'GPTListIndex,' and answer two questions: Zewail's awards and publications. Print responses.",code/llama-index/llama-index_1.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately answer the provided questions based on the indexed data from the webpage.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
822,llama-index,2,Generate a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Python_(programming_language).' Extract information about the history and features of the Python programming language. Print the extracted information.,code/llama-index/llama-index_2.py,Test that the program can accurately extract and display information about the history and features of the Python programming language.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
823,llama-index,3,"Develop a Python program that utilizes the 'llama-index' API to scrape and index content from 'https://en.wikipedia.org/wiki/Machine_learning.' Extract information about the types of machine learning, such as supervised learning, unsupervised learning, and reinforcement learning. Print the extracted information.",code/llama-index/llama-index_3.py,"Test that the program can accurately extract and display information about types of machine learning, including supervised learning, unsupervised learning, and reinforcement learning.",Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
824,llama-index,4,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Artificial_intelligence.' Extract information about the history of artificial intelligence and its applications. Print the extracted information.,code/llama-index/llama-index_4.py,Test that the program can accurately extract and display information about the history of artificial intelligence and its applications.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
825,llama-index,5,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Neural_network.' Extract information about the architecture and applications of neural networks. Print the extracted information.,code/llama-index/llama-index_5.py,Test that the program can accurately extract and display information about the architecture and applications of neural networks.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
826,llama-index,6,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Data_science.' Extract information about the key concepts and tools used in data science. Print the extracted information.,code/llama-index/llama-index_6.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about key concepts and tools used in data science.,,
827,llama-index,7,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Blockchain.' Extract information about the technology and applications of blockchain. Print the extracted information.,code/llama-index/llama-index_7.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the technology and applications of blockchain.,,
828,llama-index,8,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Quantum_computing.' Extract information about the principles and potential applications of quantum computing. Print the extracted information.,code/llama-index/llama-index_8.py,Test that the program can accurately extract and display information about the principles and potential applications of quantum computing.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
829,llama-index,9,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Deep_learning.' Extract information about the concepts and advancements in deep learning. Print the extracted information.,code/llama-index/llama-index_9.py,Test that the program can accurately extract and display information about concepts and advancements in deep learning.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
830,llama-index,10,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_vision.' Extract information about the history and applications of machine vision. Print the extracted information.,code/llama-index/llama-index_10.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about the history and applications of machine vision.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
831,llama-index,11,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Robotics.' Extract information about the history and types of robotics. Print the extracted information.,code/llama-index/llama-index_11.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about the history and types of robotics.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
832,llama-index,12,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Artificial_neural_network.' Extract information about the structure and training of artificial neural networks. Print the extracted information.,code/llama-index/llama-index_12.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the structure and training of artificial neural networks.,,
833,llama-index,13,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_graphics.' Extract information about the history and techniques of computer graphics. Print the extracted information.,code/llama-index/llama-index_13.py,Test that the program can accurately extract and display information about the history and techniques of computer graphics.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
834,llama-index,14,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Quantum_mechanics.' Extract information about the principles and key concepts of quantum mechanics. Print the extracted information.,code/llama-index/llama-index_14.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the principles and key concepts of quantum mechanics.,,
835,llama-index,15,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Genetic_algorithms.' Extract information about the principles and applications of genetic algorithms. Print the extracted information.,code/llama-index/llama-index_15.py,Test that the program can accurately extract and display information about the principles and applications of genetic algorithms.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
836,llama-index,16,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_security.' Extract information about the history and key principles of computer security. Print the extracted information.,code/llama-index/llama-index_16.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the history and key principles of computer security.,,
837,llama-index,17,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Operating_system.' Extract information about the history and types of operating systems. Print the extracted information.,code/llama-index/llama-index_17.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the history and types of operating systems.,,
838,llama-index,18,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Big_data.' Extract information about the concepts and technologies related to big data. Print the extracted information.,code/llama-index/llama-index_18.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about the concepts and technologies related to big data.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
839,llama-index,19,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Artificial_intelligence_in_healthcare.' Extract information about the applications and challenges of artificial intelligence in healthcare. Print the extracted information.,code/llama-index/llama-index_19.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the applications and challenges of artificial intelligence in healthcare.,,
840,llama-index,20,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_learning_in_finance.' Extract information about the use of machine learning in finance and its impact. Print the extracted information.,code/llama-index/llama-index_20.py,Test that the program can accurately extract and display information about the use of machine learning in finance and its impact.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
841,llama-index,21,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Reinforcement_learning.' Extract information about the concepts and applications of reinforcement learning. Print the extracted information.,code/llama-index/llama-index_21.py,Test that the program can accurately extract and display information about the concepts and applications of reinforcement learning.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
842,llama-index,22,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Artificial_neural_networks_in_theory_and_practice.' Extract information about the theoretical concepts and practical applications of artificial neural networks. Print the extracted information.,code/llama-index/llama-index_22.py,Test that the program can accurately extract and display information about the theoretical concepts and practical applications of artificial neural networks.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
843,llama-index,23,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_vision.' Extract information about the history and techniques of computer vision. Print the extracted information.,code/llama-index/llama-index_23.py,Test that the program can accurately extract and display information about the history and techniques of computer vision.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
844,llama-index,24,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Natural_language_processing.' Extract information about the history and applications of natural language processing. Print the extracted information.,code/llama-index/llama-index_24.py,Test that the program can accurately extract and display information about the history and applications of natural language processing.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
845,llama-index,25,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Quantum_computing_in_theory_and_practice.' Extract information about the theoretical concepts and practical applications of quantum computing. Print the extracted information.,code/llama-index/llama-index_25.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about the theoretical concepts and practical applications of quantum computing.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
846,llama-index,26,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_learning_algorithms.' Extract information about the machine learning algorithms and their applications. Print the extracted information.,code/llama-index/llama-index_26.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about machine learning algorithms and their applications.,,
847,llama-index,27,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Blockchain_technology.' Extract information about the technology and applications of blockchain. Print the extracted information.,code/llama-index/llama-index_27.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the technology and applications of blockchain.,,
848,llama-index,28,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Quantum_computing_technology.' Extract information about the technology and potential applications of quantum computing. Print the extracted information.,code/llama-index/llama-index_28.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the technology and potential applications of quantum computing.,,
849,llama-index,29,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Deep_learning_concepts.' Extract information about the concepts and advancements in deep learning. Print the extracted information.,code/llama-index/llama-index_29.py,Test that the program can accurately extract and display information about concepts and advancements in deep learning.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
850,llama-index,30,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_vision_history.' Extract information about the history and applications of machine vision. Print the extracted information.,code/llama-index/llama-index_30.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about the history and applications of machine vision.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
851,llama-index,31,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_security_history.' Extract information about the history and key principles of computer security. Print the extracted information.,code/llama-index/llama-index_31.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the history and key principles of computer security.,,
852,llama-index,32,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Operating_system_history.' Extract information about the history and evolution of operating systems. Print the extracted information.,code/llama-index/llama-index_32.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the history and evolution of operating systems.,,
853,llama-index,33,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Deep_learning_applications.' Extract information about the applications and advancements in deep learning. Print the extracted information.,code/llama-index/llama-index_33.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about applications and advancements in deep learning.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
854,llama-index,34,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Natural_language_processing_applications.' Extract information about the applications and impact of natural language processing. Print the extracted information.,code/llama-index/llama-index_34.py,Test that the program can accurately extract and display information about applications and impact of natural language processing.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
855,llama-index,35,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Blockchain_applications.' Extract information about the applications and potential impact of blockchain technology. Print the extracted information.,code/llama-index/llama-index_35.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the program can accurately extract and display information about applications and potential impact of blockchain technology.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
856,llama-index,36,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Quantum_computing_applications.' Extract information about the applications and potential benefits of quantum computing. Print the extracted information.,code/llama-index/llama-index_36.py,Test that the program can accurately extract and display information about applications and potential benefits of quantum computing.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
857,llama-index,37,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_learning_in_healthcare.' Extract information about the applications and challenges of machine learning in healthcare. Print the extracted information.,code/llama-index/llama-index_37.py,Test that the program can accurately extract and display information about applications and challenges of machine learning in healthcare.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
858,llama-index,38,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_vision_applications.' Extract information about the applications and innovations in computer vision. Print the extracted information.,code/llama-index/llama-index_38.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about applications and innovations in computer vision.,,
859,llama-index,39,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Machine_learning_in_finance.' Extract information about the use of machine learning in finance and its impact. Print the extracted information.,code/llama-index/llama-index_39.py,Test that the program can accurately extract and display information about the use of machine learning in finance and its impact.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
860,llama-index,40,Write a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Computer_network_security.' Extract information about the principles and practices of computer network security. Print the extracted information.,code/llama-index/llama-index_40.py,Test that the program can accurately extract and display information about the principles and practices of computer network security.,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,,
861,llama-index,41,Develop a Python program using the 'llama-index' API to scrape and index data from 'https://en.wikipedia.org/wiki/Robotics.' Extract information about the history and applications of robotics. Print the extracted information.,code/llama-index/llama-index_41.py,Test that the 'TrafilaturaWebReader' correctly loads and processes the content from the specified website.,Test that the 'GPTListIndex' is created and functions as expected to index the webpage content.,Test that the program can accurately extract and display information about the history and applications of robotics.,,
862,mlflow,1,"Create a program that uses the MLflow API to train a simple decision tree classifier on the Iris dataset. Log the model, its hyperparameters, and accuracy as a metric. Save the model as an artifact.",code/mlflow/mlflow_1.py,Test if hyperparameters 'criterion' and 'max_depth' are logged correctly.,Test if the Decision Tree model is correctly trained.,Test if the accuracy metric is logged correctly.,,
863,mlflow,2,"Create a program that utilizes the MLflow API to track and log hyperparameters, metrics, and artifacts for a random forest classifier trained on the breast cancer dataset. Save the trained model as an artifact.",code/mlflow/mlflow_2.py,Test if the Random Forest model is correctly trained.,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,,
864,mlflow,3,Develop a program that uses the MLflow API to track the training of a K-means clustering model on a synthetic dataset. Log the cluster centers as artifacts.,code/mlflow/mlflow_3.py,Test if the K-means clustering model is correctly trained.,Test if cluster centers are logged as artifacts.,,,
865,mlflow,4,"Write a program that uses the MLflow API to train a linear regression model on a sample housing dataset. Log the model's coefficients, mean squared error, and R-squared score as metrics.",code/mlflow/mlflow_4.py,Test if model coefficients are logged correctly.,Test if mean squared error and R-squared score are logged correctly.,Test if the linear regression model is correctly trained.,,
866,mlflow,5,"Create a program that leverages the MLflow API to train a support vector machine (SVM) classifier on the famous iris dataset. Log the trained model, and its hyperparameters.",code/mlflow/mlflow_5.py,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the SVM classifier is correctly trained.,,
867,mlflow,6,"Develop a program that uses the MLflow API to train a neural network classifier (e.g., a simple feedforward network) on a synthetic dataset. Log the trained model and the loss curve as metrics.",code/mlflow/mlflow_6.py,Test if the neural network model is correctly trained.,Test if the loss curve is logged as an artifact.,,,
868,mlflow,7,Write a program that utilizes the MLflow API to train a Naive Bayes classifier on the well-known iris dataset. Log the model and its hyperparameters. Save the model as an artifact.,code/mlflow/mlflow_7.py,Test if the Naive Bayes classifier is correctly trained.,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,,
869,mlflow,8,"Develop a program that uses the MLflow API to train a random forest regressor on a synthetic dataset. Log the model, its hyperparameters, and the mean absolute error as a metric.",code/mlflow/mlflow_8.py,Test if the mean absolute error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Random Forest regressor is correctly trained.,,
870,mlflow,9,Write a program that utilizes the MLflow API to train a K-means clustering model on the famous iris dataset. Log the cluster centers as artifacts.,code/mlflow/mlflow_9.py,Test if the K-means clustering model is correctly trained.,Test if cluster centers are logged as artifacts.,,,
871,mlflow,10,Develop a program that uses the MLflow API to train a logistic regression classifier on a synthetic binary classification dataset. Log the model and its hyperparameters.,code/mlflow/mlflow_10.py,Test if hyperparameters are logged correctly.,Test if the logistic regression classifier is correctly trained.,,,
872,mlflow,11,"Write a program that uses the MLflow API to train a support vector machine (SVM) classifier on a synthetic dataset. Log the model, its hyperparameters, and accuracy as a metric.",code/mlflow/mlflow_11.py,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the SVM classifier is correctly trained.,,
873,mlflow,12,"Develop a program that utilizes the MLflow API to train a random forest regressor on a synthetic dataset. Log the model, its hyperparameters, and mean squared error as a metric.",code/mlflow/mlflow_12.py,Test if the mean squared error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Random Forest regressor is correctly trained.,,
874,mlflow,13,"Write a program that uses the MLflow API to train a linear regression model on a synthetic dataset. Log the model, its coefficients, and the mean absolute error as metrics.",code/mlflow/mlflow_13.py,Test if the mean absolute error metric is logged correctly.,Test if model coefficients are logged correctly.,Test if the linear regression model is correctly trained.,,
875,mlflow,14,"Develop a program that uses the MLflow API to train a simple decision tree classifier on a synthetic binary classification dataset. Log the model, its hyperparameters, and accuracy as a metric.",code/mlflow/mlflow_14.py,Test if the Decision Tree classifier is correctly trained.,Test if hyperparameters are logged correctly.,Test if the accuracy metric is logged correctly.,,
876,mlflow,15,"Write a program that leverages the MLflow API to train a random forest regressor on a synthetic dataset. Log the model, its hyperparameters, and the mean squared error as a metric.",code/mlflow/mlflow_15.py,Test if the mean squared error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Random Forest regressor is correctly trained.,,
877,mlflow,16,Develop a program that uses the MLflow API to train a K-means clustering model on a synthetic dataset. Log the model and its hyperparameters.,code/mlflow/mlflow_16.py,Test if the K-means clustering model is correctly trained.,Test if hyperparameters are logged correctly.,,,
878,mlflow,17,"Write a program that uses the MLflow API to train a decision tree regressor on a synthetic dataset. Log the model, its hyperparameters, and the mean squared error as a metric.",code/mlflow/mlflow_17.py,Test if the mean squared error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Decision Tree regressor is correctly trained.,,
879,mlflow,18,"Develop a program that uses the MLflow API to train a logistic regression classifier on a synthetic binary classification dataset. Log the model, its hyperparameters, and accuracy as a metric.",code/mlflow/mlflow_18.py,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the logistic regression classifier is correctly trained.,,
880,mlflow,19,"Write a program that utilizes the MLflow API to train a neural network regressor (e.g., a simple feedforward network) on a synthetic dataset. Log the trained model and the loss curve as metrics.",code/mlflow/mlflow_19.py,Test if the neural network regressor is correctly trained.,Test if the loss curve is logged as an artifact.,,,
881,mlflow,20,"Develop a program that uses the MLflow API to train a random forest classifier on a synthetic binary classification dataset. Log the model, its hyperparameters, and accuracy as a metric.",code/mlflow/mlflow_20.py,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Random Forest classifier is correctly trained.,,
882,mlflow,21,"Write a program that uses the MLflow API to train a decision tree regressor on a synthetic dataset. Log the model, its hyperparameters, and mean squared error as a metric.",code/mlflow/mlflow_21.py,Test if the mean squared error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Decision Tree regressor is correctly trained.,,
884,mlflow,23,"Write a program that uses the MLflow API to train a logistic regression classifier on a synthetic binary classification dataset. Log the model, its hyperparameters, and accuracy as a metric.",code/mlflow/mlflow_23.py,Test if the accuracy metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the logistic regression classifier is correctly trained.,,
886,mlflow,25,"Write a program that utilizes the MLflow API to train a random forest regressor on a synthetic dataset. Log the model, its hyperparameters, and mean squared error as a metric.",code/mlflow/mlflow_25.py,Test if the mean squared error metric is logged correctly.,Test if hyperparameters are logged correctly.,Test if the Random Forest regressor is correctly trained.,,
903,mmengine,1,Develop a Python program using the 'mmengine' API to create a custom dataset class for the MNIST dataset. The program should include data loading and preprocessing. Ensure that the dataset can be used for training and testing purposes.,code/mmengine/mmengine_1.py,Confirm that the dataset can be used effectively for machine learning tasks.,Verify that the dataset class preprocesses the data appropriately for training and testing.,Ensure that the program can download the MNIST dataset and split it into training and testing sets.,,
904,mmengine,2,"Create a Python program using the 'mmengine' API to build a deep learning model for image classification. The model should use the MNIST dataset and achieve high accuracy. Ensure that the program includes all necessary components like model architecture, data loading, training, and evaluation.",code/mmengine/mmengine_2.py,Ensure that the model achieves high accuracy during training and evaluation.,Confirm that the training process can be resumed from a saved checkpoint.,Verify that the program can build a deep learning model for image classification using the MNIST dataset.,,
905,mmengine,3,Develop a Python program using the 'mmengine' API to perform object detection on a set of images. The program should use a pre-trained model for object detection and be able to detect and draw bounding boxes around objects in the images.,code/mmengine/mmengine_3.py,Confirm that the program can display the detection results using pyplot.,Verify that the model can correctly detect objects in a set of images and draw bounding boxes around them.,Ensure that the program can load a pre-trained object detection model.,,
906,mmengine,4,Create a Python program using the 'mmengine' API to perform semantic segmentation on an input image. The program should use a pre-trained model for semantic segmentation and be able to segment the image into different classes.,code/mmengine/mmengine_4.py,Verify that the model can perform semantic segmentation on an input image and segment it into different classes.,Ensure that the program can load a pre-trained semantic segmentation model.,Confirm that the program can display the segmentation result using the specified palette.,,
907,mmengine,5,Develop a Python program using the 'mmengine' API to perform image super-resolution on a low-resolution image. The program should use a pre-trained model for image super-resolution and enhance the quality of the input image.,code/mmengine/mmengine_5.py,Verify that the model can perform image super-resolution on a low-resolution input image.,Confirm that the super-resolved image is saved correctly.,Ensure that the program can load a pre-trained image super-resolution model.,,
908,mmengine,6,Create a Python program using the 'mmengine' API to perform text detection in an image. The program should use a pre-trained model for text detection and be able to locate and draw bounding boxes around text in the image.,code/mmengine/mmengine_6.py,Confirm that the program can display the detection results using pyplot.,Ensure that the program can load a pre-trained text detection model.,Verify that the model can perform text detection in an input image and draw bounding boxes around text.,,
909,mmengine,7,Develop a Python program using the 'mmengine' API to perform face recognition on a set of images. The program should use a pre-trained model for face recognition and be able to recognize and label faces in the images.,code/mmengine/mmengine_7.py,Verify that the model can perform face recognition on a set of input images and label the recognized faces.,Ensure that the program can load a pre-trained face recognition model.,Confirm that the recognition results are displayed correctly.,,
910,mmengine,8,Create a Python program using the 'mmengine' API to perform style transfer on an input image. The program should use a pre-trained model for style transfer and apply the style of a reference image to the input image.,code/mmengine/mmengine_8.py,Ensure that the program can load a pre-trained style transfer model.,Confirm that the stylized image is saved correctly.,Verify that the model can perform style transfer on an input image using a reference image for style.,,
911,mmengine,9,Develop a Python program using the 'mmengine' API to perform sentiment analysis on a set of text documents. The program should use a pre-trained model for sentiment analysis and be able to classify the sentiment of each document.,code/mmengine/mmengine_9.py,Ensure that the program can load a pre-trained sentiment analysis model.,Confirm that the sentiment classification results are displayed correctly.,Verify that the model can perform sentiment analysis on a set of text documents and classify their sentiment.,,
912,mmengine,10,Create a Python program using the 'mmengine' API to perform object tracking in a video. The program should use a pre-trained model for object tracking and be able to track and label objects in the video.,code/mmengine/mmengine_10.py,Verify that the model can perform object tracking in a video and label the tracked objects.,Ensure that the program can load a pre-trained object tracking model.,Confirm that the tracking results are displayed correctly.,,
913,mmengine,11,Develop a Python program using the 'mmengine' API to perform image captioning. The program should use a pre-trained model for image captioning and be able to generate captions for a set of input images.,code/mmengine/mmengine_11.py,Verify that the model can generate captions for a set of input images.,Confirm that the generated captions are displayed correctly.,Ensure that the program can load a pre-trained image captioning model.,,
914,mmengine,12,Create a Python program using the 'mmengine' API to perform scene recognition on a set of images. The program should use a pre-trained model for scene recognition and be able to classify the scenes in the images.,code/mmengine/mmengine_12.py,Confirm that the scene recognition results are displayed correctly.,Verify that the model can perform scene recognition on a set of input images and classify the scenes.,Ensure that the program can load a pre-trained scene recognition model.,,
915,mmengine,13,Develop a Python program using the 'mmengine' API to perform action recognition on a video. The program should use a pre-trained model for action recognition and be able to classify the actions in the video.,code/mmengine/mmengine_13.py,Verify that the model can perform action recognition on a video and classify the actions in the frames.,Ensure that the program can load a pre-trained action recognition model.,Confirm that the action recognition results are displayed correctly.,,
916,mmengine,14,Create a Python program using the 'mmengine' API to perform emotion recognition on a set of images. The program should use a pre-trained model for emotion recognition and be able to classify the emotions in the images.,code/mmengine/mmengine_14.py,Ensure that the program can load a pre-trained emotion recognition model.,Verify that the model can perform emotion recognition on a set of input images and classify the emotions.,Confirm that the emotion recognition results are displayed correctly.,,
917,mmengine,15,Develop a Python program using the 'mmengine' API to perform keypoint detection on a set of images. The program should use a pre-trained model for keypoint detection and be able to detect and label keypoints in the images.,code/mmengine/mmengine_15.py,Ensure that the program can load a pre-trained keypoint detection model.,Confirm that the keypoint detection results are displayed correctly.,Verify that the model can perform keypoint detection on a set of input images and label the detected keypoints.,,
918,mmengine,16,Create a Python program using the 'mmengine' API to perform object counting in an image. The program should use a pre-trained model for object counting and be able to count the number of objects in the image.,code/mmengine/mmengine_16.py,Ensure that the program can load a pre-trained object counting model.,Confirm that the object count is displayed correctly.,Verify that the model can perform object counting on an input image and correctly count the number of objects.,,
919,mmengine,17,Develop a Python program using the 'mmengine' API to perform document layout analysis on a scanned document image. The program should use a pre-trained model for document layout analysis and be able to detect and classify different layout elements in the document.,code/mmengine/mmengine_17.py,Ensure that the program can load a pre-trained document layout analysis model.,Confirm that the layout analysis results are displayed correctly.,Verify that the model can perform document layout analysis on a scanned document image and detect and classify layout elements.,,
920,mmengine,18,Create a Python program using the 'mmengine' API to perform image similarity comparison. The program should use a pre-trained model for image similarity and be able to compare a set of input images to find similar images.,code/mmengine/mmengine_18.py,Verify that the model can perform image similarity comparison on a set of input images and find similar images.,Confirm that the similarity results are displayed correctly.,Ensure that the program can load a pre-trained image similarity model.,,
921,mmengine,19,Develop a Python program using the 'mmengine' API to perform image generation. The program should use a pre-trained model for image generation and be able to generate new images based on a given input.,code/mmengine/mmengine_19.py,Ensure that the program can load a pre-trained image generation model.,Verify that the model can generate new images based on a given input.,Confirm that the generated image is saved correctly.,,
922,mmengine,20,Create a Python program using the 'mmengine' API to perform style transfer on a set of images. The program should use a pre-trained model for style transfer and apply the style of a reference image to each input image.,code/mmengine/mmengine_20.py,Ensure that the program can load a pre-trained style transfer model.,Verify that the model can perform style transfer on a set of input images using a reference image for style.,Confirm that the stylized images are saved correctly.,,
923,mmengine,21,Develop a Python program using the 'mmengine' API to perform scene text recognition on an image. The program should use a pre-trained model for scene text recognition and be able to recognize and extract text from the image.,code/mmengine/mmengine_21.py,Confirm that the recognized text is displayed correctly.,Verify that the model can perform scene text recognition on an input image and extract the recognized text.,Ensure that the program can load a pre-trained scene text recognition model.,,
924,mmengine,22,Create a Python program using the 'mmengine' API to perform visual question answering (VQA). The program should use a pre-trained model for VQA and be able to answer questions about an image.,code/mmengine/mmengine_22.py,Ensure that the program can load a pre-trained VQA model.,Verify that the model can answer questions about an input image.,Confirm that the answers to the questions are displayed correctly.,,
925,mmengine,23,Develop a Python program using the 'mmengine' API to perform image inpainting. The program should use a pre-trained model for image inpainting and be able to fill in missing or damaged parts of an input image.,code/mmengine/mmengine_23.py,Verify that the model can perform image inpainting on an input image and fill in missing or damaged parts.,Confirm that the inpainted image is saved correctly.,Ensure that the program can load a pre-trained image inpainting model.,,
926,mmengine,24,Create a Python program using the 'mmengine' API to perform image deblurring. The program should use a pre-trained model for image deblurring and be able to remove blur from an input image.,code/mmengine/mmengine_24.py,Confirm that the deblurred image is saved correctly.,Ensure that the program can load a pre-trained image deblurring model.,Verify that the model can perform image deblurring on a blurred input image and remove the blur.,,
927,mmengine,25,Develop a Python program using the 'mmengine' API to perform optical character recognition (OCR) on an image. The program should use a pre-trained model for OCR and be able to recognize and extract text from the image.,code/mmengine/mmengine_25.py,Verify that the model can perform optical character recognition on an input image and extract the recognized text.,Confirm that the recognized text is displayed correctly.,Ensure that the program can load a pre-trained OCR model.,,
928,mmengine,26,Create a Python program using the 'mmengine' API to perform object segmentation on an image. The program should use a pre-trained model for object segmentation and be able to segment the objects in the image into different classes.,code/mmengine/mmengine_26.py,Verify that the model can perform object segmentation on an input image and segment the objects into different classes.,Confirm that the segmentation result is displayed correctly.,Ensure that the program can load a pre-trained object segmentation model.,,
929,mmengine,27,Develop a Python program using the 'mmengine' API to perform image recognition on a set of images. The program should use a pre-trained model for image recognition and be able to classify the images into different categories.,code/mmengine/mmengine_27.py,Ensure that the program can load a pre-trained image recognition model.,Verify that the model can perform image recognition on a set of input images and classify them into different categories.,Confirm that the recognition results are displayed correctly.,,
930,mmengine,28,Create a Python program using the 'mmengine' API to perform image translation. The program should use a pre-trained model for image translation and be able to translate the language of text in an image.,code/mmengine/mmengine_28.py,Confirm that the translated image is saved correctly.,Ensure that the program can load a pre-trained image translation model.,Verify that the model can perform image translation on an input image and translate the language of text in the image.,,
931,mmengine,29,Develop a Python program using the 'mmengine' API to perform audio sentiment analysis. The program should use a pre-trained model for audio sentiment analysis and be able to classify the sentiment of an audio clip.,code/mmengine/mmengine_29.py,Verify that the model can perform sentiment analysis on an audio clip and classify its sentiment.,Confirm that the sentiment classification is displayed correctly.,Ensure that the program can load a pre-trained audio sentiment analysis model.,,
932,mmengine,30,Create a Python program using the 'mmengine' API to perform image stitching. The program should use a pre-trained model for image stitching and be able to stitch together a set of input images to create a panoramic image.,code/mmengine/mmengine_30.py,Confirm that the panoramic image is saved correctly.,Ensure that the program can load a pre-trained image stitching model.,Verify that the model can perform image stitching on a set of input images and create a panoramic image.,,
933,mmengine,31,Develop a Python program using the 'mmengine' API to perform video generation. The program should use a pre-trained model for video generation and be able to generate a new video based on a given set of input images.,code/mmengine/mmengine_31.py,Confirm that the generated video is saved correctly.,Ensure that the program can load a pre-trained video generation model.,Verify that the model can perform video generation based on a set of input images and create a new video.,,
934,mmengine,32,Create a Python program using the 'mmengine' API to perform audio generation. The program should use a pre-trained model for audio generation and be able to generate new audio based on a given text input.,code/mmengine/mmengine_32.py,Verify that the model can perform audio generation based on a text input and create a new audio file.,Ensure that the program can load a pre-trained audio generation model.,Confirm that the generated audio is saved correctly.,,
935,mmengine,33,Develop a Python program using the 'mmengine' API to perform style transfer on a video. The program should use a pre-trained model for video style transfer and apply the style of a reference video to an input video.,code/mmengine/mmengine_33.py,Verify that the model can perform video style transfer on an input video using a reference video for style.,Ensure that the program can load a pre-trained video style transfer model.,Confirm that the stylized video is saved correctly.,,
936,mmengine,34,Create a Python program using the 'mmengine' API to perform speech recognition. The program should use a pre-trained model for speech recognition and be able to transcribe the speech in an audio clip.,code/mmengine/mmengine_34.py,Confirm that the transcribed speech is displayed correctly.,Ensure that the program can load a pre-trained speech recognition model.,Verify that the model can perform speech recognition on an audio clip and transcribe the speech.,,
937,mmengine,35,Develop a Python program using the 'mmengine' API to perform image denoising. The program should use a pre-trained model for image denoising and be able to remove noise from an input image.,code/mmengine/mmengine_35.py,Ensure that the program can load a pre-trained image denoising model.,Verify that the model can perform image denoising on a noisy input image and remove the noise.,Confirm that the denoised image is saved correctly.,,
938,mmengine,36,Create a Python program using the 'mmengine' API to perform image super-resolution. The program should use a pre-trained model for image super-resolution and be able to enhance the resolution of an input image.,code/mmengine/mmengine_36.py,Verify that the model can perform image super-resolution on a low-resolution input image and enhance its resolution.,Ensure that the program can load a pre-trained image super-resolution model.,Confirm that the high-resolution image is saved correctly.,,
939,mmengine,37,Develop a Python program using the 'mmengine' API to perform anomaly detection on a set of images. The program should use a pre-trained model for anomaly detection and be able to detect anomalies in the images.,code/mmengine/mmengine_37.py,Confirm that the anomaly detection results are displayed correctly.,Ensure that the program can load a pre-trained anomaly detection model.,Verify that the model can perform anomaly detection on a set of input images and detect anomalies.,,
940,mmengine,38,Create a Python program using the 'mmengine' API to perform video super-resolution. The program should use a pre-trained model for video super-resolution and be able to enhance the resolution of an input video.,code/mmengine/mmengine_38.py,Confirm that the high-resolution video is saved correctly.,Verify that the model can perform video super-resolution on a low-resolution input video and enhance its resolution.,Ensure that the program can load a pre-trained video super-resolution model.,,
941,mmengine,39,Develop a Python program using the 'mmengine' API to perform emotion recognition in audio. The program should use a pre-trained model for audio emotion recognition and be able to classify the emotion conveyed in an audio clip.,code/mmengine/mmengine_39.py,Ensure that the program can load a pre-trained audio emotion recognition model.,Confirm that the emotion classification is displayed correctly.,Verify that the model can perform emotion recognition on an audio clip and classify the emotion conveyed.,,
942,mmengine,40,Create a Python program using the 'mmengine' API to perform action recognition in videos. The program should use a pre-trained model for video action recognition and be able to classify the actions performed in a video.,code/mmengine/mmengine_40.py,Verify that the model can perform action recognition on a video and classify the actions performed.,Ensure that the program can load a pre-trained video action recognition model.,Confirm that the action classification is displayed correctly.,,
943,mmengine,41,Create a Python program using the 'mmengine' API to perform object detection on a given image using a pre-trained model. The program should take an image as input and produce bounding box predictions for objects in the image.,code/mmengine/mmengine_41.py,Ensure that the program successfully detects objects in the input image and provides bounding box predictions with class labels and scores.,Verify that the program can initialize the detection engine using the specified configuration and checkpoint files.,Check the accuracy of the object detection results by comparing them to ground truth annotations if available.,,
944,more-itertools,1,"Create a Python program using the 'more-itertools' API to demonstrate grouping and transforming pairs of integers. The program should take a list of integers, group them into pairs, and then double each integer in the pair. Finally, calculate the sum of the transformed pairs and print the grouped pairs and the sum square.",code/more-itertools/more-itertools_1.py,Test if the program correctly groups the list of integers into pairs using 'grouper' from 'more-itertools'.,Ensure that the program calculates and prints the sum of the transformed pairs without errors.,Verify that the program doubles each integer in the pairs correctly and stores the transformed pairs.,,
945,more-itertools,2,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables. The program should take two lists of integers, combine them using the 'roundrobin' function from 'more-itertools', and print the combined list. Finally, calculate the sum of the combined list and print the sum.",code/more-itertools/more-itertools_2.py,Ensure that the program calculates and prints the sum of the combined list without errors.,Test if the program correctly combines the two lists using 'roundrobin' from 'more-itertools'.,Verify that the program prints the combined list without errors.,,
946,more-itertools,3,"Create a Python program using the 'more-itertools' API to demonstrate the partitioning of a list into consecutive sublists. The program should take a list of integers, partition it into sublists of consecutive integers using the 'consecutive_groups' function from 'more-itertools', and print the partitioned sublists. Finally, calculate the sum of each sublist and print the sums.",code/more-itertools/more-itertools_3.py,Verify that the program prints the partitioned sublists without errors.,Test if the program correctly partitions the list of integers into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,Ensure that the program calculates and prints the sums of each sublist without errors.,,
947,more-itertools,4,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified repetition count. The program should take two lists of integers, combine them using the 'interleave_longest' function from 'more-itertools' with a repetition count of 3, and print the combined list. Finally, calculate the sum of the combined list and print the sum.",code/more-itertools/more-itertools_4.py,Ensure that the program calculates and prints the sum of the combined list without errors.,Test if the program correctly combines the two lists using 'interleave_longest' from 'more-itertools' with a repetition count of 3.,Verify that the program prints the combined list without errors.,,
948,more-itertools,5,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list. The program should take a list of integers, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only even numbers. Finally, print the filtered sublists and calculate the sum of each sublist and print the sums.",code/more-itertools/more-itertools_5.py,Verify that the program filters out sublists that contain only even numbers correctly.,Test if the program correctly partitions the list of integers into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,Ensure that the program prints the filtered sublists and calculates and prints the sums of each sublist without errors.,,
949,more-itertools,6,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value. The program should take three lists of integers, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of -1, and print the combined list. Finally, calculate the sum of the combined list and print the sum.",code/more-itertools/more-itertools_6.py,Ensure that the program calculates and prints the sum of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of -1.,Verify that the program prints the combined list without errors.,,
950,more-itertools,7,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of integers, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that have a sum greater than 10. Finally, print the filtered sublists and calculate the sum of each sublist and print the sums.",code/more-itertools/more-itertools_7.py,Test if the program correctly partitions the list of integers into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,Ensure that the program prints the filtered sublists and calculates and prints the sums of each sublist without errors.,Verify that the program filters out sublists that have a sum greater than 10 correctly.,,
951,more-itertools,8,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of integers, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of -1 and a repetition count of 2, and print the combined list. Finally, calculate the sum of the combined list and print the sum.",code/more-itertools/more-itertools_8.py,Ensure that the program calculates and prints the sum of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of -1 and a repetition count of 2.,Verify that the program prints the combined list without errors.,,
952,more-itertools,9,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that have a length greater than 3. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_9.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that have a length greater than 3 correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
953,more-itertools,10,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 2, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_10.py,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 2.,,
954,more-itertools,11,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings starting with a vowel. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_11.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that contain only strings starting with a vowel correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
955,more-itertools,12,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 3, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_12.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 3.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
956,more-itertools,13,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with a length greater than 5. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_13.py,Verify that the program filters out sublists that contain only strings with a length greater than 5 correctly.,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
957,more-itertools,14,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 4, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_14.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 4.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
958,more-itertools,15,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with all lowercase letters. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_15.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that contain only strings with all lowercase letters correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
959,more-itertools,16,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 5, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_16.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 5.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
960,more-itertools,17,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with all uppercase letters. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_17.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that contain only strings with all uppercase letters correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
961,more-itertools,18,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 6, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_18.py,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 6.,,
962,more-itertools,19,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with a length less than 5. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_19.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that contain only strings with a length less than 5 correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
963,more-itertools,20,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 7, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_20.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 7.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
964,more-itertools,21,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with all numeric characters. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_21.py,Verify that the program filters out sublists that contain only strings with all numeric characters correctly.,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
965,more-itertools,22,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 8, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_22.py,Ensure that the program calculates and prints the length of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 8.,Verify that the program prints the combined list without errors.,,
966,more-itertools,23,"Create a Python program using the 'more-itertools' API to demonstrate the grouping and filtering of elements in a list based on a condition. The program should take a list of strings, group them into consecutive sublists using the 'consecutive_groups' function from 'more-itertools', and filter out sublists that contain only strings with all alphabetic characters. Finally, print the filtered sublists and calculate the length of each sublist and print the lengths.",code/more-itertools/more-itertools_23.py,Ensure that the program prints the filtered sublists and calculates and prints the lengths of each sublist without errors.,Verify that the program filters out sublists that contain only strings with all alphabetic characters correctly.,Test if the program correctly partitions the list of strings into consecutive sublists using 'consecutive_groups' from 'more-itertools'.,,
967,more-itertools,24,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 9, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_24.py,Ensure that the program calculates and prints the length of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 9.,Verify that the program prints the combined list without errors.,,
969,more-itertools,26,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 10, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_26.py,Ensure that the program calculates and prints the length of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 10.,Verify that the program prints the combined list without errors.,,
971,more-itertools,28,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 11, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_28.py,Ensure that the program calculates and prints the length of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 11.,Verify that the program prints the combined list without errors.,,
973,more-itertools,30,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 12, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_30.py,Ensure that the program calculates and prints the length of the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 12.,Verify that the program prints the combined list without errors.,,
975,more-itertools,32,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 13, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_32.py,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 13.,,
977,more-itertools,34,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 14, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_34.py,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 14.,,
979,more-itertools,36,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 15, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_36.py,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 15.,,
981,more-itertools,38,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 16, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_38.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 16.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
983,more-itertools,40,"Create a Python program using the 'more-itertools' API to demonstrate the combination of multiple iterables with a specified fill value and repetition count. The program should take three lists of strings, combine them using the 'interleave_longest' function from 'more-itertools' with a fill value of 'NA' and a repetition count of 17, and print the combined list. Finally, calculate the length of the combined list and print the length.",code/more-itertools/more-itertools_40.py,Test if the program correctly combines the three lists using 'interleave_longest' from 'more-itertools' with a fill value of 'NA' and a repetition count of 17.,Ensure that the program calculates and prints the length of the combined list without errors.,Verify that the program prints the combined list without errors.,,
985,numpy,1,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its transpose, and calculating the matrix product.",code/numpy/numpy_1.py,Test the program with matrices of different sizes and verify that the transpose operation correctly swaps rows and columns.,Verify the correctness of the matrix product by comparing it to a manual calculation for smaller matrices.,Test the program's performance by generating and processing large matrices.,,
986,numpy,2,"Create a Python program that uses the 'numpy' API to perform statistical operations on a given dataset. The program should read a CSV file containing numerical data, calculate the mean, median, and standard deviation of each column, and display the results.",code/numpy/numpy_2.py,"Test the program with different CSV files containing numerical data and verify that the mean, median, and standard deviation are calculated correctly for each column.",Test the program's performance by processing large CSV files with a large number of columns.,"Verify the correctness of the calculations by manually calculating the mean, median, and standard deviation for smaller datasets.",,
987,numpy,3,"Create a Python program that uses the 'numpy' API to perform element-wise mathematical operations on a given array. The program should read an array from a text file, calculate the square root, exponential, and logarithm of each element, and display the results.",code/numpy/numpy_3.py,Test the program's performance by processing large text files with a large number of elements.,"Test the program with different text files containing arrays of different sizes and verify that the square root, exponential, and logarithm are calculated correctly for each element.","Verify the correctness of the calculations by manually calculating the square root, exponential, and logarithm for smaller arrays.",,
988,numpy,4,"Create a Python program that uses the 'numpy' API to perform element-wise mathematical operations on a given array. The program should read an array from a text file, calculate the sine, cosine, and tangent of each element, and display the results.",code/numpy/numpy_4.py,Test the program's performance by processing large text files with a large number of elements.,"Verify the correctness of the calculations by manually calculating the sine, cosine, and tangent for smaller arrays.","Test the program with different text files containing arrays of different sizes and verify that the sine, cosine, and tangent are calculated correctly for each element.",,
989,numpy,5,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its inverse, and calculating the determinant.",code/numpy/numpy_5.py,Verify the correctness of the determinant calculation by comparing it to a manual calculation for smaller matrices.,Test the program's performance by generating and processing large matrices.,Test the program with matrices of different sizes and verify that the inverse operation correctly calculates the inverse matrix.,,
990,numpy,6,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its eigenvalues and eigenvectors.",code/numpy/numpy_6.py,Verify the correctness of the eigenvalues and eigenvectors by manually calculating them for smaller matrices.,Test the program's performance by generating and processing large matrices.,Test the program with matrices of different sizes and verify that the eigenvalues and eigenvectors are calculated correctly.,,
991,numpy,7,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its singular value decomposition (SVD), and reconstructing the original matrix using the SVD components.",code/numpy/numpy_7.py,Test the program with matrices of different sizes and verify that the singular value decomposition and reconstruction are performed correctly.,Verify the correctness of the reconstruction by comparing the reconstructed matrix to the original matrix for smaller matrices.,Test the program's performance by generating and processing large matrices.,,
992,numpy,8,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its QR decomposition, and reconstructing the original matrix using the QR decomposition components.",code/numpy/numpy_8.py,Verify the correctness of the reconstruction by comparing the reconstructed matrix to the original matrix for smaller matrices.,Test the program with matrices of different sizes and verify that the QR decomposition and reconstruction are performed correctly.,Test the program's performance by generating and processing large matrices.,,
993,numpy,9,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its LU decomposition, and reconstructing the original matrix using the LU decomposition components.",code/numpy/numpy_9.py,Verify the correctness of the reconstruction by comparing the reconstructed matrix to the original matrix for smaller matrices.,Test the program with matrices of different sizes and verify that the LU decomposition and reconstruction are performed correctly.,Test the program's performance by generating and processing large matrices.,,
994,numpy,10,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its Cholesky decomposition, and reconstructing the original matrix using the Cholesky decomposition components.",code/numpy/numpy_10.py,Verify the correctness of the reconstruction by comparing the reconstructed matrix to the original matrix for smaller matrices.,Test the program's performance by generating and processing large positive definite matrices.,Test the program with positive definite matrices of different sizes and verify that the Cholesky decomposition and reconstruction are performed correctly.,,
995,numpy,11,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its singular value decomposition (SVD), and calculating the rank of the matrix.",code/numpy/numpy_11.py,Test the program with matrices of different sizes and verify that the singular value decomposition and rank calculation are performed correctly.,Test the program's performance by generating and processing large matrices.,Verify the correctness of the rank calculation by comparing it to a manual calculation for smaller matrices.,,
996,numpy,12,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its trace, and calculating the sum of its diagonal elements.",code/numpy/numpy_12.py,Test the program's performance by generating and processing large matrices.,Verify the correctness of the trace calculation by manually calculating it for smaller matrices.,Test the program with matrices of different sizes and verify that the trace and diagonal sum are calculated correctly.,,
997,numpy,13,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its norm, and calculating the maximum and minimum values of its elements.",code/numpy/numpy_13.py,Verify the correctness of the norm calculation by manually calculating it for smaller matrices.,"Test the program with matrices of different sizes and verify that the norm, maximum value, and minimum value are calculated correctly.",Test the program's performance by generating and processing large matrices.,,
998,numpy,14,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its mean, and calculating the sum of its elements.",code/numpy/numpy_14.py,Test the program with matrices of different sizes and verify that the mean and sum are calculated correctly.,Test the program's performance by generating and processing large matrices.,Verify the correctness of the mean calculation by manually calculating it for smaller matrices.,,
999,numpy,15,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its covariance matrix, and calculating the correlation coefficient between two columns of the matrix.",code/numpy/numpy_15.py,Test the program with matrices of different sizes and verify that the covariance matrix and correlation coefficient are calculated correctly.,Test the program's performance by generating and processing large matrices.,Verify the correctness of the covariance matrix and correlation coefficient by comparing them to manual calculations for smaller matrices.,,
1000,numpy,16,"Create a Python program that uses the 'numpy' API to perform matrix operations, including generating a random matrix, computing its mean along a specified axis, and calculating the sum of its elements along a specified axis.",code/numpy/numpy_16.py,Verify the correctness of the mean and sum calculations by manually calculating them for smaller matrices.,Test the program with matrices of different sizes and verify that the mean and sum along the specified axis are calculated correctly.,Test the program's performance by generating and processing large matrices.,,
1026,optuna,1,Create a Python program using the 'optuna' API for hyperparameter optimization. The program should optimize the hyperparameters of a Support Vector Machine (SVM) model for classifying the Iris dataset. It should search for the best combination of 'kernel' and 'C' hyperparameters and print the best hyperparameters and the corresponding accuracy.,code/optuna/optuna_1.py,Test if the program correctly loads the Iris dataset and splits it into training and testing sets.,Verify that the program performs hyperparameter optimization using 'optuna' and returns the best hyperparameters and their accuracy.,Ensure that the program prints the best hyperparameters and accuracy without errors.,,
1027,optuna,2,"Create a Python program using the 'optuna' API for optimizing the hyperparameters of a neural network model. The program should search for the best combination of 'learning rate' and 'hidden layers' for a feedforward neural network. After optimization, it should train the neural network with the best hyperparameters on the MNIST dataset and print the final accuracy on a validation set.",code/optuna/optuna_2.py,"Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Ensure that the program trains the neural network with the best hyperparameters and prints the validation accuracy without errors.,Test if the program correctly loads the MNIST dataset and preprocesses it for training and testing.,,
1028,optuna,3,Create a Python program using the 'optuna' API to optimize the hyperparameters of a gradient boosting classifier. The program should search for the best combination of 'n_estimators' and 'max_depth' hyperparameters for a gradient boosting classifier on a custom dataset and print the cross-validated F1 score.,code/optuna/optuna_3.py,"Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,"Ensure that the program creates and evaluates the gradient boosting classifier with the best hyperparameters, printing the cross-validated F1 score without errors.",,
1029,optuna,4,Create a Python program using the 'optuna' API to optimize the hyperparameters of a decision tree classifier. The program should search for the best combination of 'criterion' and 'max_depth' hyperparameters for a decision tree classifier on a custom dataset and print the cross-validated accuracy.,code/optuna/optuna_4.py,"Ensure that the program creates and evaluates the decision tree classifier with the best hyperparameters, printing the cross-validated accuracy without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1030,optuna,5,Create a Python program using the 'optuna' API to optimize the hyperparameters of a K-nearest neighbors (K-NN) classifier. The program should search for the best combination of 'n_neighbors' and 'p' hyperparameters for a K-NN classifier on a custom dataset and print the cross-validated accuracy.,code/optuna/optuna_5.py,"Ensure that the program creates and evaluates the K-NN classifier with the best hyperparameters, printing the cross-validated accuracy without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1031,optuna,6,Create a Python program using the 'optuna' API to optimize the hyperparameters of a random forest classifier. The program should search for the best combination of 'n_estimators' and 'max_depth' hyperparameters for a random forest classifier on a custom dataset and print the cross-validated accuracy.,code/optuna/optuna_6.py,"Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,"Ensure that the program creates and evaluates the random forest classifier with the best hyperparameters, printing the cross-validated accuracy without errors.",,
1032,optuna,7,Create a Python program using the 'optuna' API to optimize the hyperparameters of a linear regression model. The program should search for the best combination of 'alpha' and 'fit_intercept' hyperparameters for a Lasso regression model on a custom dataset and print the cross-validated R-squared score.,code/optuna/optuna_7.py,"Ensure that the program creates and evaluates the Lasso regression model with the best hyperparameters, printing the cross-validated R-squared score without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1033,optuna,8,Create a Python program using the 'optuna' API to optimize the hyperparameters of a random forest regressor. The program should search for the best combination of 'n_estimators' and 'max_depth' hyperparameters for a random forest regressor on a custom dataset and print the cross-validated mean squared error.,code/optuna/optuna_8.py,"Ensure that the program creates and evaluates the random forest regressor with the best hyperparameters, printing the cross-validated mean squared error without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1034,optuna,9,Create a Python program using the 'optuna' API to optimize the hyperparameters of a gradient boosting regressor. The program should search for the best combination of 'n_estimators' and 'max_depth' hyperparameters for a gradient boosting regressor on a custom dataset and print the cross-validated mean absolute error.,code/optuna/optuna_9.py,"Ensure that the program creates and evaluates the gradient boosting regressor with the best hyperparameters, printing the cross-validated mean absolute error without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1035,optuna,10,Create a Python program using the 'optuna' API to optimize the hyperparameters of a K-means clustering model. The program should search for the best combination of 'n_clusters' and 'max_iter' hyperparameters for a K-means clustering model on a custom dataset and print the silhouette score.,code/optuna/optuna_10.py,"Ensure that the program creates and evaluates the K-means clustering model with the best hyperparameters, printing the silhouette score without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1036,optuna,11,Create a Python program using the 'optuna' API to optimize the hyperparameters of a principal component analysis (PCA) model. The program should search for the best combination of 'n_components' and 'svd_solver' hyperparameters for a PCA model on a custom dataset and print the explained variance ratio.,code/optuna/optuna_11.py,"Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,"Ensure that the program creates and evaluates the PCA model with the best hyperparameters, printing the explained variance ratio without errors.",,
1037,optuna,12,Create a Python program using the 'optuna' API to optimize the hyperparameters of a linear discriminant analysis (LDA) model. The program should search for the best combination of 'n_components' and 'solver' hyperparameters for an LDA model on a custom dataset and print the explained variance ratio.,code/optuna/optuna_12.py,"Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,"Ensure that the program creates and evaluates the LDA model with the best hyperparameters, printing the explained variance ratio without errors.",,
1038,optuna,13,Create a Python program using the 'optuna' API to optimize the hyperparameters of a support vector machine (SVM) classifier. The program should search for the best combination of 'C' and 'kernel' hyperparameters for an SVM classifier on a custom dataset and print the cross-validated accuracy.,code/optuna/optuna_13.py,"Ensure that the program creates and evaluates the SVM classifier with the best hyperparameters, printing the cross-validated accuracy without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1039,optuna,14,Create a Python program using the 'optuna' API to optimize the hyperparameters of a random forest classifier. The program should search for the best combination of 'n_estimators' and 'max_depth' hyperparameters for a random forest classifier on a custom dataset and print the cross-validated F1 score.,code/optuna/optuna_14.py,"Ensure that the program creates and evaluates the random forest classifier with the best hyperparameters, printing the cross-validated F1 score without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1042,optuna,17,Create a Python program using the 'optuna' API to optimize the hyperparameters of a logistic regression model. The program should search for the best combination of 'C' and 'penalty' hyperparameters for a logistic regression model on a custom dataset and print the cross-validated accuracy.,code/optuna/optuna_17.py,"Ensure that the program creates and evaluates the logistic regression model with the best hyperparameters, printing the cross-validated accuracy without errors.","Verify that the program performs hyperparameter optimization using ""optuna"" and returns the best hyperparameters.",Test if the program correctly generates a custom dataset for the machine learning task.,,
1066,optuna,41,Develop a Python program that utilizes the 'optuna' API for hyperparameter optimization. The program should optimize the hyperparameters of a gradient boosting classifier for a classification task using the digits dataset. It should search for the best combination of 'n_estimators' and 'learning_rate' hyperparameters and print the best hyperparameters and the corresponding accuracy.,code/optuna/optuna_41.py,Ensure that the program prints the best hyperparameters and accuracy without errors.,Verify that the program performs hyperparameter optimization using 'optuna' and returns the best hyperparameters and their accuracy.,Test if the program correctly loads the digits dataset and splits it into training and testing sets.,,
1067,pandas,1,"Create a Python program that uses the 'pandas' API to read a JSON file containing sales data, calculate total sales revenue for each product, identify the product with the highest revenue, and create a summary DataFrame.",code/pandas/pandas_1.py,Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the highest revenue product.,Check the performance of the program with a large sales data file and record the execution time for performance testing.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",,
1068,pandas,2,"Create a Python program that uses the 'pandas' API to read a CSV file containing student data, calculate the average score for each subject, identify the subject with the highest average score, and create a summary DataFrame.",code/pandas/pandas_2.py,Implement unit tests to verify the correctness of average score calculations and the identification of the subject with the highest average score.,Check the performance of the program with a large student data file and record the execution time for performance testing.,"Test the program with different student data files, including edge cases with missing or incomplete data, to ensure robustness.",,
1069,pandas,3,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the total salary for each department, identify the department with the highest total salary, and create a summary DataFrame.",code/pandas/pandas_3.py,Implement unit tests to verify the correctness of total salary calculations and the identification of the department with the highest total salary.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1070,pandas,4,"Create a Python program that uses the 'pandas' API to read a CSV file containing stock data, calculate the average closing price for each month, identify the month with the highest average closing price, and create a summary DataFrame.",code/pandas/pandas_4.py,Implement unit tests to verify the correctness of average closing price calculations and the identification of the month with the highest average closing price.,"Test the program with different stock data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large stock data file and record the execution time for performance testing.,,
1071,pandas,5,"Create a Python program that uses the 'pandas' API to read a CSV file containing customer data, calculate the total revenue for each customer, identify the customer with the highest total revenue, and create a summary DataFrame.",code/pandas/pandas_5.py,"Test the program with different customer data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of total revenue calculations and the identification of the customer with the highest total revenue.,Check the performance of the program with a large customer data file and record the execution time for performance testing.,,
1072,pandas,6,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the average salary for each job title, identify the job title with the highest average salary, and create a summary DataFrame.",code/pandas/pandas_6.py,Implement unit tests to verify the correctness of average salary calculations and the identification of the job title with the highest average salary.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1073,pandas,7,"Create a Python program that uses the 'pandas' API to read a CSV file containing sales data, calculate the total sales revenue for each month, identify the month with the highest sales revenue, and create a summary DataFrame.",code/pandas/pandas_7.py,Check the performance of the program with a large sales data file and record the execution time for performance testing.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the month with the highest sales revenue.,,
1074,pandas,8,"Create a Python program that uses the 'pandas' API to read a CSV file containing customer data, calculate the average age for each gender, identify the gender with the highest average age, and create a summary DataFrame.",code/pandas/pandas_8.py,"Test the program with different customer data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of average age calculations and the identification of the gender with the highest average age.,Check the performance of the program with a large customer data file and record the execution time for performance testing.,,
1075,pandas,9,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the average salary for each department, identify the department with the highest average salary, and create a summary DataFrame.",code/pandas/pandas_9.py,Implement unit tests to verify the correctness of average salary calculations and the identification of the department with the highest average salary.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1076,pandas,10,"Create a Python program that uses the 'pandas' API to read a CSV file containing customer data, calculate the average purchase amount for each customer, identify the customer with the highest average purchase amount, and create a summary DataFrame.",code/pandas/pandas_10.py,"Test the program with different customer data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of average purchase amount calculations and the identification of the customer with the highest average purchase amount.,Check the performance of the program with a large customer data file and record the execution time for performance testing.,,
1077,pandas,11,"Create a Python program that uses the 'pandas' API to read a CSV file containing sales data, calculate the total sales revenue for each category, identify the category with the highest sales revenue, and create a summary DataFrame.",code/pandas/pandas_11.py,Check the performance of the program with a large sales data file and record the execution time for performance testing.,Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the category with the highest sales revenue.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",,
1078,pandas,12,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the average age for each department, identify the department with the highest average age, and create a summary DataFrame.",code/pandas/pandas_12.py,Implement unit tests to verify the correctness of average age calculations and the identification of the department with the highest average age.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1079,pandas,13,"Create a Python program that uses the 'pandas' API to read a CSV file containing customer data, calculate the total number of purchases for each customer, identify the customer with the highest number of purchases, and create a summary DataFrame.",code/pandas/pandas_13.py,Implement unit tests to verify the correctness of total number of purchases calculations and the identification of the customer with the highest number of purchases.,"Test the program with different customer data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large customer data file and record the execution time for performance testing.,,
1080,pandas,14,"Create a Python program that uses the 'pandas' API to read a CSV file containing stock data, calculate the average volume for each month, identify the month with the highest average volume, and create a summary DataFrame.",code/pandas/pandas_14.py,"Test the program with different stock data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of average volume calculations and the identification of the month with the highest average volume.,Check the performance of the program with a large stock data file and record the execution time for performance testing.,,
1081,pandas,15,"Create a Python program that uses the 'pandas' API to read a CSV file containing sales data, calculate the total sales revenue for each region, identify the region with the highest sales revenue, and create a summary DataFrame.",code/pandas/pandas_15.py,Check the performance of the program with a large sales data file and record the execution time for performance testing.,Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the region with the highest sales revenue.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",,
1082,pandas,16,"Create a Python program that uses the 'pandas' API to read a CSV file containing customer data, calculate the average age for each occupation, identify the occupation with the highest average age, and create a summary DataFrame.",code/pandas/pandas_16.py,"Test the program with different customer data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large customer data file and record the execution time for performance testing.,Implement unit tests to verify the correctness of average age calculations and the identification of the occupation with the highest average age.,,
1083,pandas,17,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the total number of employees for each department, identify the department with the highest number of employees, and create a summary DataFrame.",code/pandas/pandas_17.py,Implement unit tests to verify the correctness of total number of employees calculations and the identification of the department with the highest number of employees.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1084,pandas,18,"Create a Python program that uses the 'pandas' API to read a CSV file containing sales data, calculate the total sales revenue for each customer, identify the customer with the highest sales revenue, and create a summary DataFrame.",code/pandas/pandas_18.py,Check the performance of the program with a large sales data file and record the execution time for performance testing.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the customer with the highest sales revenue.,,
1087,pandas,21,"Create a Python program that uses the 'pandas' API to read a CSV file containing stock data, calculate the average closing price for each year, identify the year with the highest average closing price, and create a summary DataFrame.",code/pandas/pandas_21.py,"Test the program with different stock data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large stock data file and record the execution time for performance testing.,Implement unit tests to verify the correctness of average closing price calculations and the identification of the year with the highest average closing price.,,
1091,pandas,25,"Create a Python program that uses the 'pandas' API to read a CSV file containing sales data, calculate the total sales revenue for each product category, identify the category with the highest sales revenue, and create a summary DataFrame.",code/pandas/pandas_25.py,Check the performance of the program with a large sales data file and record the execution time for performance testing.,Implement unit tests to verify the correctness of total sales revenue calculations and the identification of the category with the highest sales revenue.,"Test the program with different sales data files, including edge cases with missing or incomplete data, to ensure robustness.",,
1094,pandas,28,"Create a Python program that uses the 'pandas' API to read a CSV file containing employee data, calculate the total salary for each job title, identify the job title with the highest total salary, and create a summary DataFrame.",code/pandas/pandas_28.py,Implement unit tests to verify the correctness of total salary calculations and the identification of the job title with the highest total salary.,"Test the program with different employee data files, including edge cases with missing or incomplete data, to ensure robustness.",Check the performance of the program with a large employee data file and record the execution time for performance testing.,,
1108,plotly,1,"Create a Python program using the 'plotly' API to generate an interactive line chart. The program should define data points for the x and y axes, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as an HTML file and display it on the screen.",code/plotly/plotly_1.py,"Verify that the program creates an interactive line chart with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as an HTML file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1109,plotly,2,"Create a Python program using the 'plotly' API to generate a bar chart. The program should define data points for the x and y axes, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as an image file and display it on the screen.",code/plotly/plotly_2.py,"Verify that the program creates a bar chart with the specified title, X-axis label, and Y-axis label.",Test if the program correctly defines data points for the x and y axes.,Ensure that the program saves the chart as an image file and displays it on the screen without errors.,,
1110,plotly,3,"Create a Python program using the 'plotly' API to generate a scatter plot. The program should define data points for the x and y axes, create the plot, customize the plot title, X-axis label, and Y-axis label. Finally, save the plot as a PDF file and display it on the screen.",code/plotly/plotly_3.py,"Verify that the program creates a scatter plot with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the plot as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1111,plotly,4,"Create a Python program using the 'plotly' API to generate a pie chart. The program should define data points for the labels and values, create the chart, customize the chart title, and display the percentage values on the chart. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_4.py,Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the labels and values.,Verify that the program creates a pie chart with the specified title and displays the percentage values on the chart.,,
1112,plotly,5,"Create a Python program using the 'plotly' API to generate a 3D scatter plot. The program should define data points for the x, y, and z axes, create the plot, customize the plot title, X-axis label, Y-axis label, and Z-axis label. Finally, save the plot as an SVG file and display it on the screen.",code/plotly/plotly_5.py,"Verify that the program creates a 3D scatter plot with the specified title, X-axis label, Y-axis label, and Z-axis label.",Ensure that the program saves the plot as an SVG file and displays it on the screen without errors.,"Test if the program correctly defines data points for the x, y, and z axes.",,
1113,plotly,6,"Create a Python program using the 'plotly' API to generate a stacked bar chart. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_6.py,"Verify that the program creates a stacked bar chart with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,,
1114,plotly,7,"Create a Python program using the 'plotly' API to generate a box plot. The program should define data points for the x axis and multiple sets of data for the y axis, create the plot, customize the plot title, X-axis label, and Y-axis label. Finally, save the plot as a PDF file and display it on the screen.",code/plotly/plotly_7.py,"Verify that the program creates a box plot with the specified title, X-axis label, and Y-axis label.",Test if the program correctly defines data points for the x axis.,Ensure that the program saves the plot as a PDF file and displays it on the screen without errors.,,
1115,plotly,8,"Create a Python program using the 'plotly' API to generate a heatmap. The program should define data points for the x and y axes, create the heatmap, customize the heatmap title, X-axis label, and Y-axis label. Finally, save the heatmap as a PNG image file and display it on the screen.",code/plotly/plotly_8.py,"Verify that the program creates a heatmap with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the heatmap as a PNG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1116,plotly,9,"Create a Python program using the 'plotly' API to generate a histogram. The program should define data points for the x axis, create the histogram, customize the histogram title, X-axis label, and Y-axis label. Finally, save the histogram as a JPEG image file and display it on the screen.",code/plotly/plotly_9.py,Ensure that the program saves the histogram as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,"Verify that the program creates a histogram with the specified title, X-axis label, and Y-axis label.",,
1117,plotly,10,"Create a Python program using the 'plotly' API to generate a line chart with error bars. The program should define data points for the x and y axes, as well as the error values for each data point. The program should create the chart, customize the chart title, X-axis label, and Y-axis label, and display the error bars on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_10.py,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,"Verify that the program creates a line chart with error bars and displays the specified title, X-axis label, and Y-axis label.",,
1118,plotly,11,"Create a Python program using the 'plotly' API to generate a stacked area chart. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as an SVG file and display it on the screen.",code/plotly/plotly_11.py,Ensure that the program saves the chart as an SVG file and displays it on the screen without errors.,"Verify that the program creates a stacked area chart with the specified title, X-axis label, and Y-axis label.",Test if the program correctly defines data points for the x axis.,,
1119,plotly,12,"Create a Python program using the 'plotly' API to generate a violin plot. The program should define data points for the x axis and multiple sets of data for the y axis, create the plot, customize the plot title, X-axis label, and Y-axis label. Finally, save the plot as a PNG image file and display it on the screen.",code/plotly/plotly_12.py,Test if the program correctly defines data points for the x axis.,Ensure that the program saves the plot as a PNG image file and displays it on the screen without errors.,"Verify that the program creates a violin plot with the specified title, X-axis label, and Y-axis label.",,
1120,plotly,13,"Create a Python program using the 'plotly' API to generate a radar chart. The program should define data points for the categories and values, create the chart, customize the chart title, and display the data points on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_13.py,Test if the program correctly defines data points for the categories and values.,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Verify that the program creates a radar chart with the specified title and displays the data points on the chart.,,
1121,plotly,14,"Create a Python program using the 'plotly' API to generate a bubble chart. The program should define data points for the x, y, and z axes, create the chart, customize the chart title, X-axis label, Y-axis label, and size of the bubbles. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_14.py,Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,"Verify that the program creates a bubble chart with the specified title, X-axis label, Y-axis label, and size of the bubbles.","Test if the program correctly defines data points for the x, y, and z axes.",,
1122,plotly,15,"Create a Python program using the 'plotly' API to generate a stacked line chart. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_15.py,"Verify that the program creates a stacked line chart with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,,
1123,plotly,16,"Create a Python program using the 'plotly' API to generate a polar chart. The program should define data points for the theta and r axes, create the chart, customize the chart title, and display the data points on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_16.py,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Verify that the program creates a polar chart with the specified title and displays the data points on the chart.,Test if the program correctly defines data points for the theta and r axes.,,
1124,plotly,17,"Create a Python program using the 'plotly' API to generate a waterfall chart. The program should define data points for the x axis and multiple sets of data for the y axis, create the chart, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_17.py,"Verify that the program creates a waterfall chart with the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,,
1125,plotly,18,"Create a Python program using the 'plotly' API to generate a sunburst chart. The program should define data points for the labels, parents, and values, create the chart, customize the chart title, and display the data points on the chart. Finally, save the chart as an SVG file and display it on the screen.",code/plotly/plotly_18.py,Ensure that the program saves the chart as an SVG file and displays it on the screen without errors.,Verify that the program creates a sunburst chart with the specified title and displays the data points on the chart.,"Test if the program correctly defines data points for the labels, parents, and values.",,
1126,plotly,19,"Create a Python program using the 'plotly' API to generate a scatter plot matrix. The program should define data points for multiple variables, create the scatter plot matrix, customize the chart title, and display the scatter plots on the matrix. Finally, save the matrix as a PDF file and display it on the screen.",code/plotly/plotly_19.py,Verify that the program creates a scatter plot matrix with the specified title and displays the scatter plots on the matrix.,Test if the program correctly defines data points for multiple variables.,Ensure that the program saves the matrix as a PDF file and displays it on the screen without errors.,,
1127,plotly,20,"Create a Python program using the 'plotly' API to generate a 3D surface plot. The program should define data points for the x, y, and z axes, create the plot, customize the plot title, X-axis label, Y-axis label, and Z-axis label. Finally, save the plot as an SVG file and display it on the screen.",code/plotly/plotly_20.py,Ensure that the program saves the plot as an SVG file and displays it on the screen without errors.,"Verify that the program creates a 3D surface plot with the specified title, X-axis label, Y-axis label, and Z-axis label.","Test if the program correctly defines data points for the x, y, and z axes.",,
1128,plotly,21,"Create a Python program using the 'plotly' API to generate a treemap. The program should define data points for the labels, parents, and values, create the chart, customize the chart title, and display the data points on the chart. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_21.py,Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,Verify that the program creates a treemap with the specified title and displays the data points on the chart.,"Test if the program correctly defines data points for the labels, parents, and values.",,
1129,plotly,22,"Create a Python program using the 'plotly' API to generate a gauge chart. The program should define data points for the value and range of the gauge, create the chart, customize the chart title, and display the value on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_22.py,Verify that the program creates a gauge chart with the specified title and displays the value on the chart.,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the value and range of the gauge.,,
1130,plotly,23,"Create a Python program using the 'plotly' API to generate a choropleth map. The program should define data points for the locations and values, create the map, customize the map title, and display the data points on the map. Finally, save the map as an HTML file and display it on the screen.",code/plotly/plotly_23.py,Verify that the program creates a choropleth map with the specified title and displays the data points on the map.,Ensure that the program saves the map as an HTML file and displays it on the screen without errors.,Test if the program correctly defines data points for the locations and values.,,
1131,plotly,24,"Create a Python program using the 'plotly' API to generate a scatter plot with a trendline. The program should define data points for the x and y axes, create the scatter plot with a trendline, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_24.py,"Verify that the program creates a scatter plot with a trendline and displays the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1132,plotly,25,"Create a Python program using the 'plotly' API to generate a stacked area chart with a logarithmic y-axis. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart with a logarithmic y-axis, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_25.py,"Verify that the program creates a stacked area chart with a logarithmic y-axis and displays the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,,
1133,plotly,26,"Create a Python program using the 'plotly' API to generate a scatter plot with error bars. The program should define data points for the x and y axes, as well as the error values for each data point. The program should create the scatter plot with error bars, customize the chart title, X-axis label, and Y-axis label, and display the error bars on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_26.py,"Verify that the program creates a scatter plot with error bars and displays the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1134,plotly,27,"Create a Python program using the 'plotly' API to generate a bar chart with grouped bars. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart with grouped bars, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_27.py,"Verify that the program creates a bar chart with grouped bars and displays the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x axis.,,
1135,plotly,28,"Create a Python program using the 'plotly' API to generate a scatter plot with a color scale. The program should define data points for the x and y axes, as well as the color values for each data point. The program should create the scatter plot with a color scale, customize the chart title, X-axis label, and Y-axis label, and display the color scale on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_28.py,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,"Verify that the program creates a scatter plot with a color scale and displays the specified title, X-axis label, and Y-axis label.",,
1136,plotly,29,"Create a Python program using the 'plotly' API to generate a line chart with multiple lines. The program should define data points for the x axis, create multiple sets of data for the y axis, create the chart with multiple lines, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_29.py,Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,"Verify that the program creates a line chart with multiple lines and displays the specified title, X-axis label, and Y-axis label.",Test if the program correctly defines data points for the x axis.,,
1137,plotly,30,"Create a Python program using the 'plotly' API to generate a polar scatter plot. The program should define data points for the theta and r axes, create the plot, customize the plot title, X-axis label, and Y-axis label. Finally, save the plot as an SVG file and display it on the screen.",code/plotly/plotly_30.py,Ensure that the program saves the plot as an SVG file and displays it on the screen without errors.,"Verify that the program creates a polar scatter plot with the specified title, X-axis label, and Y-axis label.",Test if the program correctly defines data points for the theta and r axes.,,
1138,plotly,31,"Create a Python program using the 'plotly' API to generate a donut chart. The program should define data points for the labels and values, create the chart, customize the chart title, and display the percentage values on the chart. Finally, save the chart as a PNG image file and display it on the screen.",code/plotly/plotly_31.py,Ensure that the program saves the chart as a PNG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the labels and values.,Verify that the program creates a donut chart with the specified title and displays the percentage values on the chart.,,
1139,plotly,32,"Create a Python program using the 'plotly' API to generate a scatter plot with a color scale and size scale. The program should define data points for the x and y axes, as well as the color and size values for each data point. The program should create the scatter plot with a color scale and size scale, customize the chart title, X-axis label, and Y-axis label, and display the color scale and size scale on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_32.py,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,"Verify that the program creates a scatter plot with a color scale and size scale and displays the specified title, X-axis label, and Y-axis label.",,
1140,plotly,33,"Create a Python program using the 'plotly' API to generate a stacked scatter plot. The program should define data points for the x and y axes, as well as the z values for each data point. The program should create the scatter plot with stacked markers, customize the chart title, X-axis label, and Y-axis label, and display the z values on the markers. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_33.py,"Verify that the program creates a stacked scatter plot with the specified title, X-axis label, and Y-axis label, and displays the z values on the markers.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1141,plotly,34,"Create a Python program using the 'plotly' API to generate a 3D surface plot with color scale. The program should define data points for the x, y, and z axes, as well as the color values for each data point. The program should create the 3D surface plot with a color scale, customize the chart title, X-axis label, Y-axis label, and Z-axis label, and display the color scale on the chart. Finally, save the chart as an SVG file and display it on the screen.",code/plotly/plotly_34.py,Ensure that the program saves the chart as an SVG file and displays it on the screen without errors.,"Verify that the program creates a 3D surface plot with a color scale and displays the specified title, X-axis label, Y-axis label, and Z-axis label.","Test if the program correctly defines data points for the x, y, and z axes.",,
1142,plotly,35,"Create a Python program using the 'plotly' API to generate a scatter plot with a trendline and error bars. The program should define data points for the x and y axes, as well as the error values for each data point. The program should create the scatter plot with a trendline and error bars, customize the chart title, X-axis label, and Y-axis label, and display the trendline and error bars on the chart. Finally, save the chart as a PDF file and display it on the screen.",code/plotly/plotly_35.py,Ensure that the program saves the chart as a PDF file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,"Verify that the program creates a scatter plot with a trendline and error bars and displays the specified title, X-axis label, and Y-axis label.",,
1143,plotly,36,"Create a Python program using the 'plotly' API to generate a scatter plot with a logarithmic y-axis. The program should define data points for the x and y axes, create the scatter plot with a logarithmic y-axis, customize the chart title, X-axis label, and Y-axis label. Finally, save the chart as a JPEG image file and display it on the screen.",code/plotly/plotly_36.py,"Verify that the program creates a scatter plot with a logarithmic y-axis and displays the specified title, X-axis label, and Y-axis label.",Ensure that the program saves the chart as a JPEG image file and displays it on the screen without errors.,Test if the program correctly defines data points for the x and y axes.,,
1149,polars,1,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'age' column is greater than 25, select specific columns ('name', 'city', 'age'), and aggregate data by grouping it by the 'city' column and calculating the sum of 'age'. Finally, display the resulting DataFrame.",code/polars/polars_1.py,Ensure that the program selects the specified columns and aggregates data by grouping it by 'city' while calculating the total age.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Verify that the program filters rows based on the 'age' column correctly.,,
1150,polars,2,"Create a Python program using the 'polars' API to load a sample Parquet file into a Polars DataFrame, filter rows where the 'gender' column is 'female', select specific columns ('name', 'age', 'city'), and sort the data by the 'age' column in descending order. Finally, display the resulting DataFrame.",code/polars/polars_2.py,Verify that the program filters rows based on the 'gender' column correctly.,Ensure that the program selects the specified columns and sorts the data by the 'age' column in descending order.,Test if the program successfully loads the sample Parquet file into a Polars DataFrame.,,
1151,polars,3,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'salary' column is greater than 50000, select specific columns ('name', 'age', 'salary'), and calculate the average salary. Finally, display the resulting average salary.",code/polars/polars_3.py,Ensure that the program selects the specified columns and calculates the average salary correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Verify that the program filters rows based on the 'salary' column correctly.,,
1152,polars,4,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'USA', select specific columns ('name', 'age', 'country'), and count the number of rows. Finally, display the resulting row count.",code/polars/polars_4.py,Ensure that the program selects the specified columns and counts the number of rows correctly.,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1153,polars,5,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is greater than 80, select specific columns ('name', 'score', 'grade'), and calculate the average score. Finally, display the resulting average score.",code/polars/polars_5.py,Verify that the program filters rows based on the 'score' column correctly.,Ensure that the program selects the specified columns and calculates the average score correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1154,polars,6,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'New York', select specific columns ('name', 'age', 'city'), and calculate the maximum age. Finally, display the resulting maximum age.",code/polars/polars_6.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the maximum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1155,polars,7,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Canada', select specific columns ('name', 'age', 'country'), and calculate the minimum age. Finally, display the resulting minimum age.",code/polars/polars_7.py,Ensure that the program selects the specified columns and calculates the minimum age correctly.,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1156,polars,8,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'gender' column is 'male', select specific columns ('name', 'age', 'gender'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_8.py,Verify that the program filters rows based on the 'gender' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1157,polars,9,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'London', select specific columns ('name', 'age', 'city'), and calculate the sum of ages. Finally, display the resulting sum of ages.",code/polars/polars_9.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the sum of ages correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1158,polars,10,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Germany', select specific columns ('name', 'age', 'country'), and calculate the maximum age. Finally, display the resulting maximum age.",code/polars/polars_10.py,Ensure that the program selects the specified columns and calculates the maximum age correctly.,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1159,polars,11,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is less than 60, select specific columns ('name', 'score', 'grade'), and calculate the minimum score. Finally, display the resulting minimum score.",code/polars/polars_11.py,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the minimum score correctly.,,
1160,polars,12,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Paris', select specific columns ('name', 'age', 'city'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_12.py,Verify that the program filters rows based on the 'city' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1161,polars,13,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'gender' column is 'female', select specific columns ('name', 'age', 'gender'), and calculate the sum of ages. Finally, display the resulting sum of ages.",code/polars/polars_13.py,Verify that the program filters rows based on the 'gender' column correctly.,Ensure that the program selects the specified columns and calculates the sum of ages correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1162,polars,14,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'USA', select specific columns ('name', 'age', 'country'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_14.py,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1163,polars,15,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is greater than 90, select specific columns ('name', 'score', 'grade'), and calculate the maximum score. Finally, display the resulting maximum score.",code/polars/polars_15.py,Ensure that the program selects the specified columns and calculates the maximum score correctly.,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1164,polars,16,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Tokyo', select specific columns ('name', 'age', 'city'), and calculate the minimum age. Finally, display the resulting minimum age.",code/polars/polars_16.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the minimum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1165,polars,17,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'gender' column is 'male', select specific columns ('name', 'age', 'gender'), and calculate the sum of ages. Finally, display the resulting sum of ages.",code/polars/polars_17.py,Verify that the program filters rows based on the 'gender' column correctly.,Ensure that the program selects the specified columns and calculates the sum of ages correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1166,polars,18,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Canada', select specific columns ('name', 'age', 'country'), and calculate the maximum age. Finally, display the resulting maximum age.",code/polars/polars_18.py,Ensure that the program selects the specified columns and calculates the maximum age correctly.,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1167,polars,19,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is less than 70, select specific columns ('name', 'score', 'grade'), and calculate the minimum score. Finally, display the resulting minimum score.",code/polars/polars_19.py,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the minimum score correctly.,,
1168,polars,20,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Berlin', select specific columns ('name', 'age', 'city'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_20.py,Verify that the program filters rows based on the 'city' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1169,polars,21,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'gender' column is 'female', select specific columns ('name', 'age', 'gender'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_21.py,Verify that the program filters rows based on the 'gender' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1170,polars,22,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'USA', select specific columns ('name', 'age', 'country'), and calculate the sum of ages. Finally, display the resulting sum of ages.",code/polars/polars_22.py,Ensure that the program selects the specified columns and calculates the sum of ages correctly.,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1171,polars,23,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is greater than 70, select specific columns ('name', 'score', 'grade'), and calculate the maximum score. Finally, display the resulting maximum score.",code/polars/polars_23.py,Ensure that the program selects the specified columns and calculates the maximum score correctly.,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1172,polars,24,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Madrid', select specific columns ('name', 'age', 'city'), and calculate the minimum age. Finally, display the resulting minimum age.",code/polars/polars_24.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the minimum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1174,polars,26,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Germany', select specific columns ('name', 'age', 'country'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_26.py,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1175,polars,27,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is less than 50, select specific columns ('name', 'score', 'grade'), and calculate the minimum score. Finally, display the resulting minimum score.",code/polars/polars_27.py,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the minimum score correctly.,,
1176,polars,28,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Sydney', select specific columns ('name', 'age', 'city'), and calculate the maximum age. Finally, display the resulting maximum age.",code/polars/polars_28.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the maximum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1177,polars,29,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'France', select specific columns ('name', 'age', 'country'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_29.py,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1178,polars,30,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is greater than 50, select specific columns ('name', 'score', 'grade'), and calculate the maximum score. Finally, display the resulting maximum score.",code/polars/polars_30.py,Ensure that the program selects the specified columns and calculates the maximum score correctly.,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1179,polars,31,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Toronto', select specific columns ('name', 'age', 'city'), and calculate the minimum age. Finally, display the resulting minimum age.",code/polars/polars_31.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the minimum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1182,polars,34,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is less than 80, select specific columns ('name', 'score', 'grade'), and calculate the minimum score. Finally, display the resulting minimum score.",code/polars/polars_34.py,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the minimum score correctly.,,
1183,polars,35,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Moscow', select specific columns ('name', 'age', 'city'), and calculate the maximum age. Finally, display the resulting maximum age.",code/polars/polars_35.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the maximum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1184,polars,36,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Italy', select specific columns ('name', 'age', 'country'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_36.py,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1185,polars,37,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is greater than 60, select specific columns ('name', 'score', 'grade'), and calculate the maximum score. Finally, display the resulting maximum score.",code/polars/polars_37.py,Ensure that the program selects the specified columns and calculates the maximum score correctly.,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1186,polars,38,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'city' column is 'Beijing', select specific columns ('name', 'age', 'city'), and calculate the minimum age. Finally, display the resulting minimum age.",code/polars/polars_38.py,Verify that the program filters rows based on the 'city' column correctly.,Ensure that the program selects the specified columns and calculates the minimum age correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,,
1188,polars,40,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'country' column is 'Spain', select specific columns ('name', 'age', 'country'), and calculate the average age. Finally, display the resulting average age.",code/polars/polars_40.py,Verify that the program filters rows based on the 'country' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the average age correctly.,,
1189,polars,41,"Create a Python program using the 'polars' API to load a sample CSV file into a Polars DataFrame, filter rows where the 'score' column is less than 40, select specific columns ('name', 'score', 'grade'), and calculate the minimum score. Finally, display the resulting minimum score.",code/polars/polars_41.py,Verify that the program filters rows based on the 'score' column correctly.,Test if the program successfully loads the sample CSV file into a Polars DataFrame.,Ensure that the program selects the specified columns and calculates the minimum score correctly.,,
1190,PyDrive2,1,Create a Python program that lists all files in a specified folder on Google Drive using the PyDrive2 API. The program should take the folder's ID as input and display a list of file names along with their corresponding IDs. Make sure the program is capable of handling cases where the folder ID provided does not exist or when there is an authentication issue.,code/PyDrive2/PyDrive2_1.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly.,Test if the program lists files in the specified folder along with their IDs.,,
1191,PyDrive2,2,Create a Python program that uploads a file to a specified folder on Google Drive using the PyDrive2 API. The program should take the file path and the folder ID as inputs and upload the file to the specified folder. Make sure the program is capable of handling cases where the file path or folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_2.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file path provided is invalid.,,
1192,PyDrive2,3,Create a Python program that downloads a file from Google Drive using the PyDrive2 API. The program should take the file ID and the destination folder path as inputs and download the file to the specified folder. Make sure the program is capable of handling cases where the file ID or destination folder path provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_3.py,Test if the program handles the case when the destination folder path provided is invalid.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1193,PyDrive2,4,Create a Python program that creates a new folder on Google Drive using the PyDrive2 API. The program should take the folder name and the parent folder ID as inputs and create a new folder with the specified name under the parent folder. Make sure the program is capable of handling cases where the parent folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_4.py,Test if the program creates a new folder with the specified name under the parent folder on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the parent folder with the provided ID does not exist on Google Drive.,,
1194,PyDrive2,5,Create a Python program that deletes a file from Google Drive using the PyDrive2 API. The program should take the file ID as input and delete the file from Google Drive. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_5.py,Test if the program deletes the file with the specified ID from Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1195,PyDrive2,6,Create a Python program that renames a file on Google Drive using the PyDrive2 API. The program should take the file ID and the new file name as inputs and rename the file on Google Drive. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_6.py,Test if the program renames the file with the specified ID to the new file name on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1196,PyDrive2,7,Create a Python program that moves a file to a different folder on Google Drive using the PyDrive2 API. The program should take the file ID and the destination folder ID as inputs and move the file to the specified destination folder. Make sure the program is capable of handling cases where the file ID or destination folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_7.py,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the destination folder with the provided ID does not exist on Google Drive.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1197,PyDrive2,8,Create a Python program that shares a file on Google Drive with a specific email address using the PyDrive2 API. The program should take the file ID and the email address as inputs and share the file with the specified email address. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_8.py,Test if the program shares the file with the specified ID with the provided email address on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1198,PyDrive2,9,"Create a Python program that retrieves the metadata of a file on Google Drive using the PyDrive2 API. The program should take the file ID as input and display the metadata information of the file, including its title, size, creation date, and last modified date. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_9.py,Test if the program retrieves and displays the metadata information of the file with the specified ID on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1199,PyDrive2,10,"Create a Python program that searches for files on Google Drive using the PyDrive2 API. The program should take a search query as input and display a list of files that match the query, along with their corresponding IDs. Make sure the program is capable of handling cases where no files match the search query or when there is an authentication issue.",code/PyDrive2/PyDrive2_10.py,Test if the program lists the files that match the search query along with their IDs on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when no files match the search query.,,
1200,PyDrive2,11,Create a Python program that updates the content of a file on Google Drive using the PyDrive2 API. The program should take the file ID and the new content as inputs and update the content of the file on Google Drive. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_11.py,Test if the program updates the content of the file with the specified ID on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1201,PyDrive2,12,Create a Python program that creates a new spreadsheet on Google Drive using the PyDrive2 API. The program should take the spreadsheet title as input and create a new spreadsheet with the specified title. Make sure the program is capable of handling cases when there is an authentication issue.,code/PyDrive2/PyDrive2_12.py,Test if the program handles the case when the spreadsheet with the provided title already exists on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program creates a new spreadsheet with the specified title on Google Drive.,,
1202,PyDrive2,13,"Create a Python program that retrieves the content of a spreadsheet on Google Drive using the PyDrive2 API. The program should take the spreadsheet ID as input and display the content of the spreadsheet, including all the sheets and their respective data. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_13.py,Test if the program retrieves and displays the content of the spreadsheet with the specified ID on Google Drive.,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1203,PyDrive2,14,"Create a Python program that updates the content of a specific sheet in a spreadsheet on Google Drive using the PyDrive2 API. The program should take the spreadsheet ID, sheet name, and new content as inputs and update the content of the specified sheet in the spreadsheet. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid, the sheet name does not exist, or when there is an authentication issue.",code/PyDrive2/PyDrive2_14.py,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles the case when the sheet with the provided name does not exist in the spreadsheet.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1204,PyDrive2,15,Create a Python program that creates a new sheet in a spreadsheet on Google Drive using the PyDrive2 API. The program should take the spreadsheet ID and the sheet name as inputs and create a new sheet with the specified name in the spreadsheet. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_15.py,Test if the program creates a new sheet with the specified name in the spreadsheet with the provided ID on Google Drive.,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1205,PyDrive2,16,"Create a Python program that deletes a sheet from a spreadsheet on Google Drive using the PyDrive2 API. The program should take the spreadsheet ID and the sheet name as inputs and delete the specified sheet from the spreadsheet. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid, the sheet name does not exist, or when there is an authentication issue.",code/PyDrive2/PyDrive2_16.py,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles the case when the sheet with the provided name does not exist in the spreadsheet.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1206,PyDrive2,17,Create a Python program that shares a spreadsheet on Google Drive with a specific email address using the PyDrive2 API. The program should take the spreadsheet ID and the email address as inputs and share the spreadsheet with the specified email address. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_17.py,Test if the program shares the spreadsheet with the specified ID with the provided email address on Google Drive.,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1207,PyDrive2,18,"Create a Python program that exports a spreadsheet on Google Drive to a specified file format using the PyDrive2 API. The program should take the spreadsheet ID and the desired file format (e.g., CSV, XLSX) as inputs and export the spreadsheet to the specified file format. Make sure the program is capable of handling cases where the spreadsheet ID provided is invalid, the file format is not supported, or when there is an authentication issue.",code/PyDrive2/PyDrive2_18.py,Test if the program handles the case when the file format provided is not supported.,Test if the program handles the case when the spreadsheet with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1208,PyDrive2,19,Create a Python program that creates a new document on Google Drive using the PyDrive2 API. The program should take the document title and content as inputs and create a new document with the specified title and content. Make sure the program is capable of handling cases when there is an authentication issue.,code/PyDrive2/PyDrive2_19.py,Test if the program creates a new document with the specified title and content on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the document with the provided title already exists on Google Drive.,,
1209,PyDrive2,20,Create a Python program that retrieves the content of a document on Google Drive using the PyDrive2 API. The program should take the document ID as input and display the content of the document. Make sure the program is capable of handling cases where the document ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_20.py,Test if the program retrieves and displays the content of the document with the specified ID on Google Drive.,Test if the program handles the case when the document with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1210,PyDrive2,21,Create a Python program that updates the content of a document on Google Drive using the PyDrive2 API. The program should take the document ID and the new content as inputs and update the content of the document on Google Drive. Make sure the program is capable of handling cases where the document ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_21.py,Test if the program updates the content of the document with the specified ID on Google Drive.,Test if the program handles the case when the document with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1211,PyDrive2,22,Create a Python program that deletes a document from Google Drive using the PyDrive2 API. The program should take the document ID as input and delete the document from Google Drive. Make sure the program is capable of handling cases where the document ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_22.py,Test if the program handles the case when the document with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program deletes the document with the specified ID from Google Drive.,,
1212,PyDrive2,23,Create a Python program that moves a document to a different folder on Google Drive using the PyDrive2 API. The program should take the document ID and the destination folder ID as inputs and move the document to the specified destination folder. Make sure the program is capable of handling cases where the document ID or destination folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_23.py,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the document with the provided ID does not exist on Google Drive.,Test if the program handles the case when the destination folder with the provided ID does not exist on Google Drive.,,
1213,PyDrive2,24,Create a Python program that shares a folder on Google Drive with a specific email address using the PyDrive2 API. The program should take the folder ID and the email address as inputs and share the folder with the specified email address. Make sure the program is capable of handling cases where the folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_24.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program shares the folder with the specified ID with the provided email address on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1214,PyDrive2,25,"Create a Python program that retrieves the metadata of a folder on Google Drive using the PyDrive2 API. The program should take the folder ID as input and display the metadata information of the folder, including its title, creation date, and last modified date. Make sure the program is capable of handling cases where the folder ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_25.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program retrieves and displays the metadata information of the folder with the specified ID on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1215,PyDrive2,26,Create a Python program that lists all folders in a specified parent folder on Google Drive using the PyDrive2 API. The program should take the parent folder ID as input and display a list of folder names along with their corresponding IDs. Make sure the program is capable of handling cases where the parent folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_26.py,Test if the program lists the folders in the specified parent folder along with their IDs on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the parent folder with the provided ID does not exist on Google Drive.,,
1217,PyDrive2,28,Create a Python program that deletes a folder from Google Drive using the PyDrive2 API. The program should take the folder ID as input and delete the folder from Google Drive. Make sure the program is capable of handling cases where the folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_28.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program deletes the folder with the specified ID from Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,
1218,PyDrive2,29,Create a Python program that renames a folder on Google Drive using the PyDrive2 API. The program should take the folder ID and the new folder name as inputs and rename the folder on Google Drive. Make sure the program is capable of handling cases where the folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_29.py,Test if the program handles the case when the folder with the provided ID does not exist on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program renames the folder with the specified ID to the new folder name on Google Drive.,,
1219,PyDrive2,30,"Create a Python program that retrieves the list of permissions for a file or folder on Google Drive using the PyDrive2 API. The program should take the file or folder ID as input and display the list of permissions, including the email addresses and roles of the users or groups that have access to the file or folder. Make sure the program is capable of handling cases where the file or folder ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_30.py,Test if the program retrieves and displays the list of permissions for the file or folder with the specified ID on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file or folder with the provided ID does not exist on Google Drive.,,
1220,PyDrive2,31,"Create a Python program that updates the permissions of a file or folder on Google Drive using the PyDrive2 API. The program should take the file or folder ID, the email address, and the new role as inputs and update the permissions of the file or folder accordingly. Make sure the program is capable of handling cases where the file or folder ID provided is invalid, the email address is not valid, or when there is an authentication issue.",code/PyDrive2/PyDrive2_31.py,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the email address provided is not valid.,Test if the program handles the case when the file or folder with the provided ID does not exist on Google Drive.,,
1221,PyDrive2,32,"Create a Python program that revokes the access of a user or group to a file or folder on Google Drive using the PyDrive2 API. The program should take the file or folder ID and the email address as inputs and revoke the access of the specified user or group. Make sure the program is capable of handling cases where the file or folder ID provided is invalid, the email address is not valid, or when there is an authentication issue.",code/PyDrive2/PyDrive2_32.py,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the email address provided is not valid.,Test if the program handles the case when the file or folder with the provided ID does not exist on Google Drive.,,
1222,PyDrive2,33,"Create a Python program that checks the storage usage of a user's Google Drive account using the PyDrive2 API. The program should display the total storage capacity, the amount of storage used, and the amount of storage available. Make sure the program is capable of handling cases when there is an authentication issue.",code/PyDrive2/PyDrive2_33.py,"Test if the program retrieves and displays the total storage capacity, used storage, and available storage of the user\'s Google Drive account.",Test if the program handles authentication errors correctly and displays appropriate error messages.,,,
1223,PyDrive2,34,Create a Python program that lists all files and folders in a specified parent folder on Google Drive using the PyDrive2 API. The program should take the parent folder ID as input and display a list of file and folder names along with their corresponding IDs. Make sure the program is capable of handling cases where the parent folder ID provided is invalid or when there is an authentication issue.,code/PyDrive2/PyDrive2_34.py,Test if the program lists the files and folders in the specified parent folder along with their IDs on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the parent folder with the provided ID does not exist on Google Drive.,,
1224,PyDrive2,35,"Create a Python program that checks the sharing settings of a file or folder on Google Drive using the PyDrive2 API. The program should take the file or folder ID as input and display the sharing settings, including the email addresses and roles of the users or groups that have access to the file or folder. Make sure the program is capable of handling cases where the file or folder ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_35.py,Test if the program retrieves and displays the sharing settings for the file or folder with the specified ID on Google Drive.,Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file or folder with the provided ID does not exist on Google Drive.,,
1225,PyDrive2,36,"Create a Python program that checks the activity of a user's Google Drive account using the PyDrive2 API. The program should display the recent activity, including the names of the files or folders that were accessed, the type of activity (e.g., view, edit), and the date and time of the activity. Make sure the program is capable of handling cases when there is an authentication issue.",code/PyDrive2/PyDrive2_36.py,"Test if the program retrieves and displays the recent activity of the user\'s Google Drive account, including the names of the files or folders that were accessed, the type of activity, and the date and time of the activity.",Test if the program handles authentication errors correctly and displays appropriate error messages.,,,
1226,PyDrive2,37,"Create a Python program that checks the revision history of a file on Google Drive using the PyDrive2 API. The program should take the file ID as input and display the revision history, including the revision number, the date and time of the revision, and the user who made the revision. Make sure the program is capable of handling cases where the file ID provided is invalid or when there is an authentication issue.",code/PyDrive2/PyDrive2_37.py,"Test if the program retrieves and displays the revision history of the file with the specified ID on Google Drive, including the revision number, date and time, and user who made the revision.",Test if the program handles authentication errors correctly and displays appropriate error messages.,Test if the program handles the case when the file with the provided ID does not exist on Google Drive.,,
1227,PyDrive2,38,"Create a Python program that checks the trash of a user's Google Drive account using the PyDrive2 API. The program should display the files and folders that are currently in the trash, including their names and IDs. Make sure the program is capable of handling cases when there is an authentication issue.",code/PyDrive2/PyDrive2_38.py,"Test if the program retrieves and displays the files and folders that are currently in the trash of the user\'s Google Drive account, including their names and IDs.",Test if the program handles authentication errors correctly and displays appropriate error messages.,,,
1228,PyDrive2,39,Create a Python program that empties the trash of a user's Google Drive account using the PyDrive2 API. The program should permanently delete all files and folders that are currently in the trash. Make sure the program is capable of handling cases when there is an authentication issue.,code/PyDrive2/PyDrive2_39.py,Test if the program permanently deletes all files and folders that are currently in the trash of the user\'s Google Drive account.,Test if the program handles authentication errors correctly and displays appropriate error messages.,,,
1229,PyDrive2,40,"Create a Python program that checks the available storage space of a user's Google Drive account using the PyDrive2 API. The program should display the total storage capacity, the amount of storage used, and the amount of storage available. Make sure the program is capable of handling cases when there is an authentication issue.",code/PyDrive2/PyDrive2_40.py,"Test if the program retrieves and displays the total storage capacity, used storage, and available storage space of the user\'s Google Drive account.",Test if the program handles authentication errors correctly and displays appropriate error messages.,,,
1231,pyglove,1,"Create a Python program using the 'pyglove' API to perform hyperparameter tuning for a neural network model on the MNIST dataset. The program should download and preprocess the MNIST dataset, define a neural network architecture with different hyperparameters (including units, activation functions, and convolutional layers), and tune these hyperparameters to maximize accuracy. The program should output the top 10 results, including trial ID, test accuracy, and hyperparameters.",code/pyglove/pyglove_1.py,Test that it correctly defines and trains neural network models with different hyperparameters.,Test that the program can successfully download and preprocess the MNIST dataset.,"Test that the program outputs the top 10 results with trial IDs, test accuracy, and hyperparameters.",,
1232,pyglove,2,"Create a Python program using the 'pyglove' API to perform word embedding using pre-trained GloVe word vectors. The program should download a pre-trained GloVe word vectors file, load it into memory, and provide functions for finding word embeddings and computing word similarity. The program should also include a unit test that checks the similarity between two words.",code/pyglove/pyglove_2.py,Test that the program can successfully download and load pre-trained GloVe word vectors.,Test that it computes the word similarity between two words.,Test that it correctly finds word embeddings for words in the model.,,
1233,pyglove,3,"Create a Python program using the 'pyglove' API to perform hyperparameter tuning for a computer vision task. The program should download a dataset of images, preprocess the image data, and define a convolutional neural network (CNN) architecture for image classification. The hyperparameters to be tuned should include the number of convolutional layers, the number of filters in each layer, and the learning rate. The program should output the best hyperparameters and the accuracy of the CNN model.",code/pyglove/pyglove_3.py,Test that the program can successfully download and preprocess the CIFAR-10 dataset.,Test that it correctly defines and trains CNN models with different hyperparameters.,Test that the program outputs the best hyperparameters and the accuracy of the CNN model.,,
1234,pyglove,4,"Create a Python program using the 'pyglove' API to perform topic modeling on a collection of text documents. The program should download and preprocess a collection of text documents, apply Latent Dirichlet Allocation (LDA) to the documents, and output the topics and their associated words. Additionally, provide a unit test that verifies the presence of topics and associated words in the output.",code/pyglove/pyglove_4.py,Test that the program can successfully download and preprocess a collection of text documents.,Test that the output contains the expected number of topics and associated words.,Test that it applies Latent Dirichlet Allocation (LDA) to the documents and extracts topics with associated words.,,
1235,pyglove,5,"Create a Python program using the 'pyglove' API to perform text classification on a collection of text documents. The program should download and preprocess a collection of text documents, define a text classification model with different hyperparameters (e.g., number of layers, units, and activation functions), and train the model to classify text into multiple categories. The program should output the classification accuracy.",code/pyglove/pyglove_5.py,Test that it correctly defines and trains text classification models with different hyperparameters.,Test that the program can successfully download and preprocess a collection of text documents.,Test that the program outputs the classification accuracy.,,
1236,pyglove,6,"Create a Python program using the 'pyglove' API to perform image classification on a collection of images using a pre-trained convolutional neural network (CNN). The program should download and preprocess a collection of images, load a pre-trained CNN model, fine-tune it on the image dataset, and output the classification accuracy. Additionally, provide a unit test that verifies the classification accuracy.",code/pyglove/pyglove_6.py,Test that it correctly defines and fine-tunes a pre-trained convolutional neural network (CNN) model.,Test that the program can successfully download and preprocess a collection of images.,Test that the program outputs the image classification accuracy.,,
1237,pyglove,7,"Create a Python program using the 'pyglove' API to perform data preprocessing and feature engineering on a dataset for a machine learning task. The program should download a dataset, preprocess it by handling missing values and encoding categorical features, apply feature engineering techniques (e.g., creating new features, scaling, etc.), and output the processed dataset. Additionally, provide a unit test that checks the presence of processed features in the output.",code/pyglove/pyglove_7.py,Test that the program can successfully download and preprocess a dataset.,"Test that it applies feature engineering techniques and scales features, and that the processed dataset is saved as a CSV file.",Test that it correctly handles missing values and encodes categorical features.,,
1238,pyglove,8,"Create a Python program using the 'pyglove' API to perform time series forecasting using an LSTM (Long Short-Term Memory) neural network. The program should download and preprocess a time series dataset, split it into training and testing sets, define an LSTM model with different hyperparameters (e.g., number of LSTM layers, units, and learning rate), train the model on the training set, and output the forecasted values on the testing set. Additionally, provide a unit test that verifies the quality of the forecasted values.",code/pyglove/pyglove_8.py,Test that the program forecasts values on the testing set and outputs the RMSE (Root Mean Squared Error).,Test that it correctly defines and trains LSTM models with different hyperparameters.,Test that the program can successfully download and preprocess a time series dataset.,,
1239,pyglove,9,"Create a Python program using the 'pyglove' API to perform image segmentation on a collection of images. The program should download and preprocess a collection of images, define a deep learning model for image segmentation with different hyperparameters (e.g., number of layers, filters, and learning rate), train the model on the training set, and apply the trained model for segmentation on a test image. Additionally, provide a unit test that verifies the quality of the segmentation result.",code/pyglove/pyglove_9.py,Test that the program successfully segments a test image and displays the result.,Test that the program can successfully download and preprocess a collection of images.,Test that it correctly defines and trains a deep learning model for image segmentation with different hyperparameters.,,
1240,pyglove,10,"Create a Python program using the 'pyglove' API to perform natural language processing (NLP) tasks. The program should include text preprocessing, tokenization, and application of a pre-trained NLP model. You can choose a specific NLP task, such as sentiment analysis or text generation, and implement it using 'pyglove.' Additionally, provide a unit test that verifies the performance of the NLP model on a sample text.",code/pyglove/pyglove_10.py,Test that the program can successfully preprocess and tokenize text data.,Test that it correctly defines and trains an NLP model with different hyperparameters.,"Test that the program performs a specific NLP task (e.g., sentiment analysis) on a sample text and outputs a sentiment score.",,
1241,pyglove,11,"Create a Python program using the 'pyglove' API to perform text generation using a pre-trained language model. The program should download a pre-trained language model, generate text based on a given prompt, and output the generated text. Additionally, provide a unit test that checks the quality of the generated text.",code/pyglove/pyglove_11.py,Test that the program outputs the generated text.,Test that it correctly generates text based on a given prompt with different hyperparameters.,Test that the program can successfully download a pre-trained language model.,,
1242,pyglove,12,"Create a Python program using the 'pyglove' API to perform audio processing and classification. The program should download and preprocess audio data, define an audio classification model with different hyperparameters (e.g., number of layers, units, and learning rate), train the model on the audio data, and output the classification accuracy. Additionally, provide a unit test that verifies the performance of the audio classification model.",code/pyglove/pyglove_12.py,Test that the program outputs the audio classification accuracy.,"Test that the program can successfully download and preprocess audio data, including conversion to spectrograms.",Test that it correctly defines and trains an audio classification model with different hyperparameters.,,
1243,pyglove,13,"Create a Python program using the 'pyglove' API to perform video analysis and object detection. The program should download and preprocess a video, define a deep learning model for object detection with different hyperparameters, analyze the video, and output the detected objects and their positions. Additionally, provide a unit test that verifies the quality of the object detection.",code/pyglove/pyglove_13.py,Test that the program successfully detects objects in the video and outputs their positions.,Test that it correctly defines an object detection model with different hyperparameters.,Test that the program can successfully download and preprocess a video.,,
1244,pyglove,14,"Create a Python program using the 'pyglove' API to perform reinforcement learning on a custom environment using the OpenAI Gym library. The program should define a reinforcement learning agent, train it on the custom environment, and output the agent's performance in terms of total rewards or episode success rate. Additionally, provide a unit test that verifies the performance of the reinforcement learning agent.",code/pyglove/pyglove_14.py,Test that the program can successfully create a custom Gym environment.,Test that the program outputs the average total reward obtained by the agent.,Test that it correctly defines and trains a reinforcement learning agent with different hyperparameters.,,
1245,pyglove,15,"Create a Python program using the 'pyglove' API to perform web scraping and data extraction from a website. The program should use a web scraping library (e.g., BeautifulSoup or Scrapy) to extract data from a specific website, parse the data, and output the extracted information. Additionally, provide a unit test that verifies the correctness of the data extraction.",code/pyglove/pyglove_15.py,Test that the program outputs the extracted information.,Test that the program can successfully scrape a website and extract data.,Test that it correctly extracts and parses the data from the website.,,
1246,pyglove,16,"Create a Python program using the 'pyglove' API to perform network analysis. The program should analyze a network (e.g., social network or computer network) by loading a dataset, applying network analysis techniques, and outputting relevant statistics or insights. Additionally, provide a unit test that verifies the accuracy of the network analysis results.",code/pyglove/pyglove_16.py,Test that the program can successfully load and analyze a network.,Test that the program outputs the accurate network analysis results.,Test that it correctly computes network statistics or insights.,,
1247,pyglove,17,"Create a Python program using the 'pyglove' API to perform data preprocessing and analysis on a dataset. The program should load a dataset, perform preprocessing steps (e.g., data cleaning, transformation, or feature engineering), and output descriptive statistics or visualizations of the dataset. Additionally, provide a unit test that verifies the correctness of the data preprocessing and analysis.",code/pyglove/pyglove_17.py,Test that the program outputs the correct summary statistics and visualizations of the dataset.,"Test that it correctly performs data preprocessing steps (e.g., data cleaning or transformation).",Test that the program can successfully load and preprocess a dataset.,,
1248,pyglove,18,"Create a Python program using the 'pyglove' API to perform geospatial data analysis. The program should load geospatial data (e.g., shapefiles or GeoJSON files), apply geospatial analysis techniques (e.g., spatial joins or buffer operations), and output relevant geospatial information or visualizations. Additionally, provide a unit test that verifies the accuracy of the geospatial analysis results.",code/pyglove/pyglove_18.py,"Test that it correctly applies geospatial analysis techniques (e.g., spatial joins or buffer operations).","Test that the program can successfully load and analyze geospatial data (e.g., shapefiles or GeoJSON files).",Test that the program outputs the accurate geospatial information or visualizations.,,
1249,pyglove,19,"Create a Python program using the 'pyglove' API to perform natural language processing (NLP) tasks. The program should load a text dataset, apply NLP techniques (e.g., text classification or sentiment analysis), and output the results or insights gained from the NLP analysis. Additionally, provide a unit test that verifies the accuracy of the NLP analysis results.",code/pyglove/pyglove_19.py,"Test that it correctly applies NLP techniques (e.g., text classification or sentiment analysis).",Test that the program outputs the accurate results or insights gained from the NLP analysis.,Test that the program can successfully load a text dataset.,,
1250,pyglove,20,"Create a Python program using the 'pyglove' API to perform time series analysis. The program should load time series data, apply time series analysis techniques (e.g., decomposition or forecasting), and output the results or predictions. Additionally, provide a unit test that verifies the accuracy of the time series analysis results.",code/pyglove/pyglove_20.py,Test that the program outputs the accurate time series analysis results or predictions.,"Test that it correctly applies time series analysis techniques (e.g., decomposition or forecasting).",Test that the program can successfully load time series data.,,
1251,pyglove,21,"Create a Python program using the 'pyglove' API to perform image processing and computer vision tasks. The program should load an image, apply image processing techniques (e.g., filtering or edge detection), and output the processed image or relevant information. Additionally, provide a unit test that verifies the quality of the image processing results.",code/pyglove/pyglove_21.py,"Test that the program outputs the quality of the image processing results (e.g., visual comparison of the processed image with the original).",Test that the program can successfully load an image.,"Test that it correctly applies image processing techniques (e.g., filtering or edge detection).",,
1252,pyglove,22,"Create a Python program using the 'pyglove' API to perform data visualization. The program should load a dataset, create visualizations (e.g., bar charts or scatter plots), and output the visual representations of the data. Additionally, provide a unit test that verifies the correctness of the data visualizations.",code/pyglove/pyglove_22.py,Test that the program outputs the visual representations of the data.,"Test that it correctly creates data visualizations (e.g., bar charts or scatter plots).",Test that the program can successfully load a dataset.,,
1253,pyglove,23,"Create a Python program using the 'pyglove' API to perform numerical data analysis. The program should load a numerical dataset, apply statistical analysis techniques (e.g., hypothesis testing or regression analysis), and output the analysis results or insights. Additionally, provide a unit test that verifies the accuracy of the numerical data analysis.",code/pyglove/pyglove_23.py,Test that the program can successfully load a numerical dataset.,"Test that it correctly applies statistical analysis techniques (e.g., hypothesis testing or regression analysis).",Test that the program outputs the accurate numerical data analysis results or insights.,,
1254,pyglove,24,"Create a Python program using the 'pyglove' API to perform machine learning model evaluation. The program should load a machine learning model, a test dataset, and evaluate the model's performance (e.g., accuracy or F1 score) on the test dataset. Additionally, provide a unit test that verifies the accuracy of the model evaluation.",code/pyglove/pyglove_24.py,Test that the program outputs the accurate model evaluation results.,"Test that it correctly evaluates the model's performance (e.g., accuracy or F1 score) on the test dataset.",Test that the program can successfully load a machine learning model and a test dataset.,,
1255,pyglove,25,"Create a Python program using the 'pyglove' API to perform audio signal processing. The program should load an audio file, apply signal processing techniques (e.g., filtering or spectral analysis), and output the processed audio or relevant information. Additionally, provide a unit test that verifies the quality of the audio signal processing results.",code/pyglove/pyglove_25.py,"Test that it correctly applies signal processing techniques (e.g., filtering or spectral analysis) to the audio.","Test that the program outputs the quality of the audio signal processing results (e.g., visual comparison of the spectral analysis).",Test that the program can successfully load an audio file.,,
1256,pyglove,26,"Create a Python program using the 'pyglove' API to perform deep learning on a custom dataset. The program should define a deep learning model, train it on a custom dataset, and output the model's performance in terms of loss and accuracy. Additionally, provide a unit test that verifies the performance of the deep learning model.",code/pyglove/pyglove_26.py,Test that it correctly defines and trains a deep learning model on the custom dataset.,Test that the program can successfully create a custom dataset.,"Test that the program outputs the performance of the deep learning model (e.g., loss and accuracy).",,
1257,pyglove,27,"Create a Python program using the 'pyglove' API to perform natural language generation. The program should generate text or content based on a given prompt or topic. Additionally, provide a unit test that verifies the quality and relevance of the generated content.",code/pyglove/pyglove_27.py,Test that the program outputs the generated text.,Test that the generated content is of high quality and relevance to the prompt.,Test that the program can successfully generate text based on a given prompt or topic.,,
1258,pyglove,28,"Create a Python program using the 'pyglove' API to perform time series forecasting. The program should load time series data, apply time series forecasting techniques (e.g., ARIMA or Prophet), and output the forecasted values. Additionally, provide a unit test that verifies the accuracy of the time series forecasting results.",code/pyglove/pyglove_28.py,"Test that it correctly applies time series forecasting techniques (e.g., ARIMA or Prophet).",Test that the program can successfully load time series data.,Test that the program outputs the accurate time series forecasting results.,,
1259,pyglove,29,"Create a Python program using the 'pyglove' API to perform reinforcement learning. The program should define a custom environment, create a reinforcement learning agent, train the agent, and output the results of the training. Additionally, provide a unit test that verifies the performance of the reinforcement learning agent.",code/pyglove/pyglove_29.py,Test that the program can successfully create a custom Gym environment.,Test that the program outputs the average total reward obtained by the agent.,Test that it correctly defines and trains a reinforcement learning agent with different hyperparameters.,,
1260,pyglove,30,"Create a Python program using the 'pyglove' API to perform database operations. The program should connect to a database, execute SQL queries, and output the results or modified data. Additionally, provide a unit test that verifies the correctness of the database operations.",code/pyglove/pyglove_30.py,Test that the program can successfully connect to a database.,Test that it correctly executes SQL queries on the database.,Test that the program outputs the results of the SQL queries or modified data.,,
1261,pyglove,31,"Create a Python program using the 'pyglove' API to perform web scraping. The program should access a website, scrape data (e.g., text or images) from the website, and output the scraped data. Additionally, provide a unit test that verifies the accuracy of the web scraping results.",code/pyglove/pyglove_31.py,Test that the program outputs the scraped data.,Test that the program can successfully access a website.,"Test that it correctly scrapes data (e.g., text or images) from the website.",,
1262,pyglove,32,"Create a Python program using the 'pyglove' API to perform natural language translation. The program should take a text in one language and translate it into another language. Additionally, provide a unit test that verifies the accuracy of the translation.",code/pyglove/pyglove_32.py,Test that it correctly translates the text with high accuracy.,Test that the program outputs the translated text.,Test that the program can successfully translate text from one language to another.,,
1263,pyglove,33,"Create a Python program using the 'pyglove' API to perform sentiment analysis on a text dataset. The program should download and preprocess the dataset, define a neural network architecture with different hyperparameters (including number of layers, number of units, and activation functions), and train the model to classify text into positive or negative sentiment. The program should output the accuracy of the trained model.",code/pyglove/pyglove_33.py,Test that it correctly defines and trains neural network models with different hyperparameters.,Test that the program outputs the accuracy of the trained model.,Test that the program can successfully download and preprocess the text dataset.,,
1264,pyglove,34,"Create a Python program using the 'pyglove' API to perform data analysis and visualization on a given dataset. The program should load the dataset, analyze the data (e.g., statistics or correlations), and create visualizations (e.g., histograms or scatter plots). Additionally, provide a unit test that verifies the accuracy and quality of the analysis and visualizations.",code/pyglove/pyglove_34.py,"Test that it correctly performs data analysis (e.g., statistics or correlations) on the dataset.","Test that the program generates accurate and informative data visualizations (e.g., histograms or scatter plots).",Test that the program can successfully load a dataset.,,
1265,pyglove,35,"Create a Python program using the 'pyglove' API to perform natural language processing. The program should process text data, perform tasks such as text tokenization, sentiment analysis, and text summarization, and output the results. Additionally, provide a unit test that verifies the correctness and quality of the natural language processing.",code/pyglove/pyglove_35.py,Test that the program can successfully process text data.,"Test that it correctly performs text tokenization, sentiment analysis, and text summarization.",Test that the program outputs accurate and relevant results for each processing task.,,
1266,pyglove,36,"Create a Python program using the 'pyglove' API to perform image processing. The program should load an image, apply image processing techniques (e.g., resizing or filtering), and output the processed image or relevant information. Additionally, provide a unit test that verifies the quality of the image processing results.",code/pyglove/pyglove_36.py,"Test that the program outputs the quality of the image processing results (e.g., visual comparison of the processed image).","Test that it correctly applies image processing techniques (e.g., resizing or filtering) to the image.",Test that the program can successfully load an image.,,
1268,pyglove,38,"Create a Python program using the 'pyglove' API to perform numerical data analysis. The program should load a numerical dataset, perform statistical analysis (e.g., hypothesis testing or regression analysis), and output the analysis results or insights. Additionally, provide a unit test that verifies the accuracy of the numerical data analysis.",code/pyglove/pyglove_38.py,Test that the program can successfully load a numerical dataset.,Test that the program outputs accurate and informative analysis results or insights.,"Test that it correctly performs statistical analysis (e.g., hypothesis testing or regression analysis) on the dataset.",,
1271,pyglove,41,"Create a Python program using the 'pyglove' API to perform word analogy tasks. The program should load pre-trained word embeddings from a file, allow the user to input word analogies (e.g., king - man + woman = queen), and use the loaded word embeddings to find the most similar word that completes the analogy. The program should provide a function to perform the analogy task and return the result.",code/pyglove/pyglove_41.py,Test that the program can load pre-trained word embeddings from a file.,"Test the word analogy function with missing words, which should return None.",Test that it correctly performs word analogy tasks and returns the expected results.,,
1272,Pygments,1,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code snippet and save the highlighted code as an HTML file.,code/pygments/Pygments_1.py,Check that the HTML file is saved correctly with the highlighted code.,Verify that the generated HTML file contains the highlighted code.,Test if the program successfully applies syntax highlighting to the code snippet using the Python lexer.,,
1273,Pygments,2,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and display the highlighted code in the console.,code/pygments/Pygments_2.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program displays the highlighted code in the console.,,
1274,Pygments,3,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PDF file.,code/pygments/Pygments_3.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PDF file.,Test if the program successfully reads the code file.,,
1275,Pygments,4,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PNG image.,code/pygments/Pygments_4.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PNG image file.,Test if the program successfully reads the code file.,,
1276,Pygments,5,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a RTF file.,code/pygments/Pygments_5.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a RTF file.,Test if the program successfully reads the code file.,,
1277,Pygments,6,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a LaTeX file.,code/pygments/Pygments_6.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a LaTeX file.,Test if the program successfully reads the code file.,,
1278,Pygments,7,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a DOCX file.,code/pygments/Pygments_7.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a DOCX file.,,
1279,Pygments,8,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a TXT file.,code/pygments/Pygments_8.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a TXT file.,,
1280,Pygments,9,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a CSV file.,code/pygments/Pygments_9.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a CSV file.,Test if the program successfully reads the code file.,,
1281,Pygments,10,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a JSON file.,code/pygments/Pygments_10.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a JSON file.,Test if the program successfully reads the code file.,,
1282,Pygments,11,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Markdown file.,code/pygments/Pygments_11.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a Markdown file.,Test if the program successfully reads the code file.,,
1283,Pygments,12,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a YAML file.,code/pygments/Pygments_12.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a YAML file.,,
1284,Pygments,13,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an XML file.,code/pygments/Pygments_13.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as an XML file.,Test if the program successfully reads the code file.,,
1285,Pygments,14,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an Excel file (XLSX).,code/pygments/Pygments_14.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as an Excel file (XLSX).,Test if the program successfully reads the code file.,,
1286,Pygments,15,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Word document (DOC).,code/pygments/Pygments_15.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a Word document (DOC).,Test if the program successfully reads the code file.,,
1287,Pygments,16,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PowerPoint presentation (PPTX).,code/pygments/Pygments_16.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a PowerPoint presentation (PPTX).,,
1288,Pygments,17,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a plain text file (TXT) with line numbers.,code/pygments/Pygments_17.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a plain text file (TXT) with line numbers.,Test if the program successfully reads the code file.,,
1289,Pygments,18,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a plain text file (TXT) with a custom color scheme.,code/pygments/Pygments_18.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a plain text file (TXT) with the custom color scheme.,Test if the program successfully reads the code file.,,
1290,Pygments,19,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a plain text file (TXT) with a dark background color scheme.,code/pygments/Pygments_19.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a plain text file (TXT) with the dark background color scheme.,Test if the program successfully reads the code file.,,
1291,Pygments,20,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an HTML file with a custom CSS style.,code/pygments/Pygments_20.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as an HTML file with the custom CSS style.,Test if the program successfully reads the code file.,,
1292,Pygments,21,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an HTML file with line numbers and a custom CSS style.,code/pygments/Pygments_21.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as an HTML file with line numbers and the custom CSS style.,,
1293,Pygments,22,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PDF file with a custom color scheme and line numbers.,code/pygments/Pygments_22.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PDF file with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1294,Pygments,23,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PNG image with a custom color scheme and line numbers.,code/pygments/Pygments_23.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PNG image with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1295,Pygments,24,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Word document (DOC) with a custom color scheme and line numbers.,code/pygments/Pygments_24.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a Word document (DOC) with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1296,Pygments,25,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an Excel file (XLSX) with a custom color scheme and line numbers.,code/pygments/Pygments_25.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as an Excel file (XLSX) with the custom color scheme and line numbers.,,
1297,Pygments,26,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a CSV file with a custom color scheme and line numbers.,code/pygments/Pygments_26.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a CSV file with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1298,Pygments,27,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a JSON file with a custom color scheme and line numbers.,code/pygments/Pygments_27.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a JSON file with the custom color scheme and line numbers.,,
1299,Pygments,28,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Markdown file with a custom color scheme and line numbers.,code/pygments/Pygments_28.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a Markdown file with the custom color scheme and line numbers.,,
1300,Pygments,29,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a YAML file with a custom color scheme and line numbers.,code/pygments/Pygments_29.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a YAML file with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1301,Pygments,30,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an XML file with a custom color scheme and line numbers.,code/pygments/Pygments_30.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as an XML file with the custom color scheme and line numbers.,Test if the program successfully reads the code file.,,
1302,Pygments,31,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a plain text file (TXT) with a dark background color scheme and line numbers.,code/pygments/Pygments_31.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a plain text file (TXT) with the dark background color scheme and line numbers.,Test if the program successfully reads the code file.,,
1303,Pygments,32,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an HTML file with line numbers and a dark background color scheme.,code/pygments/Pygments_32.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as an HTML file with line numbers and the dark background color scheme.,Test if the program successfully reads the code file.,,
1304,Pygments,33,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PDF file with line numbers and a dark background color scheme.,code/pygments/Pygments_33.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PDF file with line numbers and the dark background color scheme.,Test if the program successfully reads the code file.,,
1305,Pygments,34,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a PNG image with line numbers and a dark background color scheme.,code/pygments/Pygments_34.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a PNG image file with line numbers and the dark background color scheme.,Test if the program successfully reads the code file.,,
1306,Pygments,35,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Word document (DOC) with line numbers and a dark background color scheme.,code/pygments/Pygments_35.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a Word document (DOC) with line numbers and the dark background color scheme.,Test if the program successfully reads the code file.,,
1307,Pygments,36,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an Excel file (XLSX) with line numbers and a dark background color scheme.,code/pygments/Pygments_36.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as an Excel file (XLSX) with line numbers and the dark background color scheme.,,
1308,Pygments,37,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a CSV file with line numbers and a dark background color scheme.,code/pygments/Pygments_37.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a CSV file with line numbers and the dark background color scheme.,,
1309,Pygments,38,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a JSON file with line numbers and a dark background color scheme.,code/pygments/Pygments_38.py,Verify that the program correctly determines the lexer based on the file extension.,Check that the program saves the highlighted code as a JSON file with line numbers and the dark background color scheme.,Test if the program successfully reads the code file.,,
1310,Pygments,39,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a Markdown file with line numbers and a dark background color scheme.,code/pygments/Pygments_39.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a Markdown file with line numbers and the dark background color scheme.,,
1311,Pygments,40,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as a YAML file with line numbers and a dark background color scheme.,code/pygments/Pygments_40.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as a YAML file with line numbers and the dark background color scheme.,,
1312,Pygments,41,Create a Python program using the 'Pygments' API to apply syntax highlighting to a code file and save the highlighted code as an XML file with line numbers and a dark background color scheme.,code/pygments/Pygments_41.py,Verify that the program correctly determines the lexer based on the file extension.,Test if the program successfully reads the code file.,Check that the program saves the highlighted code as an XML file with line numbers and the dark background color scheme.,,
1313,pymc,1,"Create a Python program using the 'pymc' API to perform Bayesian linear regression on a dataset. The program should define prior distributions for the model's parameters, including the intercept and slope, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_1.py,Test the program with different datasets to ensure it correctly performs Bayesian linear regression.,Assess the program's performance with larger datasets to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1314,pymc,2,"Create a Python program using the 'pymc' API to perform Bayesian inference on a simple coin flipping experiment. The program should define a prior distribution for the probability of heads, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using Metropolis-Hastings sampling.",code/pymc/pymc_2.py,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different coin flip sequences to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger coin flip sequences to ensure it remains efficient and accurate.,,
1315,pymc,3,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed counts. The program should define a prior distribution for the rate parameter, and use a likelihood function to model the observed counts. After setting up the model, perform Bayesian inference to draw posterior samples using Hamiltonian Monte Carlo (HMC) sampling.",code/pymc/pymc_3.py,Assess the program's performance with larger datasets of observed counts to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed counts to ensure it correctly performs Bayesian inference.,,
1316,pymc,4,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed binary outcomes. The program should define a prior distribution for the probability of success, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using Gibbs sampling.",code/pymc/pymc_4.py,Test the program with different datasets of observed binary outcomes to ensure it correctly performs Bayesian inference.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Assess the program's performance with larger datasets of observed binary outcomes to ensure it remains efficient and accurate.,,
1317,pymc,5,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed categorical outcomes. The program should define a prior distribution for the probabilities of each category, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using Metropolis-Hastings sampling.",code/pymc/pymc_5.py,Assess the program's performance with larger datasets of observed categorical outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed categorical outcomes to ensure it correctly performs Bayesian inference.,,
1318,pymc,6,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed continuous outcomes. The program should define a prior distribution for the mean and standard deviation, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using Hamiltonian Monte Carlo (HMC) sampling.",code/pymc/pymc_6.py,Test the program with different datasets of observed continuous outcomes to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed continuous outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1319,pymc,7,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed ordinal outcomes. The program should define a prior distribution for the probabilities of each category, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using Gibbs sampling.",code/pymc/pymc_7.py,Test the program with different datasets of observed ordinal outcomes to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed ordinal outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1320,pymc,8,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed time series data. The program should define a prior distribution for the parameters of a time series model, such as an autoregressive (AR) model or a moving average (MA) model, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using Hamiltonian Monte Carlo (HMC) sampling.",code/pymc/pymc_8.py,Test the program with different datasets of observed time series data to ensure it correctly performs Bayesian inference.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Assess the program's performance with larger datasets of observed time series data to ensure it remains efficient and accurate.,,
1321,pymc,9,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed multivariate data. The program should define a prior distribution for the parameters of a multivariate model, such as a multivariate normal distribution, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using Gibbs sampling.",code/pymc/pymc_9.py,Assess the program's performance with larger datasets of observed multivariate data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed multivariate data to ensure it correctly performs Bayesian inference.,,
1322,pymc,10,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed hierarchical data. The program should define a prior distribution for the parameters of a hierarchical model, such as a hierarchical normal distribution, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using Hamiltonian Monte Carlo (HMC) sampling.",code/pymc/pymc_10.py,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed hierarchical data to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed hierarchical data to ensure it remains efficient and accurate.,,
1323,pymc,11,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed missing data. The program should define a prior distribution for the parameters of a model, and use a likelihood function to model the observed data, taking into account the missing values. After setting up the model, perform Bayesian inference to draw posterior samples using Metropolis-Hastings sampling.",code/pymc/pymc_11.py,Test the program with different datasets of observed missing data to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed missing data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1324,pymc,12,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed count data. The program should define a prior distribution for the rate parameter, and use a likelihood function to model the observed counts. After setting up the model, perform Bayesian inference to draw posterior samples using Hamiltonian Monte Carlo (HMC) sampling.",code/pymc/pymc_12.py,Assess the program's performance with larger datasets of observed count data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed count data to ensure it correctly performs Bayesian inference.,,
1325,pymc,13,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed binary outcomes. The program should define a prior distribution for the probability of success, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_13.py,Test the program with different datasets of observed binary outcomes to ensure it correctly performs Bayesian inference.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Assess the program's performance with larger datasets of observed binary outcomes to ensure it remains efficient and accurate.,,
1326,pymc,14,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed continuous outcomes. The program should define a prior distribution for the mean and standard deviation, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_14.py,Test the program with different datasets of observed continuous outcomes to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed continuous outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1327,pymc,15,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed categorical outcomes. The program should define a prior distribution for the probabilities of each category, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_15.py,Assess the program's performance with larger datasets of observed categorical outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed categorical outcomes to ensure it correctly performs Bayesian inference.,,
1328,pymc,16,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed ordinal outcomes. The program should define a prior distribution for the probabilities of each category, and use a likelihood function to model the observed outcomes. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_16.py,Test the program with different datasets of observed ordinal outcomes to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed ordinal outcomes to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1329,pymc,17,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed time series data. The program should define a prior distribution for the parameters of a time series model, such as an autoregressive (AR) model or a moving average (MA) model, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_17.py,Test the program with different datasets of observed time series data to ensure it correctly performs Bayesian inference.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Assess the program's performance with larger datasets of observed time series data to ensure it remains efficient and accurate.,,
1330,pymc,18,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed multivariate data. The program should define a prior distribution for the parameters of a multivariate model, such as a multivariate normal distribution, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_18.py,Assess the program's performance with larger datasets of observed multivariate data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed multivariate data to ensure it correctly performs Bayesian inference.,,
1331,pymc,19,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed hierarchical data. The program should define a prior distribution for the parameters of a hierarchical model, such as a hierarchical normal distribution, and use a likelihood function to model the observed data. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_19.py,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed hierarchical data to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed hierarchical data to ensure it remains efficient and accurate.,,
1332,pymc,20,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed missing data. The program should define a prior distribution for the parameters of a model, and use a likelihood function to model the observed data, taking into account the missing values. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_20.py,Test the program with different datasets of observed missing data to ensure it correctly performs Bayesian inference.,Assess the program's performance with larger datasets of observed missing data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,,
1333,pymc,21,"Create a Python program using the 'pymc' API to perform Bayesian inference on a dataset of observed count data. The program should define a prior distribution for the rate parameter, and use a likelihood function to model the observed counts. After setting up the model, perform Bayesian inference to draw posterior samples using NUTS sampling.",code/pymc/pymc_21.py,Assess the program's performance with larger datasets of observed count data to ensure it remains efficient and accurate.,Validate the program's results by comparing the posterior samples and summary statistics to expected values.,Test the program with different datasets of observed count data to ensure it correctly performs Bayesian inference.,,
1354,pypdf,1,Create a Python program using the 'pypdf' API to extract text content from a PDF file and save it to a text file.,code/pypdf/pypdf_1.py,Test if the program successfully extracts text from the specified PDF file.,Verify that the extracted text matches the content of the PDF file.,Check that the extracted text is correctly saved to the output text file.,,
1355,pypdf,2,Create a Python program using the 'pypdf' API to extract metadata information from a PDF file and display it.,code/pypdf/pypdf_2.py,Check for cases where metadata fields may be empty or missing in the PDF.,Verify that the displayed metadata matches the actual metadata of the PDF file.,Test if the program successfully extracts metadata information from the specified PDF file.,,
1356,pypdf,3,Create a Python program using the 'pypdf' API to extract images from a PDF file and save them as separate image files.,code/pypdf/pypdf_3.py,Test if the program successfully extracts images from the specified PDF file.,Check for cases where the PDF may not contain any images.,Verify that the saved images match the images in the PDF file.,,
1357,pypdf,4,Create a Python program using the 'pypdf' API to merge multiple PDF files into a single PDF file.,code/pypdf/pypdf_4.py,Verify that the merged PDF contains all the pages from the input files in the correct order.,Check for cases where the input PDF files may not exist.,Test if the program successfully merges the specified PDF files.,,
1358,pypdf,5,Create a Python program using the 'pypdf' API to add watermarks to each page of a PDF file and save the modified PDF.,code/pypdf/pypdf_5.py,Test if the program successfully adds watermarks to each page of the specified PDF file.,Check for cases where either the input PDF or watermark PDF may not exist.,Verify that the watermarked PDF contains the watermark on each page.,,
1359,pypdf,6,"Create a Python program using the 'pypdf' API to split a PDF file into multiple smaller PDF files, each containing a specified number of pages.",code/pypdf/pypdf_6.py,Check for cases where the input PDF may have fewer pages than the specified number for splitting.,Verify that the split PDFs have the correct number of pages as specified.,Test if the program successfully splits the specified PDF file into smaller PDFs.,,
1360,pypdf,7,"Create a Python program using the 'pypdf' API to rotate all pages in a PDF file by a specified angle (e.g., 90 degrees) and save the modified PDF.",code/pypdf/pypdf_7.py,Check for cases where the input PDF may not exist.,Verify that the pages in the rotated PDF have the correct rotation angle.,Test if the program successfully rotates all pages in the specified PDF file.,,
1361,pypdf,8,Create a Python program using the 'pypdf' API to extract text content from a specific range of pages in a PDF file and save it to a text file.,code/pypdf/pypdf_8.py,Verify that the extracted text matches the content of the specified pages in the PDF file.,Check for cases where the specified page range is out of bounds or invalid.,Test if the program successfully extracts text from the specified range of pages in the PDF file.,,
1362,pypdf,9,Create a Python program using the 'pypdf' API to password-protect a PDF file with a specified password.,code/pypdf/pypdf_9.py,Verify that the protected PDF can only be opened with the specified password.,Check for cases where the input PDF file may not exist.,Test if the program successfully password-protects the specified PDF file.,,
1363,pypdf,10,Create a Python program using the 'pypdf' API to remove all bookmarks from a PDF file and save the modified PDF.,code/pypdf/pypdf_10.py,Check for cases where the input PDF file may not have bookmarks.,Test if the program successfully removes all bookmarks from the specified PDF file.,Verify that the modified PDF no longer contains bookmarks.,,
1364,pypdf,11,Create a Python program using the 'pypdf' API to extract the table of contents (TOC) from a PDF file and display it.,code/pypdf/pypdf_11.py,Check for cases where the input PDF may not have a table of contents.,Test if the program successfully extracts the table of contents (TOC) from the specified PDF file.,Verify that the extracted TOC matches the structure in the PDF.,,
1365,pypdf,12,Create a Python program using the 'pypdf' API to search for specific text within a PDF file and highlight or mark the search results.,code/pypdf/pypdf_12.py,Check for cases where the input PDF file may not exist or the search text is not found.,Test if the program successfully searches for and highlights the specified text in the PDF file.,Verify that the search results are correctly highlighted in the modified PDF.,,
1366,pypdf,13,Create a Python program using the 'pypdf' API to extract and display the fonts used in a PDF file.,code/pypdf/pypdf_13.py,Test if the program successfully extracts and displays the fonts used in the specified PDF file.,Verify that the displayed fonts are unique and represent the fonts used in the PDF.,Check for cases where the input PDF file may not contain fonts.,,
1367,pypdf,14,Create a Python program using the 'pypdf' API to extract all hyperlinks from a PDF file and display them.,code/pypdf/pypdf_14.py,Test if the program successfully extracts and displays hyperlinks from the specified PDF file.,Check for cases where the input PDF file may not contain hyperlinks.,Verify that the displayed hyperlinks are valid and correspond to the links in the PDF.,,
1368,pypdf,15,Create a Python program using the 'pypdf' API to add a page number footer to each page of a PDF file and save the modified PDF.,code/pypdf/pypdf_15.py,Verify that the page numbers are correctly positioned and labeled in the modified PDF.,Check for cases where the input PDF file may not exist.,Test if the program successfully adds page numbers to each page of the specified PDF file.,,
1369,pypdf,16,Create a Python program using the 'pypdf' API to extract and display the list of all embedded files (attachments) in a PDF file.,code/pypdf/pypdf_16.py,Verify that the displayed file names represent the embedded files in the PDF.,Test if the program successfully extracts and displays the list of embedded files in the specified PDF file.,Check for cases where the input PDF file may not have embedded files.,,
1370,pypdf,17,"Create a Python program using the 'pypdf' API to extract and display the form fields from a PDF file, including text fields, checkboxes, and radio buttons.",code/pypdf/pypdf_17.py,"Test if the program successfully extracts and displays text fields, checkboxes, and radio buttons from the specified PDF file.",Check for cases where the input PDF file may not have form fields.,Verify that the displayed form fields and values are accurate and represent the forms in the PDF.,,
1371,pypdf,18,"Create a Python program using the 'pypdf' API to extract and display the document properties (metadata) of a PDF file, including title, author, and subject.",code/pypdf/pypdf_18.py,Check for cases where the input PDF file may not have document properties.,Verify that the displayed document properties match the metadata in the PDF.,Test if the program successfully extracts and displays document properties (metadata) from the specified PDF file.,,
1372,pypdf,19,"Create a Python program using the 'pypdf' API to extract and display the comments and annotations (e.g., sticky notes) from a PDF file.",code/pypdf/pypdf_19.py,Test if the program successfully extracts and displays comments and annotations from the specified PDF file.,Verify that the displayed comments and annotations accurately represent the content of the PDF.,Check for cases where the input PDF file may not have comments or annotations.,,
1373,pypdf,20,Create a Python program using the 'pypdf' API to extract and display the page dimensions and orientation (portrait or landscape) of each page in a PDF file.,code/pypdf/pypdf_20.py,Verify that the displayed page information accurately represents the page dimensions and orientation in the PDF.,Check for cases where the input PDF file may not have well-defined page dimensions or orientation.,Test if the program successfully extracts and displays the page dimensions and orientation (portrait or landscape) of each page in the specified PDF file.,,
1374,pypdf,21,"Create a Python program using the 'pypdf' API to extract and display the outline (bookmarks) of a PDF file, including hierarchical levels.",code/pypdf/pypdf_21.py,"Test if the program successfully extracts and displays the outline (bookmarks) of the specified PDF file, including hierarchical levels.",Check for cases where the input PDF file may not have an outline (bookmarks).,Verify that the displayed outline accurately represents the structure of bookmarks in the PDF.,,
1375,pypdf,22,"Create a Python program using the 'pypdf' API to extract and display the page labels used in a PDF file (e.g., roman numerals, custom labels).",code/pypdf/pypdf_22.py,Test if the program successfully extracts and displays the page labels used in the specified PDF file.,Check for cases where the input PDF file may not have custom page labels.,Verify that the displayed page labels are accurate and represent the page numbering in the PDF.,,
1376,pypdf,23,Create a Python program using the 'pypdf' API to extract and display the list of all named destinations (links) in a PDF file.,code/pypdf/pypdf_23.py,Test if the program successfully extracts and displays the list of named destinations (links) in the specified PDF file.,Verify that the displayed named destinations accurately represent the links in the PDF.,Check for cases where the input PDF file may not have named destinations.,,
1377,pypdf,24,Create a Python program using the 'pypdf' API to extract and display the document structure (tags and labels) of a tagged PDF file.,code/pypdf/pypdf_24.py,Test if the program successfully extracts and displays the document structure (tags and labels) of the specified tagged PDF file.,Check for cases where the input PDF file may not be tagged or have a document structure.,Verify that the displayed structure accurately represents the tagging in the PDF.,,
1378,pypdf,25,Create a Python program using the 'pypdf' API to extract and display the content of specific layers (optional content groups) in a layered PDF file.,code/pypdf/pypdf_25.py,Check for cases where the input PDF file may not be layered or may not have the specified layers.,Verify that the displayed content accurately represents the layers in the PDF.,Test if the program successfully extracts and displays the content of the specified layers (optional content groups) in the specified layered PDF file.,,
1379,pypdf,26,Create a Python program using the 'pypdf' API to extract and display the list of all page labels and their corresponding page numbers in a PDF file.,code/pypdf/pypdf_26.py,Verify that the displayed page labels and page numbers are accurate and represent the PDF structure.,Check for cases where the input PDF file may not have custom page labels.,Test if the program successfully extracts and displays the list of page labels and their corresponding page numbers in the specified PDF file.,,
1380,pypdf,27,"Create a Python program using the 'pypdf' API to extract and display the content of a specific page (e.g., page 3) from a PDF file.",code/pypdf/pypdf_27.py,Test if the program successfully extracts and displays the content of the specified page from the specified PDF file.,Verify that the displayed content matches the content of the specified page in the PDF.,Check for cases where the input PDF file may not have the specified page.,,
1381,pypdf,28,"Create a Python program using the 'pypdf' API to extract and display the content of a specific section (e.g., chapter) from a PDF file based on a keyword or title.",code/pypdf/pypdf_28.py,Test if the program successfully extracts and displays the content of a specific section (chapter) from the specified PDF file based on a keyword or title.,Verify that the displayed content accurately represents the section in the PDF.,Check for cases where the input PDF file may not have the specified section or keyword.,,
1382,pypdf,29,"Create a Python program using the 'pypdf' API to extract and display the list of all fonts used in a PDF file, along with their properties (e.g., type, encoding).",code/pypdf/pypdf_29.py,Check for cases where the input PDF file may not contain font information.,Verify that the displayed font properties accurately represent the fonts in the PDF.,"Test if the program successfully extracts and displays the list of fonts used in the specified PDF file, along with their properties (type and encoding).",,
1383,pypdf,30,"Create a Python program using the 'pypdf' API to extract and display the list of all images used in a PDF file, including their formats (e.g., JPEG, PNG).",code/pypdf/pypdf_30.py,Check for cases where the input PDF file may not contain images.,"Test if the program successfully extracts and displays the list of images used in the specified PDF file, along with their formats (e.g., JPEG, PNG).",Verify that the displayed image formats accurately represent the images in the PDF.,,
1384,pypdf,31,"Create a Python program using the 'pypdf' API to extract and display the list of all links (hyperlinks and internal links) in a PDF file, along with their destinations.",code/pypdf/pypdf_31.py,"Test if the program successfully extracts and displays the list of links (hyperlinks and internal links) in the specified PDF file, along with their destinations.",Verify that the displayed link information accurately represents the links in the PDF.,Check for cases where the input PDF file may not have links.,,
1385,pypdf,32,"Create a Python program using the 'pypdf' API to extract and display the list of all text annotations (comments) in a PDF file, including their contents and locations.",code/pypdf/pypdf_32.py,Check for cases where the input PDF file may not have text annotations.,"Test if the program successfully extracts and displays the list of text annotations (comments) in the specified PDF file, including their contents and locations.",Verify that the displayed text annotations accurately represent the comments in the PDF.,,
1386,pypdf,33,"Create a Python program using the 'pypdf' API to extract and display the list of all form fields in a PDF file, including text fields, checkboxes, and radio buttons.",code/pypdf/pypdf_33.py,"Test if the program successfully extracts and displays text fields, checkboxes, and radio buttons from the specified PDF file.",Check for cases where the input PDF file may not have form fields.,Verify that the displayed form fields and values are accurate and represent the forms in the PDF.,,
1387,pypdf,34,"Create a Python program using the 'pypdf' API to extract and display the list of all named destinations (links) in a PDF file, along with their page numbers.",code/pypdf/pypdf_34.py,Check for cases where the input PDF file may not have named destinations.,"Test if the program successfully extracts and displays the list of named destinations (links) in the specified PDF file, along with their page numbers.",Verify that the displayed named destinations accurately represent the links in the PDF.,,
1395,pytensor,1,Create a Python program that uses the 'pytensor' API to perform matrix multiplication and matrix addition operations on two given matrices. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_1.py,Test matrix multiplication with invalid inputs:\n* Inputs: matrix_a and a non-matrix object\n* Expected Output: An error message indicating invalid input.,Test matrix addition with matrices of different dimensions:\n* Inputs: matrix_a (2x2) and a different-sized matrix (3x3)\n* Expected Output: An error message indicating incompatible dimensions for addition.,Test matrix multiplication with valid inputs:\n* Inputs: matrix_a and matrix_b (valid matrices)\n* Expected Output: The result of matrix multiplication.,,
1396,pytensor,2,Create a Python program that uses the 'pytensor' API to perform element-wise addition and subtraction on two given tensors. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_2.py,Test element-wise subtraction with valid inputs:\n* Inputs: tensor_x and tensor_y (valid tensors)\n* Expected Output: The result of element-wise subtraction.,Test element-wise addition with valid inputs:\n* Inputs: tensor_x and tensor_y (valid tensors)\n* Expected Output: The result of element-wise addition.,"Test element-wise addition with tensors of different dimensions:\n* Inputs: tensor_x (3 elements) and a tensor with a different number of elements (e.g., 4 elements)\n* Expected Output: An error message indicating incompatible dimensions for addition.",,
1397,pytensor,3,Create a Python program that uses the 'pytensor' API to calculate the dot product of two vectors. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_3.py,"Test dot product calculation with vectors of different dimensions:\n* Inputs: vector_p (3 elements) and a vector with a different number of elements (e.g., 4 elements)\n* Expected Output: An error message indicating incompatible dimensions for dot product calculation.",Test dot product calculation with valid inputs:\n* Inputs: vector_p and vector_q (valid vectors)\n* Expected Output: The result of the dot product calculation.,Test dot product calculation with non-vector inputs:\n* Inputs: vector_p and a non-vector object\n* Expected Output: An error message indicating invalid input.,,
1398,pytensor,4,Create a Python program that uses the 'pytensor' API to find the mean and standard deviation of a given list of numbers. Ensure that your program handles the input data appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_4.py,Test mean and standard deviation calculation with an empty input list:\n* Inputs: an empty list\n* Expected Output: An error message indicating an empty input list.,"Test mean and standard deviation calculation with non-numeric inputs:\n* Inputs: number_list containing non-numeric values (e.g., strings)\n* Expected Output: An error message indicating invalid input.",Test mean and standard deviation calculation with valid inputs:\n* Inputs: number_list (a list of numbers)\n* Expected Output: The calculated mean and standard deviation as a dictionary.,,
1399,pytensor,5,Create a Python program that uses the 'pytensor' API to find the eigenvalues and eigenvectors of a given square matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_5.py,"Test eigenvalues and eigenvectors calculation with a non-square matrix:\n* Inputs: a non-square matrix (e.g., rectangular matrix)\n* Expected Output: An error message indicating an invalid input.",Test eigenvalues and eigenvectors calculation with a valid square matrix:\n* Inputs: square_matrix (a valid square matrix)\n* Expected Output: The calculated eigenvalues and eigenvectors as a dictionary.,Test eigenvalues and eigenvectors calculation with a non-matrix input:\n* Inputs: a non-matrix object\n* Expected Output: An error message indicating invalid input.,,
1400,pytensor,6,Create a Python program that uses the 'pytensor' API to perform the Hadamard product (element-wise multiplication) of two given matrices. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_6.py,Test Hadamard product with matrices of different dimensions:\n* Inputs: matrix_A (2x2) and a different-sized matrix (3x3)\n* Expected Output: An error message indicating incompatible dimensions for the Hadamard product.,Test Hadamard product with valid inputs:\n* Inputs: matrix_A and matrix_B (valid matrices)\n* Expected Output: The result of the Hadamard product.,Test Hadamard product with non-matrix inputs:\n* Inputs: matrix_A and a non-matrix object\n* Expected Output: An error message indicating invalid input.,,
1401,pytensor,7,Create a Python program that uses the 'pytensor' API to calculate the determinant of a given square matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_7.py,"Test determinant calculation with a non-square matrix:\n* Inputs: a non-square matrix (e.g., rectangular matrix)\n* Expected Output: An error message indicating an invalid input.",Test determinant calculation with a valid square matrix:\n* Inputs: square_matrix_C (a valid square matrix)\n* Expected Output: The calculated determinant.,Test determinant calculation with a non-matrix input:\n* Inputs: a non-matrix object\n* Expected Output: An error message indicating invalid input.,,
1402,pytensor,8,Create a Python program that uses the 'pytensor' API to perform matrix transposition on a given matrix. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_8.py,Test matrix transposition with non-matrix inputs:\n* Inputs: matrix_D and a non-matrix object\n* Expected Output: An error message indicating invalid input.,Test matrix transposition with a valid matrix:\n* Inputs: matrix_D (a valid matrix)\n* Expected Output: The transposed matrix.,Test matrix transposition with an empty input matrix:\n* Inputs: an empty matrix\n* Expected Output: An error message indicating an empty input matrix.,,
1403,pytensor,9,Create a Python program that uses the 'pytensor' API to perform element-wise exponentiation on a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_9.py,"Test element-wise exponentiation with non-numeric exponent:\n* Inputs: tensor_E and a non-numeric exponent (e.g., string)\n* Expected Output: An error message indicating an invalid exponent.",Test element-wise exponentiation with a valid tensor and exponent:\n* Inputs: tensor_E (a valid tensor) and exponent (a valid exponent)\n* Expected Output: The result of element-wise exponentiation.,Test element-wise exponentiation with non-tensor inputs:\n* Inputs: tensor_E and a non-tensor object\n* Expected Output: An error message indicating invalid input.,,
1404,pytensor,10,Create a Python program that uses the 'pytensor' API to perform matrix inversion on a given square matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_10.py,Test matrix inversion with a singular matrix:\n* Inputs: a square matrix with no inverse (singular matrix)\n* Expected Output: An error message indicating a singular matrix.,"Test matrix inversion with a non-square matrix:\n* Inputs: a non-square matrix (e.g., rectangular matrix)\n* Expected Output: An error message indicating an invalid input.",Test matrix inversion with a valid square matrix:\n* Inputs: square_matrix_F (a valid square matrix)\n* Expected Output: The inverted matrix.,,
1405,pytensor,11,Create a Python program that uses the 'pytensor' API to find the maximum and minimum values in a given tensor. Ensure that your program handles the input tensor appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_11.py,"Test maximum and minimum value identification with non-numeric inputs:\n* Inputs: tensor_G containing non-numeric values (e.g., strings)\n* Expected Output: An error message indicating invalid input.",Test maximum and minimum value identification with a valid tensor:\n* Inputs: tensor_G (a valid tensor)\n* Expected Output: The maximum and minimum values as a dictionary.,Test maximum and minimum value identification with an empty tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,,
1406,pytensor,12,Create a Python program that uses the 'pytensor' API to calculate the cross product of two given 3D vectors. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_12.py,Test cross product calculation with non-vector inputs:\n* Inputs: vector_U and a non-vector object\n* Expected Output: An error message indicating invalid input.,Test cross product calculation with valid 3D vectors:\n* Inputs: vector_U and vector_V (valid 3D vectors)\n* Expected Output: The calculated cross product.,"Test cross product calculation with non-3D vectors:\n* Inputs: vector_U and a non-3D vector (e.g., 2D vector)\n* Expected Output: An error message indicating incompatible dimensions for cross product calculation.",,
1407,pytensor,13,Create a Python program that uses the 'pytensor' API to calculate the L2 norm of a given vector. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_13.py,Test L2 norm calculation with an empty input vector:\n* Inputs: an empty vector\n* Expected Output: An error message indicating an empty input vector.,Test L2 norm calculation with a valid vector:\n* Inputs: vector_H (a valid vector)\n* Expected Output: The calculated L2 norm.,Test L2 norm calculation with a non-vector input:\n* Inputs: vector_H and a non-vector object\n* Expected Output: An error message indicating invalid input.,,
1408,pytensor,14,Create a Python program that uses the 'pytensor' API to calculate the outer product of two given vectors. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_14.py,Test outer product calculation with non-vector inputs:\n* Inputs: vector_I and a non-vector object\n* Expected Output: An error message indicating invalid input.,Test outer product calculation with empty vectors:\n* Inputs: an empty vector\n* Expected Output: An error message indicating an empty input vector.,Test outer product calculation with valid vectors:\n* Inputs: vector_I and vector_J (valid vectors)\n* Expected Output: The calculated outer product.,,
1409,pytensor,15,Create a Python program that uses the 'pytensor' API to calculate the cosine similarity between two given vectors. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_15.py,Test cosine similarity calculation with empty vectors:\n* Inputs: an empty vector\n* Expected Output: An error message indicating an empty input vector.,Test cosine similarity calculation with non-vector inputs:\n* Inputs: vector_K and a non-vector object\n* Expected Output: An error message indicating invalid input.,Test cosine similarity calculation with valid vectors:\n* Inputs: vector_K and vector_L (valid vectors)\n* Expected Output: The calculated cosine similarity.,,
1410,pytensor,16,Create a Python program that uses the 'pytensor' API to perform element-wise division of two tensors. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_16.py,"Test element-wise division with tensors of different dimensions:\n* Inputs: tensor_M (3 elements) and a tensor with a different number of elements (e.g., 4 elements)\n* Expected Output: An error message indicating incompatible dimensions for division.",Test element-wise division with valid inputs:\n* Inputs: tensor_M and tensor_N (valid tensors)\n* Expected Output: The result of element-wise division.,Test element-wise division with division by zero:\n* Inputs: tensor_M and a tensor containing zero values\n* Expected Output: An error message indicating division by zero.,,
1411,pytensor,17, Create a Python program that uses the 'pytensor' API to calculate the exponential of a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_17.py,Test exponential calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test exponential calculation with non-tensor inputs:\n* Inputs: tensor_O and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test exponential calculation with a valid tensor:\n* Inputs: tensor_O (a valid tensor)\n* Expected Output: The calculated exponential of the tensor.,,
1412,pytensor,18,Create a Python program that uses the 'pytensor' API to calculate the sum of the absolute values of elements in a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_18.py,Test sum of absolute values calculation with non-tensor inputs:\n* Inputs: tensor_P and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test sum of absolute values calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test sum of absolute values calculation with a valid tensor:\n* Inputs: tensor_P (a valid tensor)\n* Expected Output: The calculated sum of absolute values.,,
1413,pytensor,19,Create a Python program that uses the 'pytensor' API to calculate the sigmoid function's output for a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_19.py,Test sigmoid function calculation with non-tensor inputs:\n* Inputs: tensor_Q and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test sigmoid function calculation with a valid tensor:\n* Inputs: tensor_Q (a valid tensor)\n* Expected Output: The calculated sigmoid function output.,Test sigmoid function calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,,
1414,pytensor,20,Create a Python program that uses the 'pytensor' API to calculate the inverse hyperbolic sine (arcsinh) for a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_20.py,Test arcsinh calculation with non-tensor inputs:\n* Inputs: tensor_R and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test arcsinh calculation with a valid tensor:\n* Inputs: tensor_R (a valid tensor)\n* Expected Output: The calculated inverse hyperbolic sine.,Test arcsinh calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,,
1415,pytensor,21,Create a Python program that uses the 'pytensor' API to perform matrix reshaping on a given matrix. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_21.py,Test matrix reshaping with non-matrix input:\n* Inputs: matrix_S and a non-matrix object as new_shape\n* Expected Output: An error message indicating invalid input.,Test matrix reshaping with a valid matrix and shape:\n* Inputs: matrix_S (a valid matrix) and new_shape (a valid shape)\n* Expected Output: The reshaped matrix.,Test matrix reshaping with incompatible shape:\n* Inputs: matrix_S and a new_shape that is incompatible with the original matrix size\n* Expected Output: An error message indicating incompatible dimensions for reshaping.,,
1416,pytensor,22,Create a Python program that uses the 'pytensor' API to calculate the trace of a given square matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_22.py,Test trace calculation with a non-matrix input:\n* Inputs: a non-matrix object\n* Expected Output: An error message indicating invalid input.,"Test trace calculation with a non-square matrix:\n* Inputs: a non-square matrix (e.g., rectangular matrix)\n* Expected Output: An error message indicating an invalid input.",Test trace calculation with a valid square matrix:\n* Inputs: square_matrix_T (a valid square matrix)\n* Expected Output: The calculated trace.,,
1417,pytensor,23,Create a Python program that uses the 'pytensor' API to perform element-wise square root on a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_23.py,Test element-wise square root calculation with non-tensor inputs:\n* Inputs: tensor_W and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test element-wise square root calculation with negative values:\n* Inputs: tensor_W containing negative values\n* Expected Output: An error message indicating invalid input (complex result).,Test element-wise square root calculation with a valid tensor:\n* Inputs: tensor_W (a valid tensor)\n* Expected Output: The result of element-wise square root.,,
1418,pytensor,24,Create a Python program that uses the 'pytensor' API to calculate the mean and standard deviation of columns in a given matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_24.py,Test column statistics calculation with a non-matrix input:\n* Inputs: matrix_U and a non-matrix object\n* Expected Output: An error message indicating invalid input.,Test column statistics calculation with an empty input matrix:\n* Inputs: an empty matrix\n* Expected Output: An error message indicating an empty input matrix.,Test column statistics calculation with a valid matrix:\n* Inputs: matrix_U (a valid matrix)\n* Expected Output: The calculated mean and standard deviation of columns as a dictionary.,,
1419,pytensor,25,Create a Python program that uses the 'pytensor' API to perform matrix division on two given square matrices. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_25.py,Test matrix division with division by zero:\n* Inputs: matrix_M and a matrix_N that contains zero values\n* Expected Output: An error message indicating division by zero.,Test matrix division with valid square matrices:\n* Inputs: matrix_M and matrix_N (valid square matrices)\n* Expected Output: The result of matrix division.,Test matrix division with a non-square matrix input (matrix_M and a non-square matrix):\n* Inputs: matrix_M (square matrix) and a non-square matrix\n* Expected Output: An error message indicating incompatible dimensions for division.,,
1420,pytensor,26,Create a Python program that uses the 'pytensor' API to calculate the natural logarithm of a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_26.py,"Test natural logarithm calculation with non-positive values:\n* Inputs: tensor_Y containing non-positive values (e.g., zero or negative numbers)\n* Expected Output: An error message indicating invalid input (complex result).",Test natural logarithm calculation with non-tensor inputs:\n* Inputs: tensor_Y and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test natural logarithm calculation with a valid tensor:\n* Inputs: tensor_Y (a valid tensor)\n* Expected Output: The calculated natural logarithm of the tensor.,,
1421,pytensor,27,Create a Python program that uses the 'pytensor' API to calculate the matrix rank of a given matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_27.py,Test matrix rank calculation with a valid matrix:\n* Inputs: matrix_B (a valid matrix)\n* Expected Output: The calculated rank of the matrix.,Test matrix rank calculation with an empty input matrix:\n* Inputs: an empty matrix\n* Expected Output: An error message indicating an empty input matrix.,Test matrix rank calculation with a non-matrix input:\n* Inputs: matrix_B and a non-matrix object\n* Expected Output: An error message indicating invalid input.,,
1422,pytensor,28,Create a Python program that uses the 'pytensor' API to calculate the dot product of two given vectors. Ensure that your program handles vector dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_28.py,"Test dot product calculation with vectors of different dimensions:\n* Inputs: vector_E (3 elements) and a vector with a different number of elements (e.g., 4 elements)\n* Expected Output: An error message indicating incompatible dimensions for dot product calculation.",Test dot product calculation with non-vector inputs:\n* Inputs: vector_E and a non-vector object\n* Expected Output: An error message indicating invalid input.,Test dot product calculation with valid vectors:\n* Inputs: vector_E and vector_F (valid vectors)\n* Expected Output: The calculated dot product.,,
1423,pytensor,29,Create a Python program that uses the 'pytensor' API to calculate the square of each element in a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_29.py,Test square element calculation with non-tensor inputs:\n* Inputs: tensor_G and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test square element calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test square element calculation with a valid tensor:\n* Inputs: tensor_G (a valid tensor)\n* Expected Output: The result of squaring each element of the tensor.,,
1424,pytensor,30,Create a Python program that uses the 'pytensor' API to calculate the mean and standard deviation of a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_30.py,Test tensor statistics calculation with non-tensor inputs:\n* Inputs: tensor_I and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test tensor statistics calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test tensor statistics calculation with a valid tensor:\n* Inputs: tensor_I (a valid tensor)\n* Expected Output: The calculated mean and standard deviation of the tensor as a dictionary.,,
1425,pytensor,31,Create a Python program that uses the 'pytensor' API to perform matrix slicing on a given matrix. Ensure that your program handles matrix dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_31.py,Test matrix slicing with non-matrix input:\n* Inputs: matrix_K and a non-matrix object as slicing indices\n* Expected Output: An error message indicating invalid input.,"Test matrix slicing with a valid matrix and slicing indices:\n* Inputs: matrix_K (a valid matrix) and row_start, row_end, col_start, col_end (valid slicing indices)\n* Expected Output: The sliced matrix.",Test matrix slicing with incompatible slicing indices:\n* Inputs: matrix_K and slicing indices that are incompatible with the original matrix size\n* Expected Output: An error message indicating incompatible dimensions for slicing.,,
1426,pytensor,32,Create a Python program that uses the 'pytensor' API to calculate the sum of elements in a given tensor along a specified axis. Ensure that your program handles tensor dimensions and axis appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_32.py,Test axis sum calculation with non-tensor input:\n* Inputs: tensor_M and a non-tensor object as axis_to_sum\n* Expected Output: An error message indicating invalid input.,Test axis sum calculation with an invalid axis:\n* Inputs: tensor_M and an axis_to_sum that is out of range for the tensor dimensions\n* Expected Output: An error message indicating an invalid axis.,Test axis sum calculation with a valid tensor and axis:\n* Inputs: tensor_M (a valid tensor) and axis_to_sum (a valid axis)\n* Expected Output: The calculated sum along the specified axis.,,
1428,pytensor,34,Create a Python program that uses the 'pytensor' API to perform tensor transposition on a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_34.py,Test tensor transposition with a valid tensor:\n* Inputs: tensor_Q (a valid tensor)\n* Expected Output: The transposed tensor.,Test tensor transposition with non-tensor input:\n* Inputs: tensor_Q and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test tensor transposition with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,,
1429,pytensor,35,Create a Python program that uses the 'pytensor' API to calculate the inverse of a given square matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_35.py,"Test matrix inverse calculation with a non-square matrix:\n* Inputs: a non-square matrix (e.g., rectangular matrix)\n* Expected Output: An error message indicating an invalid input.",Test matrix inverse calculation with a non-matrix input:\n* Inputs: a non-matrix object\n* Expected Output: An error message indicating invalid input.,Test matrix inverse calculation with a valid square matrix:\n* Inputs: square_matrix_S (a valid square matrix)\n* Expected Output: The calculated inverse of the matrix.,,
1430,pytensor,36,Create a Python program that uses the 'pytensor' API to perform element-wise exponentiation of a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_36.py,Test element-wise exponentiation with negative exponent:\n* Inputs: tensor_U and a negative exponent_value\n* Expected Output: An error message indicating invalid input (complex result).,Test element-wise exponentiation with a valid tensor and exponent:\n* Inputs: tensor_U (a valid tensor) and exponent_value (a valid exponent)\n* Expected Output: The result of element-wise exponentiation.,Test element-wise exponentiation with non-tensor input:\n* Inputs: tensor_U and a non-tensor object as exponent_value\n* Expected Output: An error message indicating invalid input.,,
1432,pytensor,38,Create a Python program that uses the 'pytensor' API to perform tensor element-wise division on two given tensors. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_38.py,Test tensor element-wise division with non-tensor inputs (tensor_Z and a non-tensor object):\n* Inputs: tensor_Z (a valid tensor) and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test tensor element-wise division with division by zero (tensor_Z and tensor_A containing zero values):\n* Inputs: tensor_Z and tensor_A that contain zero values\n* Expected Output: An error message indicating division by zero.,Test tensor element-wise division with valid tensors:\n* Inputs: tensor_Z and tensor_A (valid tensors)\n* Expected Output: The result of element-wise division.,,
1433,pytensor,39,Create a Python program that uses the 'pytensor' API to calculate the cosine of each element in a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_39.py,Test cosine calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test cosine calculation with non-tensor inputs:\n* Inputs: tensor_C and a non-tensor object\n* Expected Output: An error message indicating invalid input.,Test cosine calculation with a valid tensor:\n* Inputs: tensor_C (a valid tensor)\n* Expected Output: The result of the cosine function applied to each element of the tensor.,,
1434,pytensor,40,Create a Python program that uses the 'pytensor' API to calculate the mean and standard deviation of rows in a given matrix. Ensure that your program handles the input matrix appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_40.py,Test row statistics calculation with an empty input matrix:\n* Inputs: an empty matrix\n* Expected Output: An error message indicating an empty input matrix.,Test row statistics calculation with a valid matrix:\n* Inputs: matrix_E (a valid matrix)\n* Expected Output: The calculated mean and standard deviation of rows as a dictionary.,Test row statistics calculation with a non-matrix input:\n* Inputs: matrix_E and a non-matrix object\n* Expected Output: An error message indicating invalid input.,,
1435,pytensor,41,Create a Python program that uses the 'pytensor' API to calculate the tangent of each element in a given tensor. Ensure that your program handles tensor dimensions appropriately and provides meaningful error messages for invalid inputs.,code/pytensor/pytensor_41.py,Test tangent calculation with an empty input tensor:\n* Inputs: an empty tensor\n* Expected Output: An error message indicating an empty input tensor.,Test tangent calculation with a valid tensor:\n* Inputs: tensor_G (a valid tensor)\n* Expected Output: The result of the tangent function applied to each element of the tensor.,Test tangent calculation with non-tensor inputs:\n* Inputs: tensor_G and a non-tensor object\n* Expected Output: An error message indicating invalid input.,,
1436,pytorch-lightning,1,"Create a Python program using the 'pytorch-lightning' API to define a 'DataModule' class that prepares and tokenizes data for a natural language processing task. The 'DataModule' should load a dataset using the 'datasets' and 'transformers' libraries, tokenize the data with a specific model tokenizer, and set up data loaders. The program should demonstrate the use of 'pytorch-lightning' to create a 'DataModule' instance, prepare data, set it up, and print the shape of a batch from the data loader.",code/pytorch-lightning/pytorch-lightning_1.py,Verify that the 'prepare_data' method correctly loads the dataset and the 'setup' method tokenizes and sets up the data for training and validation.,"Ensure that the program prints the shape of a batch from the data loader without errors, indicating correct data preparation and loading.",Check if the program successfully creates an instance of the 'DataModule' class.,,
1437,pytorch-lightning,2,"Create a Python program using the 'pytorch-lightning' API to define a neural network model for a natural language classification task. The model should consist of an embedding layer, a bi-directional LSTM layer, and a linear layer for classification. The program should demonstrate the use of 'pytorch-lightning' to create an instance of the model, forward pass a batch of data, and print the shape of the output tensor.",code/pytorch-lightning/pytorch-lightning_2.py,Verify that the forward pass of the model can process a sample input without errors and produces an output tensor with the correct shape.,Check if the program successfully creates an instance of the 'TextClassificationModel' class.,"Ensure that the model architecture includes an embedding layer, a bi-directional LSTM layer, and a linear layer for classification.",,
1438,pytorch-lightning,3,"Create a Python program using the 'pytorch-lightning' API to define a training loop for the previously created 'TextClassificationModel.' The program should demonstrate the use of 'pytorch-lightning' to set up a trainer, train the model on a sample dataset, and save the trained model checkpoint to a specified directory.",code/pytorch-lightning/pytorch-lightning_3.py,Verify that the trained model checkpoint is saved to the specified directory.,Ensure that the trainer is configured to use a CPU (change to GPU if you have one) and train for the specified number of epochs.,Check if the program successfully trains the 'TextClassificationModel' on a sample dataset without errors.,,
1439,pytorch-lightning,4,Create a Python program using the 'pytorch-lightning' API to define a custom callback that logs the training loss and validation loss during training. The program should demonstrate the use of this custom callback to monitor and log losses during model training.,code/pytorch-lightning/pytorch-lightning_4.py,Ensure that the custom callback correctly monitors and logs both training and validation losses.,Verify that the losses are logged and printed at the end of each epoch during training.,Check if the program successfully trains the 'ExampleModel' with the custom loss logging callback.,,
1440,pytorch-lightning,5,Create a Python program using the 'pytorch-lightning' API to define a custom learning rate scheduler that adjusts the learning rate during training. The program should demonstrate the use of this custom learning rate scheduler with a learning rate finder to discover the optimal learning rate for a model.,code/pytorch-lightning/pytorch-lightning_5.py,Verify that the suggested learning rate is printed correctly.,Check if the program successfully discovers the suggested learning rate using the learning rate finder.,Ensure that the custom learning rate scheduler is implemented correctly in the program.,,
1441,pytorch-lightning,6,Create a Python program using the 'pytorch-lightning' API to define a custom callback that saves model checkpoints during training. The program should demonstrate the use of this custom checkpoint callback to save model checkpoints at specified intervals.,code/pytorch-lightning/pytorch-lightning_6.py,Verify that model checkpoints are saved at specified intervals during training.,Ensure that the custom checkpoint callback is correctly configured to save checkpoints at the specified path and interval.,Check if the program successfully trains the 'ExampleModel' with the custom model checkpoint callback.,,
1442,pytorch-lightning,7,Create a Python program using the 'pytorch-lightning' API to define a custom data loader that loads data from a custom data source. The program should demonstrate the use of this custom data loader in a LightningModule for training a model on the custom data.,code/pytorch-lightning/pytorch-lightning_7.py,Check if the program successfully trains the 'ExampleModel' with the custom data loader.,Ensure that the custom data loader is correctly integrated into the training process.,Verify that the program can train a model using data from the custom data source without errors.,,
1443,pytorch-lightning,8,Create a Python program using the 'pytorch-lightning' API to define a custom logger that logs training metrics to a custom logging system. The program should demonstrate the use of this custom logger to log training metrics during model training.,code/pytorch-lightning/pytorch-lightning_8.py,Ensure that the program can log training metrics to a custom logger without errors.,Verify that the custom logger logs training metrics to the custom logging system.,Check if the program successfully trains the 'ExampleModel' with the custom logger.,,
1444,pytorch-lightning,9,"Create a Python program using the 'pytorch-lightning' API to define a model that uses a pre-trained transformer (e.g., BERT) for a natural language processing task. The program should demonstrate the use of a transformer-based model for text classification, fine-tuning the pre-trained model, and evaluating its performance on a validation dataset.",code/pytorch-lightning/pytorch-lightning_9.py,Ensure that the program can fine-tune the model on the sample data without errors.,Check if the program successfully fine-tunes a pre-trained transformer model for text classification.,Verify that the model can forward pass a batch of data and compute training and validation losses.,,
1445,pytorch-lightning,10,"Create a Python program using the 'pytorch-lightning' API to define a model that employs a pre-trained language model (e.g., GPT-3) for text generation. The program should demonstrate the use of the language model to generate text given a prompt and evaluate the generated text for quality.",code/pytorch-lightning/pytorch-lightning_10.py,Check if the program successfully generates text using a pre-trained language model based on a given prompt.,Ensure that the program can generate text with the specified maximum length and number of return sequences.,Verify that the generated text is decoded and printed correctly.,,
1446,pytorch-lightning,11,"Create a Python program using the 'pytorch-lightning' API to define a model that uses the 'pytorch-lightning' built-in image classification dataset. The program should demonstrate the use of a pre-built data module, model, and training loop for image classification, including training and validation steps.",code/pytorch-lightning/pytorch-lightning_11.py,Verify that the model computes training and validation loss and accuracy metrics.,Check if the program successfully trains an image classification model using the 'ImageNetDataModule'.,Ensure that the program can train the model on the ImageNet dataset without errors.,,
1447,pytorch-lightning,12,"Create a Python program using the 'pytorch-lightning' API to define a model for object detection. The program should demonstrate the use of a pre-built data module, model, and training loop for object detection, including training and validation steps.",code/pytorch-lightning/pytorch-lightning_12.py,Verify that the model computes training and validation loss.,Check if the program successfully trains an object detection model using the 'CocoDetectionDataModule'.,Ensure that the program can train the model on the COCO object detection dataset without errors.,,
1448,pytorch-lightning,13,"Create a Python program using the 'pytorch-lightning' API to define a model that uses a pre-trained speech recognition model for automatic speech recognition. The program should demonstrate the use of a pre-built data module, model, and training loop for speech recognition, including training and validation steps.",code/pytorch-lightning/pytorch-lightning_13.py,Ensure that the program can train the model on the CommonVoice speech recognition dataset without errors.,Check if the program successfully trains a speech recognition model using the 'CommonVoiceDataModule'.,Verify that the model computes training loss.,,
1449,pytorch-lightning,14,"Create a Python program using the 'pytorch-lightning' API to define a model that uses a pre-trained GAN (Generative Adversarial Network) for image generation. The program should demonstrate the use of a pre-built data module, generator, discriminator, loss functions, and training loop for GAN training.",code/pytorch-lightning/pytorch-lightning_14.py,Verify that the GAN model computes generator and discriminator losses.,Check if the program successfully trains a Generative Adversarial Network (GAN) with a generator and discriminator.,Ensure that the program can train the GAN on the CelebA dataset for image generation.,,
1450,pytorch-lightning,15,"Create a Python program using the 'pytorch-lightning' API to define a model that uses a pre-trained transformer model for a text generation task. The program should demonstrate the use of a pre-built data module, model, and training loop for text generation, including training and validation steps.",code/pytorch-lightning/pytorch-lightning_15.py,Verify that the model computes training and validation loss.,Check if the program successfully trains a text generation model using the 'TextGenerationDataModule'.,Ensure that the program can train the model for text generation without errors.,,
1451,pytorch-lightning,16,"Create a Python program using the 'pytorch-lightning' API to define a model that employs a pre-trained recommendation system model for personalized recommendations. The program should demonstrate the use of a pre-built data module, model, and training loop for recommendation, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_16.py,Check if the program successfully trains a recommendation model using the 'RecommendationDataModule'.,Ensure that the program can train the model for personalized recommendations without errors.,Verify that the model computes training and validation metrics.,,
1452,pytorch-lightning,17,"Create a Python program using the 'pytorch-lightning' API to define a model that uses reinforcement learning for an environment with a custom gym environment. The program should demonstrate the use of a custom gym environment, a reinforcement learning agent, and a training loop for reinforcement learning.",code/pytorch-lightning/pytorch-lightning_17.py,Ensure that the program can perform reinforcement learning in a custom gym environment without errors.,Check if the program successfully trains a reinforcement learning agent in a custom gym environment.,Verify that the reinforcement learning agent selects actions and learns from the environment.,,
1453,pytorch-lightning,18,"Create a Python program using the 'pytorch-lightning' API to define a model for time series forecasting. The program should demonstrate the use of a pre-built data module, model, and training loop for time series forecasting, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_18.py,Verify that the model computes training and validation metrics.,Check if the program successfully trains a time series forecasting model using the 'TimeSeriesForecastingDataModule'.,Ensure that the program can train the model for time series forecasting without errors.,,
1454,pytorch-lightning,19,"Create a Python program using the 'pytorch-lightning' API to define a model that employs a pre-trained graph neural network (GNN) for node classification in a graph. The program should demonstrate the use of a pre-built data module, GNN model, and training loop for node classification.",code/pytorch-lightning/pytorch-lightning_19.py,Check if the program successfully trains a graph-based node classification model using the 'GraphNodeClassificationDataModule'.,Verify that the model computes training and validation metrics.,Ensure that the program can train the model for node classification in a graph without errors.,,
1455,pytorch-lightning,20,"Create a Python program using the 'pytorch-lightning' API to define a model for image segmentation. The program should demonstrate the use of a pre-built data module, model, and training loop for image segmentation, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_20.py,Verify that the model computes training and validation loss.,Ensure that the program can train the model for image segmentation without errors.,Check if the program successfully trains an image segmentation model using the ' ImageSegmentationDataModule'.,,
1456,pytorch-lightning,21,"Create a Python program using the 'pytorch-lightning' API to define a model for image captioning. The program should demonstrate the use of a pre-built data module, model, and training loop for image captioning, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_21.py,Check if the program successfully trains an image captioning model using the 'ImageCaptioningDataModule'.,Verify that the model computes training and validation loss.,Ensure that the program can train the model for image captioning without errors.,,
1457,pytorch-lightning,22,"Create a Python program using the 'pytorch-lightning' API to define a model for anomaly detection in time series data. The program should demonstrate the use of a pre-built data module, model, and training loop for anomaly detection, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_22.py,Check if the program successfully trains an anomaly detection model using the 'AnomalyDetectionDataModule'.,Ensure that the program can train the model for anomaly detection without errors.,Verify that the model computes training and validation metrics.,,
1458,pytorch-lightning,23,"Create a Python program using the 'pytorch-lightning' API to define a model for video classification. The program should demonstrate the use of a pre-built data module, model, and training loop for video classification, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_23.py,Ensure that the program can train the model for video classification without errors.,Verify that the model computes training and validation loss.,Check if the program successfully trains a video classification model using the 'VideoClassificationDataModule'.,,
1459,pytorch-lightning,24,"Create a Python program using the 'pytorch-lightning' API to define a model for speech recognition. The program should demonstrate the use of a pre-built data module, model, and training loop for speech recognition, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_24.py,Check if the program successfully trains a speech recognition model using the 'SpeechRecognitionDataModule'.,Ensure that the program can train the model for speech recognition without errors.,Verify that the model computes training and validation loss.,,
1460,pytorch-lightning,25,"Create a Python program using the 'pytorch-lightning' API to define a model for sentiment analysis of text data. The program should demonstrate the use of a pre-built data module, model, and training loop for sentiment analysis, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_25.py,Ensure that the program can train the model for sentiment analysis without errors.,Verify that the model computes training and validation loss.,Check if the program successfully trains a sentiment analysis model using the 'SentimentAnalysisDataModule'.,,
1461,pytorch-lightning,26,"Create a Python program using the 'pytorch-lightning' API to define a model for named entity recognition (NER) in text data. The program should demonstrate the use of a pre-built data module, model, and training loop for NER, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_26.py,Check if the program successfully trains a named entity recognition (NER) model using the 'NERDataModule'.,Verify that the model computes training and validation loss.,Ensure that the program can train the model for NER without errors.,,
1462,pytorch-lightning,27,"Create a Python program using the 'pytorch-lightning' API to define a model for object detection in images. The program should demonstrate the use of a pre-built data module, model, and training loop for object detection, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_27.py,Ensure that the program can train the model for object detection without errors.,Verify that the model computes training and validation loss.,Check if the program successfully trains an object detection model using the 'ObjectDetectionDataModule'.,,
1463,pytorch-lightning,28,"Create a Python program using the 'pytorch-lightning' API to define a model for text generation using a pre-trained language model. The program should demonstrate the use of a pre-built data module, model, and training loop for text generation, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_28.py,Verify that the model computes training and validation loss.,Check if the program successfully trains a text generation model using the 'TextGenerationDataModule'.,Ensure that the program can train the model for text generation without errors.,,
1464,pytorch-lightning,29,"Create a Python program using the 'pytorch-lightning' API to define a model for machine translation. The program should demonstrate the use of a pre-built data module, model, and training loop for machine translation, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_29.py,Ensure that the program can train the model for machine translation without errors.,Verify that the model computes training and validation loss.,Check if the program successfully trains a machine translation model using the 'MachineTranslationDataModule'.,,
1465,pytorch-lightning,30,"Create a Python program using the 'pytorch-lightning' API to define a model for recommendation system. The program should demonstrate the use of a pre-built data module, model, and training loop for recommendation, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_30.py,Ensure that the program can train the model for recommendation without errors.,Verify that the model computes training and validation loss.,Check if the program successfully trains a recommendation system model using the 'RecommendationSystemDataModule'.,,
1466,pytorch-lightning,31,"Create a Python program using the 'pytorch-lightning' API to define a model for document classification using a pre-trained language model. The program should demonstrate the use of a pre-built data module, model, and training loop for document classification, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_31.py,Ensure that the program can train the model for document classification without errors.,Check if the program successfully trains a document classification model using the 'DocumentClassificationDataModule'.,Verify that the model computes training and validation loss.,,
1467,pytorch-lightning,32,"Create a Python program using the 'pytorch-lightning' API to define a model for image style transfer. The program should demonstrate the use of a pre-built data module, model, and training loop for image style transfer, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_32.py,Ensure that the program can perform image style transfer without errors.,Verify that the model computes training and validation loss.,Check if the program successfully performs image style transfer using the 'ImageStyleTransferDataModule'.,,
1468,pytorch-lightning,33,"Create a Python program using the 'pytorch-lightning' API to define a model for stock price prediction. The program should demonstrate the use of a pre-built data module, model, and training loop for stock price prediction, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_33.py,Verify that the model computes training and validation loss.,Check if the program successfully performs stock price prediction using the 'StockPricePredictionDataModule'.,Ensure that the program can perform stock price prediction without errors.,,
1469,pytorch-lightning,34,"Create a Python program using the 'pytorch-lightning' API to define a model for spam email classification. The program should demonstrate the use of a pre-built data module, model, and training loop for spam email classification, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_34.py,Check if the program successfully performs spam email classification using the 'SpamEmailClassificationDataModule'.,Verify that the model computes training and validation loss.,Ensure that the program can perform spam email classification without errors.,,
1470,pytorch-lightning,35,"Create a Python program using the 'pytorch-lightning' API to define a model for emotion recognition in text. The program should demonstrate the use of a pre-built data module, model, and training loop for emotion recognition, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_35.py,Ensure that the program can perform emotion recognition without errors.,Check if the program successfully performs emotion recognition using the 'EmotionRecognitionDataModule'.,Verify that the model computes training and validation loss.,,
1471,pytorch-lightning,36,"Create a Python program using the 'pytorch-lightning' API to define a model for sentiment analysis in text. The program should demonstrate the use of a pre-built data module, model, and training loop for sentiment analysis, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_36.py,Verify that the model computes training and validation loss.,Check if the program successfully performs sentiment analysis using the 'SentimentAnalysisDataModule'.,Ensure that the program can perform sentiment analysis without errors.,,
1473,pytorch-lightning,38,"Create a Python program using the 'pytorch-lightning' API to define a model for object detection. The program should demonstrate the use of a pre-built data module, model, and training loop for object detection, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_38.py,Ensure that the program can perform object detection without errors.,Verify that the model computes training and validation loss.,Check if the program successfully performs object detection using the 'ObjectDetectionDataModule'.,,
1474,pytorch-lightning,39,"Create a Python program using the 'pytorch-lightning' API to define a model for text summarization. The program should demonstrate the use of a pre-built data module, model, and training loop for text summarization, including training and evaluation steps.",code/pytorch-lightning/pytorch-lightning_39.py,Ensure that the program can perform text summarization without errors.,Verify that the model computes training and validation loss.,Check if the program successfully performs text summarization using the 'TextSummarizationDataModule'.,,
1477,rapidfuzz,1,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the ratio similarity score.,code/rapidfuzz/rapidfuzz_1.py,Ensure that the program finds the most similar target string(s) based on the ratio similarity score.,Verify that the program prints the query string and the similarity scores without errors.,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.ratio' scorer.,,
1478,rapidfuzz,2,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.partial_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the partial ratio similarity score.,code/rapidfuzz/rapidfuzz_2.py,Ensure that the program finds the most similar target string(s) based on the partial ratio similarity score.,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.partial_ratio' scorer.,Verify that the program prints the query string and the similarity scores without errors.,,
1479,rapidfuzz,3,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.token_sort_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the token sort ratio similarity score.,code/rapidfuzz/rapidfuzz_3.py,Ensure that the program finds the most similar target string(s) based on the token sort ratio similarity score.,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.token_sort_ratio' scorer.,Verify that the program prints the query string and the similarity scores without errors.,,
1480,rapidfuzz,4,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.token_set_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the token set ratio similarity score.,code/rapidfuzz/rapidfuzz_4.py,Ensure that the program finds the most similar target string(s) based on the token set ratio similarity score.,Verify that the program prints the query string and the similarity scores without errors.,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.token_set_ratio' scorer.,,
1481,rapidfuzz,5,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.token_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the token ratio similarity score.,code/rapidfuzz/rapidfuzz_5.py,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.token_ratio' scorer.,Ensure that the program finds the most similar target string(s) based on the token ratio similarity score.,Verify that the program prints the query string and the similarity scores without errors.,,
1482,rapidfuzz,6,Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.WRatio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. The goal is to find similar strings in the list based on the weighted ratio similarity score.,code/rapidfuzz/rapidfuzz_6.py,Ensure that the program finds the most similar target string(s) based on the weighted ratio similarity score.,Test if the program correctly calculates and prints the similarity scores for the query string compared to the list of target strings using the 'fuzz.WRatio' scorer.,Verify that the program prints the query string and the similarity scores without errors.,,
1483,rapidfuzz,7,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.token_sort_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the partial ratio similarity score for each target string. The goal is to find similar strings in the list based on both the token sort ratio and partial ratio similarity scores.",code/rapidfuzz/rapidfuzz_7.py,Ensure that the program finds the most similar target string(s) based on both the token sort ratio and partial ratio similarity scores.,Test if the program correctly calculates and prints the token sort ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.token_sort_ratio' scorer.,Test if the program correctly calculates and prints the partial ratio similarity scores for the query string compared to the list of target strings.,Verify that the program prints the query string and the similarity scores without errors.,
1484,rapidfuzz,8,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.token_set_ratio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the token ratio similarity score for each target string. The goal is to find similar strings in the list based on both the token set ratio and token ratio similarity scores.",code/rapidfuzz/rapidfuzz_8.py,Test if the program correctly calculates and prints the token set ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.token_set_ratio' scorer.,Test if the program correctly calculates and prints the token ratio similarity scores for the query string compared to the list of target strings.,Ensure that the program finds the most similar target string(s) based on both the token set ratio and token ratio similarity scores.,Verify that the program prints the query string and the similarity scores without errors.,
1485,rapidfuzz,9,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.WRatio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the token sort ratio similarity score for each target string. The goal is to find similar strings in the list based on both the weighted ratio and token sort ratio similarity scores.",code/rapidfuzz/rapidfuzz_9.py,Ensure that the program finds the most similar target string(s) based on both the weighted ratio and token sort ratio similarity scores.,Test if the program correctly calculates and prints the token sort ratio similarity scores for the query string compared to the list of target strings.,Test if the program correctly calculates and prints the weighted ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.WRatio' scorer.,Verify that the program prints the query string and the similarity scores without errors.,
1486,rapidfuzz,10,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.WRatio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the token set ratio similarity score for each target string. The goal is to find similar strings in the list based on both the weighted ratio and token set ratio similarity scores.",code/rapidfuzz/rapidfuzz_10.py,Ensure that the program finds the most similar target string(s) based on both the weighted ratio and token set ratio similarity scores.,Test if the program correctly calculates and prints the token set ratio similarity scores for the query string compared to the list of target strings.,Test if the program correctly calculates and prints the weighted ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.WRatio' scorer.,Verify that the program prints the query string and the similarity scores without errors.,
1487,rapidfuzz,11,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.WRatio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the token ratio similarity score for each target string. The goal is to find similar strings in the list based on both the weighted ratio and token ratio similarity scores.",code/rapidfuzz/rapidfuzz_11.py,Test if the program correctly calculates and prints the token ratio similarity scores for the query string compared to the list of target strings.,Test if the program correctly calculates and prints the weighted ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.WRatio' scorer.,Ensure that the program finds the most similar target string(s) based on both the weighted ratio and token ratio similarity scores.,Verify that the program prints the query string and the similarity scores without errors.,
1488,rapidfuzz,12,"Create a Python program using the 'rapidfuzz' API to demonstrate fuzzy string matching. The program should take a query string and compare it to a list of target strings using the 'fuzz.WRatio' scorer from 'rapidfuzz'. Print the query string and the similarity score for each target string. Additionally, the program should calculate and print the partial ratio similarity score for each target string. The goal is to find similar strings in the list based on both the weighted ratio and partial ratio similarity scores.",code/rapidfuzz/rapidfuzz_12.py,Ensure that the program finds the most similar target string(s) based on both the weighted ratio and partial ratio similarity scores.,Test if the program correctly calculates and prints the weighted ratio similarity scores for the query string compared to the list of target strings using the 'fuzz.WRatio' scorer.,Test if the program correctly calculates and prints the partial ratio similarity scores for the query string compared to the list of target strings.,Verify that the program prints the query string and the similarity scores without errors.,
1518,rich,1,"Create a Python program using the 'rich' API to display a well-formatted table of product inventory data. The table should have columns for product names, prices, and quantities.",code/rich/rich_1.py,Test the table rendering performance with a large dataset to ensure it remains responsive and efficient.,Verify the program's behavior with empty or incomplete data to assess its robustness in handling different scenarios.,Test the program with various sets of product data to ensure it correctly displays the table with proper formatting and alignment.,,
1519,rich,2,Generate a Python program using the 'rich' API to create a dynamic progress bar. The progress bar should show the progress of a task that takes a specific amount of time to complete. You should also include a percentage indicator and a description of the task being performed.,code/rich/rich_2.py,Test the program with different total values to ensure it handles varying task sizes properly.,Test the program with tasks of different durations to ensure the progress bar accurately reflects the progress.,Verify that the program displays the description of the task and updates the percentage correctly as the task progresses.,,
1520,rich,3,Create a Python program using the 'rich' API to highlight and colorize specific text in a given input string. The program should be able to identify and highlight multiple occurrences of the same text within the string.,code/rich/rich_3.py,Check the program\'s behavior when there are no matches in the input text to ensure it handles such cases gracefully.,"Test the program with different input text containing occurrences of the words ""Python"" and ""rich"" to verify that it correctly highlights and colorizes them.",Test the program with long text to assess its performance and readability of highlighted sections.,,
1521,rich,4,"Generate a Python program using the 'rich' API to create a styled and formatted multiline text output. The program should display a message with a custom style, including text color, background color, and text alignment.",code/rich/rich_4.py,Test the program with different styles and colors to ensure it can apply the specified styling to the text correctly.,Test the program with longer multiline text to assess its handling of text wrapping and alignment.,"Verify the program's ability to align text to the center, left, and right to check if it displays the text as intended.",,
1522,rich,5,Create a Python program using the 'rich' API to display a colored and formatted progress bar with custom styling. The progress bar should show the progress of a file download and include details such as download speed and remaining time.,code/rich/rich_5.py,Test the program with various start values to assess its behavior when the download task starts from different points.,Test the program with different download speeds to ensure the progress bar displays the correct speed information.,Verify that the program correctly estimates and displays the remaining time for the download.,,
1523,rich,6,Generate a Python program using the 'rich' API to display a formatted and colored traceback for an intentionally raised exception. The traceback should be easy to read and visually appealing.,code/rich/rich_6.py,Verify that the program maintains the readability of tracebacks for longer and more complex error scenarios.,Test the program by raising different types of exceptions to see how it handles and displays the tracebacks.,Test the program with various custom exceptions to assess its ability to display customized error messages and details.,,
1524,rich,7,"Create a Python program using the 'rich' API to display a formatted and colored list of items, each with a custom style. The list should include item names, descriptions, and prices.",code/rich/rich_7.py,Test the program with a large number of products to assess its performance and readability of the list.,"Verify that the program handles empty or incomplete product data gracefully, ensuring it does not crash or display errors.",Test the program with different sets of product data to ensure it correctly displays the list of items with the specified styles and formatting.,,
1525,rich,8,Generate a Python program using the 'rich' API to create a dynamic and interactive progress bar with options for pausing and resuming the task. The progress bar should show the progress of a long-running task.,code/rich/rich_8.py,Verify that the program responds to pause/resume commands and displays appropriate messages for user interactions.,Test the program with tasks of varying durations to assess its adaptability to different task lengths.,Test the program with a long-running task to ensure the progress bar updates correctly and allows pausing and resuming.,,
1526,rich,9,Create a Python program using the 'rich' API to display a styled and colored hierarchical tree structure. The program should visualize the organization of a directory with subdirectories and files.,code/rich/rich_9.py,"Test the program with different directory structures, including various levels of subdirectories and files, to ensure it correctly displays the tree.",Test the program with long file and directory names to assess its handling of text wrapping and alignment.,Verify that the program maintains readability and structure visualization even with deep and complex directory hierarchies.,,
1527,rich,10,"Generate a Python program using the 'rich' API to display a live updating table of stock market data. The table should include columns for stock symbols, prices, and price changes, and it should refresh every few seconds to show real-time data.",code/rich/rich_10.py,Verify the program's performance and responsiveness by running it for an extended period to ensure it maintains real-time data visualization.,Test the program with real stock market data to verify that it correctly displays and updates the table with actual stock prices and changes.,Test the program's ability to handle different numbers of stocks and display them in an organized table.,,
1528,rich,11,Create a Python program using the 'rich' API to display a formatted and colored calendar for a specific month. The program should highlight the current date and allow navigation to other months.,code/rich/rich_11.py,Test the program with different years and months to ensure it correctly displays the calendar for the specified date.,Test the program with leap years and months with varying numbers of days to assess its accuracy in displaying the calendar.,Verify that the program highlights the current date and allows navigation to different months.,,
1529,rich,12,"Generate a Python program using the 'rich' API to create a styled and colorful text-based user interface for a to-do list application. The program should allow users to add, remove, and list tasks.",code/rich/rich_12.py,Test the program by listing tasks in the to-do list to ensure it displays them accurately.,Verify that the program removes tasks when requested and correctly handles tasks that do not exist in the list.,Test the program by adding multiple tasks to ensure it correctly adds and displays them in the to-do list.,,
1530,rich,13,"Create a Python program using the 'rich' API to display a formatted and colorful list of popular programming languages. The list should include language names, descriptions, and their associated icons.",code/rich/rich_13.py,Test the program by changing the order of the languages in the list to ensure it correctly organizes and displays them.,"Test the program with different sets of programming languages to ensure it correctly displays the list with language names, descriptions, and icons.",Verify that the program maintains readability and formatting even with longer descriptions and language names.,,
1531,rich,14,Generate a Python program using the 'rich' API to display a dynamic and colored log viewer. The program should show log entries with different log levels and use custom styles to highlight errors and warnings.,code/rich/rich_14.py,Test the program by changing the log level filter to assess its ability to display messages based on their severity.,"Test the program by logging messages with different log levels (debug, info, warning, error, critical) to ensure it displays them with appropriate styles and colors.",Verify that the program can handle a large number of log entries without affecting performance.,,
1532,rich,15,Create a Python program using the 'rich' API to display a colorful and styled progress bar that shows the download progress of multiple files. The program should support downloading files simultaneously.,code/rich/rich_15.py,Test the program by downloading files of different sizes to verify that the progress bar accurately reflects the download progress.,Test the program with various file types and extensions to ensure it handles different scenarios gracefully.,Verify that the program correctly handles and displays the status of multiple simultaneous downloads.,,
1533,rich,16,Generate a Python program using the 'rich' API to display a dynamic and colorful real-time weather dashboard. The program should fetch weather data from an API and update the dashboard every few seconds.,code/rich/rich_16.py,Test the program with different cities and weather conditions to verify that it correctly fetches and displays real-time weather data.,Test the program's behavior when the API data is unavailable or returns errors to assess its error-handling capabilities.,Verify the program's responsiveness and update frequency by running it for an extended period to ensure it maintains real-time information.,,
1534,rich,17,Create a Python program using the 'rich' API to display a visually appealing and colored calendar for a specific year and month. The program should allow navigation to different months.,code/rich/rich_17.py,Test the program with different years and months to ensure it correctly displays the calendar for the specified date.,Test the program by changing the text and background colors to assess its ability to customize the appearance of the calendar.,Verify that the program maintains the styling and formatting of the calendar even with different years and months.,,
1535,rich,18,Generate a Python program using the 'rich' API to display a stylish and colored digital clock that shows the current time. The program should update the time every second.,code/rich/rich_18.py,Verify the program's responsiveness and update frequency by running it for an extended period to ensure it maintains real-time accuracy.,Test the program by running it and checking the accuracy of the displayed time compared to the system time.,Test the program with different text and background colors to assess its customization options for the digital clock.,,
1536,rich,19,"Create a Python program using the 'rich' API to display a colorful and styled table of contents for a document. The program should include section names, page numbers, and a navigation option.",code/rich/rich_19.py,Test the program with different sets of table of contents data to ensure it correctly displays section names and page numbers.,Verify that the program maintains readability and formatting even with longer section names and page numbers.,Test the program by changing the title and style of the table of contents to assess its customization options.,,
1537,rich,20,Generate a Python program using the 'rich' API to display a formatted and colored directory tree with file sizes. The program should visualize the organization of a directory and its subdirectories.,code/rich/rich_20.py,Verify that the program maintains readability and structure visualization even with deep and complex directory hierarchies.,"Test the program by changing the file sizes and units (KB, MB, GB) to assess its ability to handle different data formats.","Test the program with different directory structures, including various levels of subdirectories and files with different sizes, to ensure it correctly displays the tree.",,
1538,rich,21,Create a Python program using the 'rich' API to display a colorful and styled progress bar that shows the progress of rendering a 3D object. The program should update the progress as the rendering process continues.,code/rich/rich_21.py,Test the program by rendering different 3D objects to assess its ability to handle various rendering tasks.,Verify that the program displays the progress bar with the correct title and updates the percentage accurately as the rendering process continues.,Test the program with rendering tasks of different durations to ensure the progress bar accurately reflects the progress of rendering.,,
1539,rich,22,Generate a Python program using the 'rich' API to display a colorful and styled countdown timer. The program should count down from a specified time and update every second.,code/rich/rich_22.py,Test the program with different countdown durations to ensure it correctly counts down from the specified time.,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,Test the program with different text and background colors to assess its customization options for the countdown timer.,,
1540,rich,23,"Create a Python program using the 'rich' API to display a visually appealing and colored list of top movie recommendations. The program should include movie titles, release years, and brief descriptions.",code/rich/rich_23.py,Verify that the program maintains readability and formatting even with longer movie titles and descriptions.,Test the program by changing the title and style of the table to assess its customization options for movie recommendations.,"Test the program with different sets of movie recommendations to ensure it correctly displays the list with movie titles, release years, and descriptions.",,
1541,rich,24,Generate a Python program using the 'rich' API to display a colorful and styled histogram of data. The program should visualize the distribution of values in a dataset.,code/rich/rich_24.py,Test the program with different datasets to ensure it correctly displays the histogram for the distribution of values.,Test the program with datasets that contain zero values to assess its ability to handle and display empty sections in the histogram.,Verify that the program maintains readability and formatting even with datasets of varying lengths and value ranges.,,
1542,rich,25,"Create a Python program using the 'rich' API to display a colorful and styled calendar for a specific year and month. The program should include day names, day numbers, and the ability to navigate to different months.",code/rich/rich_25.py,Test the program with different years and months to ensure it correctly displays the calendar for the specified date.,Verify that the program maintains the styling and formatting of the calendar even with different years and months.,Test the program by changing the title and style of the calendar to assess its customization options.,,
1543,rich,26,Generate a Python program using the 'rich' API to display a colorful and styled countdown timer for a specific duration. The program should count down and update every second.,code/rich/rich_26.py,Test the program with different countdown durations to ensure it correctly counts down from the specified time.,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,Test the program by changing the title and style of the countdown timer to assess its customization options.,,
1544,rich,27,"Create a Python program using the 'rich' API to display a colorful and styled list of famous quotes. The program should include the quote text, the author, and the source of the quote.",code/rich/rich_27.py,Test the program by changing the title and style of the table to assess its customization options for famous quotes.,Verify that the program maintains readability and formatting even with longer quotes and source descriptions.,"Test the program with different sets of famous quotes to ensure it correctly displays the list with quote text, authors, and sources.",,
1545,rich,28,Generate a Python program using the 'rich' API to display a styled and colorful digital clock that shows the current time in a 12-hour format with AM/PM. The program should update the time every second.,code/rich/rich_28.py,Verify the program's responsiveness and update frequency by running it for an extended period to ensure it maintains real-time accuracy.,Test the program by running it and checking the accuracy of the displayed time compared to the system time.,Test the program with different text and background colors to assess its customization options for the digital clock.,,
1546,rich,29,"Create a Python program using the 'rich' API to display a visually appealing and colored table of contents for a book. The program should include chapter names, page numbers, and a navigation option.",code/rich/rich_29.py,Test the program by changing the title and style of the table to assess its customization options for the table of contents.,Verify that the program maintains readability and formatting even with longer chapter names and page numbers.,Test the program with different sets of table of contents data to ensure it correctly displays chapter names and page numbers.,,
1547,rich,30,Generate a Python program using the 'rich' API to display a colorful and styled progress bar that shows the progress of a software installation process. The program should update the progress as the installation continues.,code/rich/rich_30.py,Test the program with installation tasks of different durations to ensure the progress bar accurately reflects the progress of the installation.,Verify that the program displays the progress bar with the correct title and updates the percentage accurately as the installation process continues.,Test the program by installing different software packages to assess its ability to handle various installation tasks.,,
1548,rich,31,Create a Python program using the 'rich' API to display a colorful and styled countdown timer for a specific duration in minutes and seconds. The program should count down and update every second.,code/rich/rich_31.py,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,Test the program by changing the title and style of the countdown timer to assess its customization options.,Test the program with different countdown durations in minutes and seconds to ensure it correctly counts down from the specified time.,,
1549,rich,32,"Generate a Python program using the 'rich' API to display a styled and colorful list of inspirational quotes. The program should include the quote text, the author, and the source of the quote.",code/rich/rich_32.py,"Test the program with different sets of inspirational quotes to ensure it correctly displays the list with quote text, authors, and sources.",Verify that the program maintains readability and formatting even with longer quotes and source descriptions.,Test the program by changing the title and style of the table to assess its customization options for inspirational quotes.,,
1550,rich,33,Create a Python program using the 'rich' API to display a visually appealing and colored progress bar that shows the progress of a data transfer process. The program should update the progress as the data transfer continues.,code/rich/rich_33.py,Verify that the program displays the progress bar with the correct title and updates the percentage accurately as the data transfer process continues.,Test the program with data transfer tasks of different durations to ensure the progress bar accurately reflects the progress of the data transfer.,Test the program by transferring different types of data to assess its ability to handle various data transfer tasks.,,
1551,rich,34,"Generate a Python program using the 'rich' API to display a colorful and styled countdown timer for a specific duration in hours, minutes, and seconds. The program should count down and update every second.",code/rich/rich_34.py,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,"Test the program with different countdown durations in hours, minutes, and seconds to ensure it correctly counts down from the specified time.",Test the program by changing the title and style of the countdown timer to assess its customization options.,,
1552,rich,35,"Create a Python program using the 'rich' API to display a colorful and styled list of famous scientific quotes. The program should include the quote text, the author, and the source of the quote.",code/rich/rich_35.py,Verify that the program maintains readability and formatting even with longer quotes and source descriptions.,Test the program by changing the title and style of the table to assess its customization options for famous scientific quotes.,"Test the program with different sets of famous scientific quotes to ensure it correctly displays the list with quote text, authors, and sources.",,
1553,rich,36,Generate a Python program using the 'rich' API to display a colorful and styled progress bar that shows the progress of a video rendering process. The program should update the progress as the rendering continues.,code/rich/rich_36.py,Test the program with video rendering tasks of different durations to ensure the progress bar accurately reflects the progress of video rendering.,Verify that the program displays the progress bar with the correct title and updates the percentage accurately as the video rendering process continues.,Test the program by rendering different types of videos to assess its ability to handle various video rendering tasks.,,
1554,rich,37,"Create a Python program using the 'rich' API to display a colorful and styled countdown timer for a specific duration in days, hours, minutes, and seconds. The program should count down and update every second.",code/rich/rich_37.py,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,"Test the program with different countdown durations in days, hours, minutes, and seconds to ensure it correctly counts down from the specified time.",Test the program by changing the title and style of the countdown timer to assess its customization options.,,
1555,rich,38,"Generate a Python program using the 'rich' API to display a colorful and styled list of famous literary quotes. The program should include the quote text, the author, and the source of the quote.",code/rich/rich_38.py,Test the program by changing the title and style of the table to assess its customization options for famous literary quotes.,Verify that the program maintains readability and formatting even with longer quotes and source descriptions.,"Test the program with different sets of famous literary quotes to ensure it correctly displays the list with quote text, authors, and sources.",,
1556,rich,39,Create a Python program using the 'rich' API to display a colorful and styled progress bar that shows the progress of a software compilation process. The program should update the progress as the compilation continues.,code/rich/rich_39.py,Test the program by compiling different software projects to assess its ability to handle various compilation tasks.,Verify that the program displays the progress bar with the correct title and updates the percentage accurately as the compilation process continues.,Test the program with software compilation tasks of different durations to ensure the progress bar accurately reflects the progress of the compilation.,,
1557,rich,40,"Generate a Python program using the 'rich' API to display a colorful and styled countdown timer for a specific duration in weeks, days, hours, minutes, and seconds. The program should count down and update every second.",code/rich/rich_40.py,Verify the program's responsiveness and accuracy in updating the countdown every second by running it for an extended period.,"Test the program with different countdown durations in weeks, days, hours, minutes, and seconds to ensure it correctly counts down from the specified time.",Test the program by changing the title and style of the countdown timer to assess its customization options.,,
1558,rich,41,"Create a Python program using the 'rich' API to display a colorful and styled list of famous historical quotes. The program should include the quote text, the author, and the source of the quote.",code/rich/rich_41.py,Verify that the program maintains readability and formatting even with longer quotes and source descriptions.,Test the program by changing the title and style of the table to assess its customization options for famous historical quotes.,"Test the program with different sets of famous historical quotes to ensure it correctly displays the list with quote text, authors, and sources.",,
1559,rustworkx,1,"Create a Python program using the 'rustworkx' API to define a directed graph and find the shortest path between two nodes. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish weighted edges between these nodes and print the indices of the added edges. Then, use Dijkstra's shortest path algorithm to find and print the shortest path from node 'A' to node 'C'",code/rustworkx/rustworkx_1.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the shortest path from node 'A' to node 'C' using Dijkstra's algorithm.,Test that the indices of the added edges are printed as expected.,,
1560,rustworkx,2,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the minimum spanning tree. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish weighted edges between these nodes and print the indices of the added edges. Then, use Kruskal's algorithm to find and print the minimum spanning tree of the graph.",code/rustworkx/rustworkx_2.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the minimum spanning tree of the graph using Kruskal's algorithm.,Test that the indices of the added edges are printed as expected.,,
1561,rustworkx,3,"Create a Python program using the 'rustworkx' API to define a directed graph and find the topological sorting of the nodes. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish directed edges between these nodes and print the indices of the added edges. Then, use the topological_sort function to find and print the topological sorting of the nodes in the graph.",code/rustworkx/rustworkx_3.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the topological sorting of the nodes in the graph.,Test that the indices of the added edges are printed as expected.,,
1562,rustworkx,4,"Create a Python program using the 'rustworkx' API to define a directed graph and find the strongly connected components. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish directed edges between these nodes and print the indices of the added edges. Then, use the kosaraju_strongly_connected_components function to find and print the strongly connected components of the graph.",code/rustworkx/rustworkx_4.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the strongly connected components of the graph.,Test that the indices of the added edges are printed as expected.,,
1563,rustworkx,5,"Create a Python program using the 'rustworkx' API to define a directed graph and find the transitive closure. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish directed edges between these nodes and print the indices of the added edges. Then, use the transitive_closure function to find and print the transitive closure of the graph.",code/rustworkx/rustworkx_5.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the transitive closure of the graph.,Test that the indices of the added edges are printed as expected.,,
1564,rustworkx,6,"Create a Python program using the 'rustworkx' API to define a directed graph and find the minimum cut. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish directed edges between these nodes and print the indices of the added edges. Then, use the stoer_wagner_min_cut function to find and print the minimum cut of the graph.",code/rustworkx/rustworkx_6.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the minimum cut of the graph.,Test that the indices of the added edges are printed as expected.,,
1565,rustworkx,7,"Create a Python program using the 'rustworkx' API to define a directed graph and find the maximum flow. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish directed edges between these nodes and print the indices of the added edges. Then, use the edmonds_karp_max_flow function to find and print the maximum flow of the graph.",code/rustworkx/rustworkx_7.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the maximum flow of the graph.,Test that the indices of the added edges are printed as expected.,,
1566,rustworkx,8,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the articulation points. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the tarjan_articulation_points function to find and print the articulation points of the graph.",code/rustworkx/rustworkx_8.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the articulation points of the graph.,Test that the indices of the added edges are printed as expected.,,
1567,rustworkx,9,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the bridges. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the tarjan_bridges function to find and print the bridges of the graph.",code/rustworkx/rustworkx_9.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the bridges of the graph.,Test that the indices of the added edges are printed as expected.,,
1568,rustworkx,10,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the connected components. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the connected_components function to find and print the connected components of the graph.",code/rustworkx/rustworkx_10.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the connected components of the graph.,Test that the indices of the added edges are printed as expected.,,
1569,rustworkx,11,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the diameter. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the diameter function to find and print the diameter of the graph.",code/rustworkx/rustworkx_11.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the diameter of the graph.,Test that the indices of the added edges are printed as expected.,,
1570,rustworkx,12,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the eccentricity of each node. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the eccentricity function to find and print the eccentricity of each node in the graph.",code/rustworkx/rustworkx_12.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the eccentricity of each node in the graph.,Test that the indices of the added edges are printed as expected.,,
1571,rustworkx,13,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the center. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the center function to find and print the center of the graph.",code/rustworkx/rustworkx_13.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the center of the graph.,Test that the indices of the added edges are printed as expected.,,
1572,rustworkx,14,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the minimum vertex cover. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the min_vertex_cover function to find and print the minimum vertex cover of the graph.",code/rustworkx/rustworkx_14.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the minimum vertex cover of the graph.,Test that the indices of the added edges are printed as expected.,,
1573,rustworkx,15,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the maximum independent set. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the max_independent_set function to find and print the maximum independent set of the graph.",code/rustworkx/rustworkx_15.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the maximum independent set of the graph.,Test that the indices of the added edges are printed as expected.,,
1574,rustworkx,16,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the minimum dominating set. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the min_dominating_set function to find and print the minimum dominating set of the graph.",code/rustworkx/rustworkx_16.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the minimum dominating set of the graph.,Test that the indices of the added edges are printed as expected.,,
1575,rustworkx,17,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the maximum clique. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the max_clique function to find and print the maximum clique of the graph.",code/rustworkx/rustworkx_17.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the maximum clique of the graph.,Test that the indices of the added edges are printed as expected.,,
1576,rustworkx,18,"Create a Python program using the 'rustworkx' API to define an undirected graph and find the minimum feedback vertex set. Initialize an empty graph and add nodes 'A,' 'B,' 'C,' and 'D' to it. Establish edges between these nodes and print the indices of the added edges. Then, use the min_feedback_vertex_set function to find and print the minimum feedback vertex set of the graph.",code/rustworkx/rustworkx_18.py,Test that the program correctly creates nodes and edges in the graph.,Test that the program accurately finds and prints the minimum feedback vertex set of the graph.,Test that the indices of the added edges are printed as expected.,,
1600,scikit-learn,1,"Create a Python program that uses the 'scikit-learn' API to load the Iris dataset, split it into training and testing sets, train a K-Nearest Neighbors classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_1.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1601,scikit-learn,2,"Create a Python program that uses the 'scikit-learn' API to load the Boston Housing dataset, split it into training and testing sets, train a Linear Regression model, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_2.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1602,scikit-learn,3,"Create a Python program that uses the 'scikit-learn' API to load the Breast Cancer dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_3.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1603,scikit-learn,4,"Create a Python program that uses the 'scikit-learn' API to load the Wine dataset, split it into training and testing sets, train a Random Forest classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_4.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1604,scikit-learn,5,"Create a Python program that uses the 'scikit-learn' API to load the Diabetes dataset, split it into training and testing sets, train a Decision Tree classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_5.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1605,scikit-learn,6,"Create a Python program that uses the 'scikit-learn' API to load the MNIST dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_6.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1606,scikit-learn,7,"Create a Python program that uses the 'scikit-learn' API to load the California Housing dataset, split it into training and testing sets, train a Gradient Boosting Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_7.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1607,scikit-learn,8,"Create a Python program that uses the 'scikit-learn' API to load the Digits dataset, split it into training and testing sets, train a Random Forest classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_8.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1608,scikit-learn,9,"Create a Python program that uses the 'scikit-learn' API to load the LFW (Labeled Faces in the Wild) dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_9.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1609,scikit-learn,10,"Create a Python program that uses the 'scikit-learn' API to load the Wine Quality dataset, split it into training and testing sets, train a Random Forest Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_10.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1610,scikit-learn,11,"Create a Python program that uses the 'scikit-learn' API to load the Boston Housing dataset, split it into training and testing sets, train a Support Vector Machine regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_11.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1611,scikit-learn,12,"Create a Python program that uses the 'scikit-learn' API to load the Breast Cancer dataset, split it into training and testing sets, train a Logistic Regression classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_12.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1612,scikit-learn,13,"Create a Python program that uses the 'scikit-learn' API to load the Diabetes dataset, split it into training and testing sets, train a Random Forest Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_13.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1613,scikit-learn,14,"Create a Python program that uses the 'scikit-learn' API to load the Wine Quality dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_14.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1614,scikit-learn,15,"Create a Python program that uses the 'scikit-learn' API to load the MNIST dataset, split it into training and testing sets, train a Logistic Regression classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_15.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1615,scikit-learn,16,"Create a Python program that uses the 'scikit-learn' API to load the California Housing dataset, split it into training and testing sets, train a Decision Tree Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_16.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1616,scikit-learn,17,"Create a Python program that uses the 'scikit-learn' API to load the Digits dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_17.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1617,scikit-learn,18,"Create a Python program that uses the 'scikit-learn' API to load the LFW (Labeled Faces in the Wild) dataset, split it into training and testing sets, train a Random Forest classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_18.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1618,scikit-learn,19,"Create a Python program that uses the 'scikit-learn' API to load the Iris dataset, split it into training and testing sets, train a Logistic Regression classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_19.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1619,scikit-learn,20,"Create a Python program that uses the 'scikit-learn' API to load the Boston Housing dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_20.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1620,scikit-learn,21,"Create a Python program that uses the 'scikit-learn' API to load the Breast Cancer dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_21.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1621,scikit-learn,22,"Create a Python program that uses the 'scikit-learn' API to load the Wine dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_22.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1622,scikit-learn,23,"Create a Python program that uses the 'scikit-learn' API to load the Diabetes dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_23.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1623,scikit-learn,24,"Create a Python program that uses the 'scikit-learn' API to load the Digits dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_24.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1624,scikit-learn,25,"Create a Python program that uses the 'scikit-learn' API to load the LFW (Labeled Faces in the Wild) dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_25.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1625,scikit-learn,26,"Create a Python program that uses the 'scikit-learn' API to load the California Housing dataset, split it into training and testing sets, train a K-Means clustering model, make predictions, and save the trained model.",code/scikit-learn/scikit-learn_26.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in clustering results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1626,scikit-learn,27,"Create a Python program that uses the 'scikit-learn' API to load the Boston Housing dataset, split it into training and testing sets, train a Decision Tree Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_27.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1627,scikit-learn,28,"Create a Python program that uses the 'scikit-learn' API to load the Breast Cancer dataset, split it into training and testing sets, train a Random Forest classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_28.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1628,scikit-learn,29,"Create a Python program that uses the 'scikit-learn' API to load the Wine dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_29.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1629,scikit-learn,30,"Create a Python program that uses the 'scikit-learn' API to load the Iris dataset, split it into training and testing sets, train a Decision Tree classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_30.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1630,scikit-learn,31,"Create a Python program that uses the 'scikit-learn' API to load the Boston Housing dataset, split it into training and testing sets, train a K-Nearest Neighbors regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_31.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1631,scikit-learn,32,"Create a Python program that uses the 'scikit-learn' API to load the Breast Cancer dataset, split it into training and testing sets, train a K-Nearest Neighbors classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_32.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1632,scikit-learn,33,"Create a Python program that uses the 'scikit-learn' API to load the Wine dataset, split it into training and testing sets, train a Decision Tree classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_33.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1633,scikit-learn,34,"Create a Python program that uses the 'scikit-learn' API to load the Diabetes dataset, split it into training and testing sets, train a Support Vector Machine classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_34.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1634,scikit-learn,35,"Create a Python program that uses the 'scikit-learn' API to load the Digits dataset, split it into training and testing sets, train a Decision Tree classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_35.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1636,scikit-learn,37,"Create a Python program that uses the 'scikit-learn' API to load the California Housing dataset, split it into training and testing sets, train a Random Forest Regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_37.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1638,scikit-learn,39,"Create a Python program that uses the 'scikit-learn' API to load the LFW (Labeled Faces in the Wild) dataset, split it into training and testing sets, train a Decision Tree classifier, make predictions, calculate accuracy, and save the trained model.",code/scikit-learn/scikit-learn_39.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Test the program with different random states for dataset splitting to ensure consistency in accuracy calculations.,Measure and record the time taken to train the model on a larger dataset for performance testing.,,
1639,scikit-learn,40,"Create a Python program that uses the 'scikit-learn' API to load the California Housing dataset, split it into training and testing sets, train a Support Vector Machine regressor, make predictions, calculate the mean squared error, and save the trained model.",code/scikit-learn/scikit-learn_40.py,Load the saved model and validate its correctness by making predictions on a test dataset and comparing the results.,Measure and record the time taken to train the model on a larger dataset for performance testing.,Test the program with different random states for dataset splitting to ensure consistency in mean squared error calculations.,,
1641,scipy,1,Create a Python program using the 'scipy' API to apply various image transformations to a sample image. The program should perform operations like shifting and rotating the image and display the original and transformed images.,code/scipy/scipy_1.py,Ensure that the program correctly applies the specified image transformations (shifting and rotating) to the sample image and displays the images side by side.,Verify that the program can display the original and transformed images using matplotlib.,Test the program with different shift and rotation parameters to validate its flexibility in handling various transformation scenarios.,,
1642,scipy,2,"Create a Python program using the 'scipy' API to perform linear regression on a given dataset. The program should read the dataset from a CSV file, split it into training and testing sets, fit a linear regression model to the training data, and evaluate the model's performance on the testing data.",code/scipy/scipy_2.py,Ensure that the program correctly reads the dataset from the CSV file and splits it into training and testing sets.,Test the program with different datasets to validate its ability to handle various input data.,Verify that the program accurately fits a linear regression model to the training data and evaluates its performance on the testing data using the R-squared score.,,
1643,scipy,3,"Create a Python program using the 'scipy' API to perform clustering analysis on a given dataset. The program should read the dataset from a CSV file, preprocess the data if necessary, apply a clustering algorithm (e.g., K-means) to the data, and visualize the clusters using a scatter plot.",code/scipy/scipy_3.py,Test the program with different datasets to validate its ability to handle various input data.,"Verify that the program accurately applies a clustering algorithm (e.g., K-means) to the data and visualizes the clusters using a scatter plot.",Ensure that the program correctly reads the dataset from the CSV file and preprocesses the data if necessary.,,
1644,scipy,4,"Create a Python program using the 'scipy' API to solve a system of linear equations. The program should define the coefficients and constants of the equations, solve the system using the 'scipy.linalg.solve' function, and display the solution.",code/scipy/scipy_4.py,Verify that the program accurately solves the system of linear equations using the scipy.linalg.solve function and displays the solution.,Test the program with different systems of linear equations to validate its ability to handle various input data.,Ensure that the program correctly defines the coefficients and constants of the equations.,,
1645,scipy,5,"Create a Python program using the 'scipy' API to perform numerical integration. The program should define a function to be integrated, specify the integration limits, and use the 'scipy.integrate.quad' function to compute the definite integral.",code/scipy/scipy_5.py,Test the program with different functions and integration limits to validate its ability to handle various input scenarios.,Verify that the program accurately computes the definite integral using the scipy.integrate.quad function and displays the result.,Ensure that the program correctly defines the function to be integrated.,,
1646,scipy,6,"Create a Python program using the 'scipy' API to perform interpolation on a given dataset. The program should read the dataset from a CSV file, preprocess the data if necessary, apply an interpolation method (e.g., linear interpolation) to the data, and visualize the interpolated curve using a line plot.",code/scipy/scipy_6.py,Test the program with different datasets to validate its ability to handle various input data.,"Verify that the program accurately applies an interpolation method (e.g., linear interpolation) to the data and visualizes the interpolated curve using a line plot.",Ensure that the program correctly reads the dataset from the CSV file and preprocesses the data if necessary.,,
1647,scipy,7,"Create a Python program using the 'scipy' API to perform numerical optimization. The program should define an objective function to be minimized or maximized, specify the optimization method, and use the 'scipy.optimize.minimize' function to find the optimal solution.",code/scipy/scipy_7.py,Test the program with different objective functions and optimization methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the objective function to be minimized or maximized.,Verify that the program accurately finds the optimal solution using the scipy.optimize.minimize function and displays the result.,,
1648,scipy,8,"Create a Python program using the 'scipy' API to perform signal processing on a given audio file. The program should read the audio file, apply a signal processing technique (e.g., Fourier transform) to the audio data, and visualize the frequency spectrum of the audio signal using a spectrogram.",code/scipy/scipy_8.py,"Ensure that the program correctly reads the audio file and applies the specified signal processing technique (e.g., Fourier transform) to the audio data.",Test the program with different audio files to validate its ability to handle various input data.,Verify that the program accurately computes the frequency spectrum of the audio signal and visualizes it using a spectrogram.,,
1649,scipy,9,"Create a Python program using the 'scipy' API to solve a system of nonlinear equations. The program should define the equations and initial guesses for the variables, solve the system using the 'scipy.optimize.root' function, and display the solution.",code/scipy/scipy_9.py,Ensure that the program correctly defines the equations and initial guesses for the variables.,Verify that the program accurately solves the system of nonlinear equations using the scipy.optimize.root function and displays the solution.,Test the program with different systems of nonlinear equations and initial guesses to validate its ability to handle various input scenarios.,,
1650,scipy,10,"Create a Python program using the 'scipy' API to perform statistical analysis on a given dataset. The program should read the dataset from a CSV file, calculate descriptive statistics (e.g., mean, median, standard deviation) for each column, and display the results.",code/scipy/scipy_10.py,Test the program with different datasets to validate its ability to handle various input data.,"Verify that the program accurately calculates the mean, median, and standard deviation for each column and displays the results.",Ensure that the program correctly reads the dataset from the CSV file and calculates the descriptive statistics for each column.,,
1651,scipy,11,"Create a Python program using the 'scipy' API to perform numerical differentiation. The program should define a function to be differentiated, specify the differentiation method, and use the 'scipy.misc.derivative' function to compute the derivative at a given point.",code/scipy/scipy_11.py,Test the program with different functions and differentiation methods to validate its ability to handle various input scenarios.,Verify that the program accurately computes the derivative at a given point using the scipy.misc.derivative function and displays the result.,Ensure that the program correctly defines the function to be differentiated.,,
1652,scipy,12,"Create a Python program using the 'scipy' API to perform numerical integration of a system of ordinary differential equations (ODEs). The program should define the ODEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_ivp' function to solve the ODEs and plot the solution.",code/scipy/scipy_12.py,Test the program with different ODEs and integration methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the ODEs and initial conditions.,Verify that the program accurately solves the ODEs using the scipy.integrate.solve_ivp function and plots the solution.,,
1653,scipy,13,"Create a Python program using the 'scipy' API to perform numerical optimization with constraints. The program should define an objective function to be minimized or maximized, specify the constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_13.py,Test the program with different objective functions and constraints to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the objective function to be minimized or maximized and the constraints.,Verify that the program accurately finds the optimal solution with constraints using the scipy.optimize.minimize function and displays the result.,,
1654,scipy,14,"Create a Python program using the 'scipy' API to perform numerical interpolation on a given dataset. The program should read the dataset from a CSV file, preprocess the data if necessary, apply an interpolation method (e.g., cubic spline) to the data, and visualize the interpolated curve using a line plot.",code/scipy/scipy_14.py,Test the program with different datasets to validate its ability to handle various input data.,Ensure that the program correctly reads the dataset from the CSV file and preprocesses the data if necessary.,"Verify that the program accurately applies an interpolation method (e.g., cubic spline) to the data and visualizes the interpolated curve using a line plot.",,
1655,scipy,15,"Create a Python program using the 'scipy' API to perform numerical integration of a system of partial differential equations (PDEs). The program should define the PDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_ivp' function to solve the PDEs and visualize the solution.",code/scipy/scipy_15.py,Test the program with different PDEs and integration methods to validate its ability to handle various input scenarios.,Verify that the program accurately solves the PDEs using the scipy.integrate.solve_ivp function and visualizes the solution.,Ensure that the program correctly defines the PDEs and initial conditions.,,
1656,scipy,16,"Create a Python program using the 'scipy' API to perform numerical optimization with bounds. The program should define an objective function to be minimized or maximized, specify the bounds for the variables, and use the 'scipy.optimize.minimize' function with the 'bounds' parameter to find the optimal solution.",code/scipy/scipy_16.py,Verify that the program accurately finds the optimal solution with bounds using the scipy.optimize.minimize function and displays the result.,Test the program with different objective functions and bounds to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the objective function to be minimized or maximized and the bounds for the variables.,,
1657,scipy,17,"Create a Python program using the 'scipy' API to perform numerical integration of a system of delay differential equations (DDEs). The program should define the DDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_dde' function to solve the DDEs and visualize the solution.",code/scipy/scipy_17.py,"Ensure that the program correctly defines the DDEs, initial conditions, and history function.",Test the program with different DDEs and integration methods to validate its ability to handle various input scenarios.,Verify that the program accurately solves the DDEs using the scipy.integrate.solve_dde function and visualizes the solution.,,
1658,scipy,18,"Create a Python program using the 'scipy' API to perform numerical optimization with linear constraints. The program should define an objective function to be minimized or maximized, specify the linear constraints, and use the 'scipy.optimize.linprog' function to find the optimal solution.",code/scipy/scipy_18.py,Verify that the program accurately finds the optimal solution with linear constraints using the scipy.optimize.linprog function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the linear constraints.,Test the program with different objective functions and linear constraints to validate its ability to handle various input scenarios.,,
1659,scipy,19,"Create a Python program using the 'scipy' API to perform numerical integration of a system of stochastic differential equations (SDEs). The program should define the SDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_sde' function to solve the SDEs and visualize the solution.",code/scipy/scipy_19.py,Test the program with different SDEs and integration methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the SDEs and initial conditions.,Verify that the program accurately solves the SDEs using the scipy.integrate.solve_sde function and visualizes the solution.,,
1660,scipy,20,"Create a Python program using the 'scipy' API to perform numerical optimization with nonlinear constraints. The program should define an objective function to be minimized or maximized, specify the nonlinear constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_20.py,Test the program with different objective functions and nonlinear constraints to validate its ability to handle various input scenarios.,Verify that the program accurately finds the optimal solution with nonlinear constraints using the scipy.optimize.minimize function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the nonlinear constraints.,,
1661,scipy,21,"Create a Python program using the 'scipy' API to perform numerical integration of a system of delay differential equations (DDEs) with multiple delays. The program should define the DDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_dde' function to solve the DDEs and visualize the solution.",code/scipy/scipy_21.py,Test the program with different DDEs and integration methods to validate its ability to handle various input scenarios.,"Ensure that the program correctly defines the DDEs, initial conditions, and history functions.",Verify that the program accurately solves the DDEs with multiple delays using the scipy.integrate.solve_dde function and visualizes the solution.,,
1662,scipy,22,"Create a Python program using the 'scipy' API to perform numerical optimization with equality constraints. The program should define an objective function to be minimized or maximized, specify the equality constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_22.py,Verify that the program accurately finds the optimal solution with equality constraints using the scipy.optimize.minimize function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the equality constraints.,Test the program with different objective functions and equality constraints to validate its ability to handle various input scenarios.,,
1663,scipy,23,"Create a Python program using the 'scipy' API to perform numerical integration of a system of stochastic differential equations (SDEs) with multiple Wiener processes. The program should define the SDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_sde' function to solve the SDEs and visualize the solution.",code/scipy/scipy_23.py,Test the program with different SDEs and integration methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the SDEs and initial conditions.,Verify that the program accurately solves the SDEs with multiple Wiener processes using the scipy.integrate.solve_sde function and visualizes the solution.,,
1664,scipy,24,"Create a Python program using the 'scipy' API to perform numerical optimization with inequality constraints. The program should define an objective function to be minimized or maximized, specify the inequality constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_24.py,Test the program with different objective functions and inequality constraints to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the objective function to be minimized or maximized and the inequality constraints.,Verify that the program accurately finds the optimal solution with inequality constraints using the scipy.optimize.minimize function and displays the result.,,
1665,scipy,25,"Create a Python program using the 'scipy' API to perform numerical integration of a system of stochastic differential equations (SDEs) with multiple sources of noise. The program should define the SDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_sde' function to solve the SDEs and visualize the solution.",code/scipy/scipy_25.py,Test the program with different SDEs and integration methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the SDEs and initial conditions.,Verify that the program accurately solves the SDEs with multiple sources of noise using the scipy.integrate.solve_sde function and visualizes the solution.,,
1666,scipy,26,"Create a Python program using the 'scipy' API to perform numerical optimization with nonlinear equality constraints. The program should define an objective function to be minimized or maximized, specify the nonlinear equality constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_26.py,Test the program with different objective functions and nonlinear equality constraints to validate its ability to handle various input scenarios.,Verify that the program accurately finds the optimal solution with nonlinear equality constraints using the scipy.optimize.minimize function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the nonlinear equality constraints.,,
1667,scipy,27,"Create a Python program using the 'scipy' API to perform numerical integration of a system of stochastic differential equations (SDEs) with time-dependent coefficients. The program should define the SDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_sde' function to solve the SDEs and visualize the solution.",code/scipy/scipy_27.py,Ensure that the program correctly defines the SDEs with time-dependent coefficients and initial conditions.,Test the program with different SDEs and integration methods to validate its ability to handle various input scenarios.,Verify that the program accurately solves the SDEs with time-dependent coefficients using the scipy.integrate.solve_sde function and visualizes the solution.,,
1668,scipy,28,"Create a Python program using the 'scipy' API to perform numerical optimization with nonlinear inequality constraints. The program should define an objective function to be minimized or maximized, specify the nonlinear inequality constraints, and use the 'scipy.optimize.minimize' function with the 'constraints' parameter to find the optimal solution.",code/scipy/scipy_28.py,Test the program with different objective functions and nonlinear inequality constraints to validate its ability to handle various input scenarios.,Verify that the program accurately finds the optimal solution with nonlinear inequality constraints using the scipy.optimize.minimize function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the nonlinear inequality constraints.,,
1669,scipy,29,"Create a Python program using the 'scipy' API to perform numerical integration of a system of stochastic differential equations (SDEs) with time-dependent coefficients and multiple sources of noise. The program should define the SDEs, specify the initial conditions and integration method, and use the 'scipy.integrate.solve_sde' function to solve the SDEs and visualize the solution.",code/scipy/scipy_29.py,Test the program with different SDEs and integration methods to validate its ability to handle various input scenarios.,Ensure that the program correctly defines the SDEs with time-dependent coefficients and multiple sources of noise and the initial conditions.,Verify that the program accurately solves the SDEs with time-dependent coefficients and multiple sources of noise using the scipy.integrate.solve_sde function and visualizes the solution.,,
1670,scipy,30,"Create a Python program using the 'scipy' API to perform numerical optimization with linear equality constraints. The program should define an objective function to be minimized or maximized, specify the linear equality constraints, and use the 'scipy.optimize.linprog' function to find the optimal solution.",code/scipy/scipy_30.py,Test the program with different objective functions and linear equality constraints to validate its ability to handle various input scenarios.,Verify that the program accurately finds the optimal solution with linear equality constraints using the scipy.optimize.linprog function and displays the result.,Ensure that the program correctly defines the objective function to be minimized or maximized and the linear equality constraints.,,
1672,scipy,32,"Create a Python program using the 'scipy' API to perform numerical optimization with linear inequality constraints. The program should define an objective function to be minimized or maximized, specify the linear inequality constraints, and use the 'scipy.optimize.linprog' function to find the optimal solution.",code/scipy/scipy_32.py,Ensure that the program correctly defines the objective function to be minimized or maximized and the linear inequality constraints.,Test the program with different objective functions and linear inequality constraints to validate its ability to handle various input scenarios.,Verify that the program accurately finds the optimal solution with linear inequality constraints using the scipy.optimize.linprog function and displays the result.,,
1682,spacy,1,Create a Python program using the 'spacy' API to analyze text and label its sentiment based on the presence of positive and negative emoji. The program should identify and label positive and negative sentiments in a text.,code/spacy/spacy_1.py,Verify the program's behavior with text that does not contain any emoji to assess its robustness in handling different scenarios.,Test the program with various input texts containing positive and negative emoji to ensure it correctly identifies and labels the sentiment.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1683,spacy,2,"Create a Python program using the 'spacy' API to extract named entities from a given text. The program should identify and label different types of named entities such as persons, organizations, and locations.",code/spacy/spacy_2.py,Verify the program's behavior with text that does not contain any named entities to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,Test the program with different texts containing various types of named entities to ensure it correctly identifies and labels them.,,
1684,spacy,3,Create a Python program using the 'spacy' API to perform part-of-speech tagging on a given text. The program should identify and label the parts of speech for each word in the text.,code/spacy/spacy_3.py,Verify the program's behavior with text that does not contain any words to assess its robustness in handling different scenarios.,Test the program with different texts containing various parts of speech to ensure it correctly identifies and labels them.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1685,spacy,4,Create a Python program using the 'spacy' API to perform dependency parsing on a given text. The program should identify the syntactic relationships between words in the text and label them accordingly.,code/spacy/spacy_4.py,Verify the program's behavior with text that does not contain any words to assess its robustness in handling different scenarios.,Test the program with different texts containing various syntactic relationships to ensure it correctly identifies and labels them.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1686,spacy,5,"Create a Python program using the 'spacy' API to perform named entity recognition on a given text. The program should identify and label different types of named entities such as persons, organizations, and locations.",code/spacy/spacy_5.py,Verify the program's behavior with text that does not contain any named entities to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,Test the program with different texts containing various types of named entities to ensure it correctly identifies and labels them.,,
1687,spacy,6,Create a Python program using the 'spacy' API to perform text classification on a given text. The program should classify the text into predefined categories based on its content.,code/spacy/spacy_6.py,Test the program's performance with long texts to ensure it remains responsive and efficient.,Verify the program's behavior with text that does not belong to any predefined category to assess its robustness in handling different scenarios.,Test the program with different texts to ensure it correctly classifies them into the predefined categories.,,
1688,spacy,7,"Create a Python program using the 'spacy' API to perform tokenization on a given text. The program should split the text into individual tokens, including words, punctuation marks, and special characters.",code/spacy/spacy_7.py,Test the program with different texts to ensure it correctly tokenizes them into individual tokens.,Verify the program's behavior with text that does not contain any words or punctuation marks to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1689,spacy,8,Create a Python program using the 'spacy' API to perform sentence segmentation on a given text. The program should split the text into individual sentences.,code/spacy/spacy_8.py,Verify the program's behavior with text that does not contain any sentences to assess its robustness in handling different scenarios.,Test the program with different texts to ensure it correctly segments them into individual sentences.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1690,spacy,9,Create a Python program using the 'spacy' API to perform lemmatization on a given text. The program should convert each word in the text to its base or dictionary form.,code/spacy/spacy_9.py,Test the program's performance with long texts to ensure it remains responsive and efficient.,Verify the program's behavior with text that does not contain any words to assess its robustness in handling different scenarios.,Test the program with different texts to ensure it correctly lemmatizes each word.,,
1692,spacy,11,"Create a Python program using the 'spacy' API to perform sentiment analysis on a given text. The program should analyze the sentiment of the text and classify it as positive, negative, or neutral.",code/spacy/spacy_11.py,Test the program with different texts to ensure it correctly analyzes and classifies the sentiment.,Verify the program's behavior with text that does not convey any sentiment to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1713,spacy,32,Create a Python program using the 'spacy' API to analyze text and extract noun phrases. The program should identify and extract noun phrases from a given text.,code/spacy/spacy_32.py,Test the program with different texts to ensure it correctly extracts noun phrases.,Verify the program's behavior with text that does not contain any noun phrases to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1714,spacy,33,"Create a Python program using the 'spacy' API to analyze text and extract named entities. The program should identify and label different types of named entities such as persons, organizations, and locations.",code/spacy/spacy_33.py,Verify the program's behavior with text that does not contain any named entities to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,Test the program with different texts containing various types of named entities to ensure it correctly identifies and labels them.,,
1715,spacy,34,"Create a Python program using the 'spacy' API to analyze text and extract entities. The program should identify and label different types of entities such as persons, organizations, and locations.",code/spacy/spacy_34.py,Test the program with different texts containing various types of entities to ensure it correctly identifies and labels them.,Verify the program's behavior with text that does not contain any entities to assess its robustness in handling different scenarios.,Test the program's performance with long texts to ensure it remains responsive and efficient.,,
1723,SQLAlchemy,1,"Create a Python program that uses the 'SQLAlchemy' API to interact with a SQLite database. The program should define an 'User' entity with attributes like 'id,' 'name,' and 'email.' It should set up the database connection, create the 'users' table, add a new user to the table, and retrieve user data from the database.",code/SQLAlchemy/SQLAlchemy_1.py,Test the program by adding multiple users with different names and emails to the database and then retrieving their data to ensure it works correctly.,Evaluate the program's performance with a large number of user records to ensure it remains efficient.,Verify the program's error-handling capabilities by attempting to add a user with invalid data and check if it raises appropriate exceptions.,,
1724,SQLAlchemy,2,"Create a Python program that utilizes the 'SQLAlchemy' API to connect to a PostgreSQL database. Define an 'Article' entity with attributes like 'id,' 'title,' 'content,' and 'published_date.' Ensure that the program can establish a connection to the PostgreSQL database, create the 'articles' table, insert a new article, and retrieve articles from the database.",code/SQLAlchemy/SQLAlchemy_2.py,"Verify the program's ability to handle articles with missing or incomplete data, and check if it raises appropriate exceptions.",Test the program by inserting multiple articles with different titles and content into the database and then retrieving their data to ensure it works correctly.,Evaluate the program's performance with a large number of articles and ensure it properly handles datetime values.,,
1725,SQLAlchemy,3,"Create a Python program that utilizes the 'SQLAlchemy' API to connect to a MySQL database. Define a 'Product' entity with attributes like 'id,' 'name,' 'price,' and 'quantity.' The program should establish a connection to the MySQL database, create the 'products' table, add a new product, and retrieve product information from the database.",code/SQLAlchemy/SQLAlchemy_3.py,"Test the program by adding multiple products with different names, prices, and quantities to the database, and then retrieve their data to ensure it works correctly.",Evaluate the program's performance when dealing with a large number of product records.,"Verify the program's ability to handle products with invalid price or quantity values, and check if it raises appropriate exceptions.",,
1726,SQLAlchemy,4,"Create a Python program that uses the 'SQLAlchemy' API to connect to a Microsoft SQL Server database. Define a 'Customer' entity with attributes like 'id,' 'first_name,' 'last_name,' and 'email.' The program should establish a connection to the SQL Server database, create the 'customers' table, add a new customer, and retrieve customer details from the database.",code/SQLAlchemy/SQLAlchemy_4.py,Evaluate the program's performance with a large number of customer records.,"Verify the program's ability to handle customer data with missing or invalid fields, and check if it raises appropriate exceptions.","Test the program by adding multiple customers with different first names, last names, and emails to the database, and then retrieve their data to ensure it works correctly.",,
1727,SQLAlchemy,5,"Create a Python program that utilizes the 'SQLAlchemy' API to connect to a SQLite database. Define a 'Task' entity with attributes like 'id,' 'description,' 'due_date,' and 'completed.' The program should establish a connection to the SQLite database, create the 'tasks' table, add a new task, and retrieve task information from the database.",code/SQLAlchemy/SQLAlchemy_5.py,Evaluate the program's performance when dealing with a large number of task records.,"Test the program by adding multiple tasks with different descriptions and due dates to the database, and then retrieve their data to ensure it works correctly.","Verify the program's ability to handle tasks with missing or invalid due dates, and check if it raises appropriate exceptions.",,
1728,SQLAlchemy,6,"Create a Python program that uses the 'SQLAlchemy' API to connect to a PostgreSQL database. Define a 'Order' entity with attributes like 'id,' 'order_date,' 'total_amount,' and 'status.' The program should establish a connection to the PostgreSQL database, create the 'orders' table, add a new order, and retrieve order information from the database.",code/SQLAlchemy/SQLAlchemy_6.py,Evaluate the program's performance when dealing with a large number of order records.,"Verify the program's ability to handle orders with missing or invalid data, and check if it raises appropriate exceptions.","Test the program by adding multiple orders with different order dates, total amounts, and statuses to the database, and then retrieve their data to ensure it works correctly.",,
1729,SQLAlchemy,7,"Create a Python program that uses the 'SQLAlchemy' API to connect to a MySQL database. Define a 'Employee' entity with attributes like 'id,' 'first_name,' 'last_name,' 'position,' and 'salary.' The program should establish a connection to the MySQL database, create the 'employees' table, add a new employee, and retrieve employee details from the database.",code/SQLAlchemy/SQLAlchemy_7.py,Evaluate the program's performance when dealing with a large number of employee records.,"Verify the program's ability to handle employee data with missing or invalid fields, and check if it raises appropriate exceptions.","Test the program by adding multiple employees with different first names, last names, positions, and salaries to the database, and then retrieve their data to ensure it works correctly.",,
1730,SQLAlchemy,8,"Create a Python program that uses the 'SQLAlchemy' API to connect to a Microsoft SQL Server database. Define a 'Product' entity with attributes like 'id,' 'name,' 'price,' and 'quantity.' The program should establish a connection to the SQL Server database, create the 'products' table, add a new product, and retrieve product information from the database.",code/SQLAlchemy/SQLAlchemy_8.py,"Test the program by adding multiple products with different names, prices, and quantities to the database, and then retrieve their data to ensure it works correctly.",Evaluate the program's performance when dealing with a large number of product records.,"Verify the program's ability to handle products with missing or invalid price or quantity values, and check if it raises appropriate exceptions.",,
1741,SQLAlchemy,19,"Create a Python program that uses the 'SQLAlchemy' API to connect to a MySQL database. Define a 'Employee' entity with attributes like 'id,' 'first_name,' 'last_name,' 'position,' and 'salary.' The program should establish a connection to the MySQL database, create the 'employees' table and add a new employee. Then, retrieve employee details from the database.",code/SQLAlchemy/SQLAlchemy_19.py,Evaluate the program's performance when dealing with a large number of employee records.,"Verify the program's ability to handle employee data with missing or invalid fields, and check if it raises appropriate exceptions.","Test the program by adding multiple employees with different first names, last names, positions, and salaries to the database, and then retrieve their data to ensure it works correctly.",,
1742,SQLAlchemy,20,"Create a Python program that uses the 'SQLAlchemy' API to connect to a Microsoft SQL Server database. Define a 'Product' entity with attributes like 'id,' 'name,' 'price,' and 'quantity.' The program should establish a connection to the SQL Server database, create the 'products' table, add a new product and retrieve product information from the database.",code/SQLAlchemy/SQLAlchemy_20.py,"Test the program by adding multiple products with different names, prices, and quantities to the database, and then retrieve their data to ensure it works correctly.",Evaluate the program's performance when dealing with a large number of product records.,"Verify the program's ability to handle products with missing or invalid price or quantity values, and check if it raises appropriate exceptions.",,
1764,stumpy,1,"Develop a Python program using the 'stumpy' API to generate a matrix profile for a given random time series data. The program should compute the e z-normalized matrix profile, and the resulting profile should be saved to a text file.",code/stumpy/stumpy_1.py,Assess the program's performance with larger time series data to ensure it remains efficient.,Examine the generated output files to confirm that the matrix profile is saved accurately and can be used for further analysis.,Test the program with different random time series data to verify that it correctly computes the matrix profile.,,
1765,stumpy,2,"Develop a Python program using the 'stumpy' API to find the top-k discord motifs in a given time series. The program should allow the user to specify the value of k, and it should return the indices and corresponding distances of the top-k discord motifs.",code/stumpy/stumpy_2.py,Check the program's performance with larger time series data and different values of k to ensure it remains efficient.,Test the program with different time series data to verify that it correctly finds the top-k discord motifs.,Verify that the program correctly identifies the indices and distances of the top-k discord motifs.,,
1766,stumpy,3,Create a Python program using the 'stumpy' API to perform motif discovery in a given time series. The program should allow the user to specify the desired motif length and find the motifs within the time series. It should return the indices of all identified motifs.,code/stumpy/stumpy_3.py,Test the program with different time series data and motif lengths to verify that it correctly identifies motifs.,Check the program with a long time series to ensure it remains efficient.,Verify that the program correctly identifies and returns the indices of motifs within the time series.,,
1767,stumpy,4,"Develop a Python program using the 'stumpy' API to perform subsequence search in a given time series. The program should allow the user to input a query subsequence and find all occurrences of the query subsequence in the time series, along with their starting indices.",code/stumpy/stumpy_4.py,Test the program with different time series data and query subsequences to verify that it correctly identifies matches.,Check the program with a long time series and various query subsequences to ensure it remains efficient.,Verify that the program correctly returns the starting indices of matching subsequences.,,
1768,stumpy,5,Create a Python program using the 'stumpy' API to perform semantic segmentation of a given time series. The program should allow the user to input a set of change points and segment the time series into distinct regions based on those change points.,code/stumpy/stumpy_5.py,Test the program with different time series data and change point configurations to verify that it correctly segments the time series.,Verify that the program correctly segments the time series into distinct regions based on the provided change points.,Check the program with a long time series and multiple change points to ensure it remains efficient.,,
1769,stumpy,6,Develop a Python program using the 'stumpy' API to perform motif discovery in a given time series. The program should allow the user to specify the desired motif length and find the motifs within the time series. It should return the indices of all identified motifs.,code/stumpy/stumpy_6.py,Test the program with different time series data and motif lengths to verify that it correctly identifies motifs.,Check the program with a long time series to ensure it remains efficient.,Verify that the program correctly identifies and returns the indices of motifs within the time series.,,
1770,stumpy,7,Create a Python program using the 'stumpy' API to find the nearest neighbors of a query subsequence within a given time series. The program should allow the user to input a query subsequence and specify the number of nearest neighbors to find.,code/stumpy/stumpy_7.py,"Test the program with different time series data, query subsequences, and values of k to verify that it correctly finds nearest neighbors.",Check the program with a long time series to ensure it remains efficient.,Verify that the program correctly returns the nearest neighbors and their distances for the query subsequence.,,
1772,stumpy,9,Create a Python program using the 'stumpy' API to detect anomalies in a given time series. The program should allow the user to specify a z-normalized threshold and identify data points in the time series that exceed this threshold as anomalies.,code/stumpy/stumpy_9.py,Test the program with different time series data and threshold values to verify that it correctly detects anomalies.,Check the program with a long time series to ensure it remains efficient.,Verify that the program correctly returns the indices of detected anomalies based on the specified threshold.,,
1773,stumpy,10,Develop a Python program using the 'stumpy' API to perform semantic segmentation of a given time series. The program should allow the user to input a set of change points and segment the time series into distinct regions based on those change points.,code/stumpy/stumpy_10.py,Test the program with different time series data and change point configurations to verify that it correctly segments the time series.,Verify that the program correctly segments the time series into distinct regions based on the provided change points.,Check the program with a long time series and multiple change points to ensure it remains efficient.,,
1774,stumpy,11,"Create a Python program using the 'stumpy' API to find the top-k discord motifs in a given time series. The program should allow the user to specify the value of k, and it should return the indices and corresponding distances of the top-k discord motifs.",code/stumpy/stumpy_11.py,Verify that the program correctly identifies the indices and distances of the top-k discord motifs.,Test the program with different time series data to verify that it correctly finds the top-k discord motifs.,Assess the program's performance with larger time series data and different values of k to ensure it remains efficient.,,
1790,stumpy,27,"Create a Python program using the 'st umpy' API to find the top-k discord motifs in a given time series. The program should allow the user to specify the value of k, and it should return the indices and corresponding distances of the top-k discord motifs.",code/stumpy/stumpy_27.py,Verify that the program correctly identifies the indices and distances of the top-k discord motifs.,Test the program with different time series data to verify that it correctly finds the top-k discord motifs.,Assess the program's performance with larger time series data and different values of k to ensure it remains efficient.,,
1805,supervision,1,Develop a Python program that utilizes the 'supervision' API for object detection using a YOLO model on a webcam feed. Annotate detected objects with labels and draw a red polygon zone on the video frame. Use the Ultralytics YOLO model for object detection.,code/supervision/supervision_1.py,Verify that detected objects are annotated with labels on the video feed.,Ensure that the red polygon zone is correctly displayed on the video frame.,Ensure the program captures the webcam feed and performs object detection.,,
1806,supervision,2,"Develop a Python program that utilizes the 'supervision' API to perform image classification using a pre-trained ResNet model. Load an image from a file, classify it using the ResNet model, and display the predicted class label along with the confidence score.",code/supervision/supervision_2.py,Verify that the image is correctly loaded and transformed using the defined transformation pipeline.,Ensure that the program correctly predicts the class label and confidence score for the image.,Ensure the program correctly loads the pre-trained ResNet model.,,
1807,supervision,3,"Develop a Python program that utilizes the 'supervision' API to perform text classification using a pre-trained BERT model. Load a text document, classify it using the BERT model, and display the predicted class label along with the confidence score.",code/supervision/supervision_3.py,Ensure that the program correctly predicts the class label and confidence score for the text document.,Verify that the text document is correctly loaded and tokenized using the BERT tokenizer.,Ensure the program correctly loads the pre-trained BERT model and tokenizer.,,
1808,supervision,4,"Develop a Python program that utilizes the 'supervision' API to perform sentiment analysis on a collection of text documents. Load multiple text documents, perform sentiment analysis using a pre-trained sentiment analysis model, and display the predicted sentiment for each document along with the confidence score.",code/supervision/supervision_4.py,Ensure the program correctly loads the pre-trained sentiment analysis model.,Ensure that the program correctly predicts the sentiment and confidence score for each text document.,Verify that the text documents are correctly loaded and processed for sentiment analysis.,,
1809,supervision,5,"Develop a Python program that utilizes the 'supervision' API to perform object tracking on a video file. Load a video file, track a specific object using a pre-trained object detection model, and display the bounding box around the tracked object in each frame.",code/supervision/supervision_5.py,Ensure the program correctly loads the video file.,Ensure that the program correctly tracks and displays the bounding box around the specified object in each frame of the video.,Verify that the pre-trained object detection model is correctly loaded.,,
1810,supervision,6,"Develop a Python program that utilizes the 'supervision' API to perform face recognition on a collection of images. Load a set of reference images, perform face recognition on a target image using a pre-trained face recognition model, and display the recognized faces along with their names.",code/supervision/supervision_6.py,Ensure the program correctly loads the reference images.,Ensure that the program correctly recognizes and displays the names of the faces in the target image along with their confidence scores.,Verify that the target image is correctly loaded and processed for face recognition.,,
1811,supervision,7,Develop a Python program that utilizes the 'supervision' API to perform object detection on a video stream from a webcam. Display the video stream with bounding boxes around the detected objects and labels indicating the object classes.,code/supervision/supervision_7.py,Ensure the program correctly loads the pre-trained object detection model.,Verify that the webcam feed is correctly captured and processed for object detection.,Ensure that the program correctly displays the video stream with bounding boxes around the detected objects and labels indicating the object classes.,,
1812,supervision,8,"Develop a Python program that utilizes the 'supervision' API to perform image segmentation on an input image. Load an image, perform image segmentation using a pre-trained segmentation model, and display the segmented image with different colors assigned to different segments.",code/supervision/supervision_8.py,Ensure that the program correctly displays the segmented image with different colors assigned to different segments.,Verify that the input image is correctly loaded and processed for image segmentation.,Ensure the program correctly loads the pre-trained segmentation model.,,
1813,supervision,9,"Develop a Python program that utilizes the 'supervision' API to perform object detection on a video file. Load a video file, perform object detection using a pre-trained object detection model, and display the video frames with bounding boxes around the detected objects.",code/supervision/supervision_9.py,Ensure that the program correctly performs object detection on each frame of the video and displays the frames with bounding boxes around the detected objects.,Ensure the program correctly loads the video file.,Verify that the pre-trained object detection model is correctly loaded.,,
1814,supervision,10,"Develop a Python program that utilizes the 'supervision' API to perform image classification on a collection of images. Load multiple images, perform image classification using a pre-trained classification model, and display the predicted class labels along with the confidence scores for each image.",code/supervision/supervision_10.py,Ensure that the program correctly predicts the class labels and confidence scores for each image.,Verify that the images are correctly loaded and processed for image classification.,Ensure the program correctly loads the pre-trained classification model.,,
1815,supervision,11,"Develop a Python program that utilizes the 'supervision' API to perform text classification on a collection of text documents. Load multiple text documents, perform text classification using a pre-trained classification model, and display the predicted class labels along with the confidence scores for each document.",code/supervision/supervision_11.py,Ensure that the program correctly predicts the class labels and confidence scores for each text document.,Ensure the program correctly loads the pre-trained classification model.,Verify that the text documents are correctly loaded and processed for text classification.,,
1816,supervision,12,"Develop a Python program that utilizes the 'supervision' API to perform object detection on an input image. Load an image, perform object detection using a pre-trained object detection model, and display the image with bounding boxes around the detected objects.",code/supervision/supervision_12.py,Verify that the input image is correctly loaded and processed for object detection.,Ensure the program correctly loads the pre-trained object detection model.,Ensure that the program correctly displays the image with bounding boxes around the detected objects.,,
1818,supervision,14,"Develop a Python program that utilizes the 'supervision' API to perform face detection on an input image. Load an image, perform face detection using a pre-trained face detection model, and display the image with bounding boxes around the detected faces.",code/supervision/supervision_14.py,Ensure that the program correctly displays the image with bounding boxes around the detected faces.,Ensure the program correctly loads the pre-trained face detection model.,Verify that the input image is correctly loaded and processed for face detection.,,
1819,supervision,15,"Develop a Python program that utilizes the 'supervision' API to perform image classification on an input image. Load an image, perform image classification using a pre-trained classification model, and display the predicted class label along with the confidence score.",code/supervision/supervision_15.py,Ensure that the program correctly predicts the class label and confidence score for the input image.,Ensure the program correctly loads the pre-trained classification model.,Verify that the input image is correctly loaded and processed for image classification.,,
1820,supervision,16,"Develop a Python program that utilizes the 'supervision' API to perform text classification on an input text document. Load a text document, perform text classification using a pre-trained classification model, and display the predicted class label along with the confidence score.",code/supervision/supervision_16.py,Ensure that the program correctly predicts the class label and confidence score for the input text document.,Ensure the program correctly loads the pre-trained classification model.,Verify that the input text document is correctly loaded and processed for text classification.,,
1821,supervision,17,"Develop a Python program that utilizes the 'supervision' API to perform sentiment analysis on an input text document. Load a text document, perform sentiment analysis using a pre-trained sentiment analysis model, and display the predicted sentiment along with the confidence score.",code/supervision/supervision_17.py,Ensure the program correctly loads the pre-trained sentiment analysis model.,Ensure that the program correctly predicts the sentiment and confidence score for the input text document.,Verify that the input text document is correctly loaded and processed for sentiment analysis.,,
1822,supervision,18,Develop a Python program that utilizes the 'supervision' API to perform object tracking on a video stream from a webcam. Display the video stream with bounding boxes around the tracked objects.,code/supervision/supervision_18.py,Verify that the webcam feed is correctly captured and processed for object detection and tracking.,Ensure the program correctly loads the pre-trained object detection model.,Ensure that the program correctly displays the video stream with bounding boxes around the tracked objects.,,
1846,tensorflow,1,"Create a Python program that uses the 'tensorflow' API to build a simple feedforward neural network for binary classification. The program should generate synthetic data, compile the model, train it on the data, and evaluate its performance.",code/tensorflow/tensorflow_1.py,Test the program's evaluation step by calculating the loss and accuracy on a separate set of synthetic data.,Test the program by training the model on different synthetic datasets and verifying that it achieves reasonable accuracy.,"Verify that the model's predictions fall within the range [0, 1] by checking if 'np.all(predictions >= 0) and np.all(predictions <= 1)' is True.",,
1847,tensorflow,2,"Create a Python program that uses the 'tensorflow' API to implement a convolutional neural network (CNN) for image classification. The program should load a dataset, preprocess the data, build a CNN model, train it, and evaluate its accuracy on the test data.",code/tensorflow/tensorflow_2.py,Test the program by using different datasets and making sure that it can train a CNN for image classification effectively.,"Test the program by changing hyperparameters (e.g., the number of epochs, batch size, or the architecture of the CNN) and ensuring it still works correctly.",Verify that the model's accuracy on the test data is reasonable by checking if 'test_acc' is close to 1.,,
1848,tensorflow,3,"Create a Python program that uses the 'tensorflow' API to implement a recurrent neural network (RNN) for sequence prediction. The program should use a sequence dataset, preprocess it, build an RNN model, train it, and generate predictions on new sequences.",code/tensorflow/tensorflow_3.py,Change the architecture of the RNN or the dataset and make sure that the program still works correctly.,Test the program by generating predictions on various new sequences and confirming the accuracy of the predictions.,Test the program by creating different synthetic sequence datasets and verifying that the RNN can predict the sum of sequences accurately.,,
1849,tensorflow,4,"Create a Python program that uses the 'tensorflow' API to implement a deep reinforcement learning (DRL) agent to learn and play a simple game. The program should define an environment, build a DRL model, train the agent, and evaluate its performance in the game.",code/tensorflow/tensorflow_4.py,Evaluate the agent's performance by running test episodes and ensuring it achieves a reasonable average test reward.,Experiment with different hyperparameters and DRL model architectures to see how they affect the agent\'s learning and performance.,Test the program by training the DRL agent on different environments and confirm that it can learn to play the games effectively.,,
1850,tensorflow,5,"Create a Python program that uses the 'tensorflow' API to implement a generative adversarial network (GAN) for generating images. The program should define a generator and a discriminator, train the GAN to generate realistic images, and save the generator model for later use.",code/tensorflow/tensorflow_5.py,Test the program by training the GAN on different image datasets and verify that it can generate realistic images.,Load the saved generator model and generate images to ensure it produces convincing results.,Experiment with different generator and discriminator architectures to observe their impact on the generated images.,,
1851,tensorflow,6,"Create a Python program that uses the 'tensorflow' API to implement a natural language processing (NLP) model for sentiment analysis. The program should preprocess text data, build a model, train it on labeled text data, and evaluate its performance.",code/tensorflow/tensorflow_6.py,Test the program by using different text datasets for sentiment analysis and ensure the model can correctly predict sentiments.,Experiment with different hyperparameters and model architectures to observe how they affect sentiment analysis accuracy.,Evaluate the model's performance by comparing its predictions to ground truth labels for test data.,,
1852,tensorflow,7,"Create a Python program that uses the 'tensorflow' API to implement a recommendation system using matrix factorization. The program should load user-item interaction data, build a recommendation model, train it, and make personalized recommendations for users.",code/tensorflow/tensorflow_7.py,Experiment with different embedding dimensions and training epochs to observe their impact on recommendation quality.,Verify that the model's recommendations for users are relevant and effective in suggesting items they might like.,Test the program by using different user-item interaction data and checking if the matrix factorization model can provide accurate recommendations.,,
1853,tensorflow,8,"Create a Python program that uses the 'tensorflow' API to implement a time series forecasting model using recurrent neural networks (RNNs). The program should load time series data, preprocess it, build an RNN model, train it, and make predictions for future time steps.",code/tensorflow/tensorflow_8.py,Experiment with different sequence lengths and RNN architectures to observe their impact on time series forecasting performance.,Test the program by using different time series data and verifying the RNN can accurately forecast future time steps.,Compare the model's predictions to the actual values for future time steps and check the accuracy of the forecasts.,,
1854,tensorflow,9,"Create a Python program that uses the 'tensorflow' API to implement an object detection model using a pre-trained neural network. The program should load an image, process it, use a pre-trained model to detect objects, and display the results with bounding boxes.",code/tensorflow/tensorflow_9.py,Experiment with different pre-trained models and see how they perform on object detection tasks.,Test the program by using different images with various objects and confirm that the object detection model can accurately identify and annotate them.,Adjust the minimum confidence threshold and make sure the program correctly filters out low-confidence detections.,,
1855,tensorflow,10,"Create a Python program that uses the 'tensorflow' API to implement a text generation model using recurrent neural networks (RNNs). The program should load a text corpus, preprocess it, build an RNN model, train it, and generate new text based on a seed phrase.",code/tensorflow/tensorflow_10.py,Test the program with different text corpora and verify that the RNN model can generate coherent and contextually relevant text.,Experiment with different seed phrases and observe how they affect the style and content of the generated text.,"Modify the model architecture, embedding dimension, or sequence length to investigate their impact on text generation quality.",,
1856,tensorflow,11,"Create a Python program that uses the 'tensorflow' API to implement an image segmentation model for semantic segmentation. The program should load an image and its corresponding segmentation mask, preprocess the data, build a segmentation model, and generate pixel-wise segmentations for the image.",code/tensorflow/tensorflow_11.py,"Experiment with different model architectures, image sizes, or loss functions to study their impact on segmentation quality.",Test the program by using different image and mask pairs for semantic segmentation and confirm that the model can accurately segment objects in the images.,Compare the generated segmentations to the ground truth masks to evaluate the accuracy of the segmentations.,,
1857,tensorflow,12,"Create a Python program that uses the 'tensorflow' API to implement a style transfer model. The program should load a content image and a style image, preprocess the data, build a model that combines the style of the style image with the content of the content image, and generate a stylized output image.",code/tensorflow/tensorflow_12.py,Experiment with different style and content weights to observe how they affect the resulting stylized images.,"Modify the style transfer model by using a different base network (e.g., ResNet) and investigate the impact on style transfer quality.",Test the program by using different content and style images for style transfer and verify that the generated stylized output images capture the desired style.,,
1858,tensorflow,13,"Create a Python program that uses the 'tensorflow' API to implement a sequence-to-sequence model for machine translation. The program should load parallel text data in two languages, preprocess the data, build an encoder-decoder model, train it, and generate translations for new sentences.",code/tensorflow/tensorflow_13.py,Test the program by using different parallel text data for machine translation and ensure the model can accurately translate sentences between languages.,Verify the quality of translations by comparing the generated translations to human translations or reference translations.,Experiment with different model architectures and hyperparameters to investigate their impact on translation quality.,,
1859,tensorflow,14,"Create a Python program that uses the 'tensorflow' API to implement a reinforcement learning agent for training a game-playing bot. The program should define an environment, build a reinforcement learning model, train the agent, and evaluate its performance in the game.",code/tensorflow/tensorflow_14.py,Evaluate the agent's performance by running test episodes and ensuring it achieves a reasonable average test reward.,Test the program by using different game environments and verify that the reinforcement learning agent can effectively learn and play the games.,Experiment with different hyperparameters and model architectures to see how they affect the agent\'s learning and performance.,,
1860,tensorflow,15,"Create a Python program that uses the 'tensorflow' API to implement an anomaly detection model. The program should load a dataset, preprocess it, build an autoencoder model, train it on normal data, and use it to detect anomalies in new data.",code/tensorflow/tensorflow_15.py,Experiment with different anomaly detection thresholds and observe how they affect the detection performance.,Modify the autoencoder model architecture and hyperparameters to see how they influence anomaly detection quality.,Test the program with different datasets containing normal and anomalous data and confirm that the autoencoder model can effectively detect anomalies based on reconstruction error.,,
1861,tensorflow,16,"Create a Python program that uses the 'tensorflow' API to implement a recurrent neural network (RNN) for natural language generation. The program should preprocess text data, build an RNN model, train it, and generate new text based on a seed phrase.",code/tensorflow/tensorflow_16.py,Test the program with different text datasets and verify that the RNN model can generate coherent and contextually relevant text.,Experiment with different seed phrases and observe how they affect the style and content of the generated text.,"Modify the model architecture, embedding dimension, or sequence length to investigate their impact on text generation quality.",,
1862,tensorflow,17,"Create a Python program that uses the 'tensorflow' API to implement a generative adversarial network (GAN) for generating images. The program should define a generator and a discriminator, train the GAN, and generate new images with the trained model.",code/tensorflow/tensorflow_17.py,Load the saved generator model and generate data to ensure it produces convincing results.,Test the program by training the GAN on different datasets and verify that it can generate realistic data samples.,Experiment with different generator and discriminator architectures to observe their impact on the generated data.,,
1865,tensorflow,20,"Create a Python program that uses the 'tensorflow' API to implement a deep reinforcement learning agent for training a game-playing bot. The program should define an environment, build a deep Q-network (DQN) model, train the agent, and evaluate its performance in the game.",code/tensorflow/tensorflow_20.py,Evaluate the agent's performance by running test episodes and ensuring it achieves a reasonable average test reward.,Test the program by using different game environments and verify that the deep reinforcement learning agent can effectively learn and play the games.,Experiment with different hyperparameters and model architectures to see how they affect the agent\'s learning and performance.,,
1866,tensorflow,21,"Create a Python program that uses the 'tensorflow' API to implement a face recognition model. The program should load a pre-trained neural network for face recognition, process images, and identify faces in the images.",code/tensorflow/tensorflow_21.py,"Experiment with different pre-trained models (e.g., VGGFace) and observe their performance on face recognition tasks.",Test the program with different images containing faces and confirm that the face recognition model can correctly identify and produce embeddings for faces.,"To fully validate the program, you would compare the generated face embeddings with a database of known faces and identify individuals.",,
1867,tensorflow,22,"Create a Python program that uses the 'tensorflow' API to implement a natural language processing (NLP) model for named entity recognition (NER). The program should preprocess text data, build a model, train it on labeled text data, and evaluate its performance.",code/tensorflow/tensorflow_22.py,Test the program by using different labeled text data for named entity recognition and verify that the NER model can correctly predict entity labels.,Evaluate the model's performance by comparing its predictions to ground truth entity labels for test data.,Experiment with different model architectures and hyperparameters to observe how they affect NER accuracy.,,
1868,tensorflow,23,"Create a Python program that uses the 'tensorflow' API to implement a sentiment analysis model for text data. The program should preprocess text data, build a model, train it on labeled text data, and evaluate its performance.",code/tensorflow/tensorflow_23.py,Test the program by using different labeled text data for sentiment analysis and verify that the sentiment analysis model can correctly predict sentiment labels.,Evaluate the model's performance by comparing its predictions to ground truth sentiment labels for test data.,Experiment with different model architectures and hyperparameters to observe how they affect sentiment analysis accuracy.,,
1869,tensorflow,24,"Create a Python program that uses the 'tensorflow' API to implement a recommendation system using collaborative filtering. The program should load user-item interaction data, build a recommendation model, train it, and make personalized recommendations for users.",code/tensorflow/tensorflow_24.py,Test the program by using different user-item interaction data and verify that the collaborative filtering recommendation model can make accurate recommendations for users.,"To validate the program, you would typically compare the generated recommendations with a database of known user preferences or ratings.",Experiment with different embedding dimensions and model architectures to see how they affect recommendation performance.,,
1886,tensorflow,41,"Create a Python program that utilizes the 'tensorflow' API to build a recurrent neural network (RNN) for sequence generation. The program should use a text dataset, preprocess it, build an RNN model, train the model, and generate sequences.",code/tensorflow/tensorflow_41.py,"Ensure that the model's architecture, training process, and sequence generation are correct by examining the output and making sure there are no errors.",Verify the program's ability to learn and generate coherent sequences by examining the generated text and checking if it resembles the training text.,Test the program by training the RNN model on the given text data and generate sequences from different starting points to see the diversity of generated text.,,
1887,validators,1,"Create a Python program using the 'validators' API to validate user-provided email addresses, checking if they adhere to the standard email format.",code/validators/validators_1.py,"Verify the program's behavior when invalid email addresses are provided, ensuring it properly identifies them as invalid.",Test the program with valid email addresses to ensure it correctly identifies them as valid.,Test the program with various valid and invalid email formats to assess its robustness and accuracy in validation.,,
1888,validators,2,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format.",code/validators/validators_2.py,Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",Test the program with valid URLs to ensure it correctly identifies them as valid.,,
1889,validators,3,"Create a Python program using the 'validators' API to validate user-provided IP addresses, checking if they adhere to the standard IP address format.",code/validators/validators_3.py,Test the program with valid IP addresses to ensure it correctly identifies them as valid.,Test the program with various valid and invalid IP address formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid IP addresses are provided, ensuring it properly identifies them as invalid.",,
1890,validators,4,"Create a Python program using the 'validators' API to validate user-provided domain names, checking if they adhere to the standard domain name format.",code/validators/validators_4.py,Test the program with various valid and invalid domain name formats to assess its robustness and accuracy in validation.,Test the program with valid domain names to ensure it correctly identifies them as valid.,"Verify the program's behavior when invalid domain names are provided, ensuring it properly identifies them as invalid.",,
1891,validators,5,"Create a Python program using the 'validators' API to validate user-provided credit card numbers, checking if they adhere to the standard credit card number format.",code/validators/validators_5.py,Test the program with various valid and invalid credit card number formats to assess its robustness and accuracy in validation.,Test the program with valid credit card numbers to ensure it correctly identifies them as valid.,"Verify the program's behavior when invalid credit card numbers are provided, ensuring it properly identifies them as invalid.",,
1892,validators,6,"Create a Python program using the 'validators' API to validate user-provided ISBN numbers, checking if they adhere to the standard ISBN format.",code/validators/validators_6.py,"Verify the program's behavior when invalid ISBN numbers are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid ISBN number formats to assess its robustness and accuracy in validation.,Test the program with valid ISBN numbers to ensure it correctly identifies them as valid.,,
1893,validators,7,"Create a Python program using the 'validators' API to validate user-provided MAC addresses, checking if they adhere to the standard MAC address format.",code/validators/validators_7.py,Test the program with various valid and invalid MAC address formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid MAC addresses are provided, ensuring it properly identifies them as invalid.",Test the program with valid MAC addresses to ensure it correctly identifies them as valid.,,
1894,validators,8,"Create a Python program using the 'validators' API to validate user-provided UUIDs, checking if they adhere to the standard UUID format.",code/validators/validators_8.py,Test the program with valid UUIDs to ensure it correctly identifies them as valid.,"Verify the program's behavior when invalid UUIDs are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid UUID formats to assess its robustness and accuracy in validation.,,
1895,validators,9,"Create a Python program using the 'validators' API to validate user-provided postal codes, checking if they adhere to the standard postal code format.",code/validators/validators_9.py,Test the program with valid postal codes to ensure it correctly identifies them as valid.,Test the program with various valid and invalid postal code formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid postal codes are provided, ensuring it properly identifies them as invalid.",,
1896,validators,10,"Create a Python program using the 'validators' API to validate user-provided phone numbers, checking if they adhere to the standard phone number format.",code/validators/validators_10.py,Test the program with valid phone numbers to ensure it correctly identifies them as valid.,Test the program with various valid and invalid phone number formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid phone numbers are provided, ensuring it properly identifies them as invalid.",,
1897,validators,11,"Create a Python program using the 'validators' API to validate user-provided credit card expiration dates, checking if they adhere to the standard expiration date format.",code/validators/validators_11.py,"Verify the program's behavior when invalid credit card expiration dates are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid credit card expiration date formats to assess its robustness and accuracy in validation.,Test the program with valid credit card expiration dates to ensure it correctly identifies them as valid.,,
1898,validators,12,"Create a Python program using the 'validators' API to validate user-provided usernames, checking if they adhere to the standard username format.",code/validators/validators_12.py,"Verify the program's behavior when invalid usernames are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid username formats to assess its robustness and accuracy in validation.,Test the program with valid usernames to ensure it correctly identifies them as valid.,,
1899,validators,13,"Create a Python program using the 'validators' API to validate user-provided passwords, checking if they adhere to the standard password format.",code/validators/validators_13.py,Test the program with valid passwords to ensure it correctly identifies them as valid.,Test the program with various valid and invalid password formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid passwords are provided, ensuring it properly identifies them as invalid.",,
1900,validators,14,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it.",code/validators/validators_14.py,Test the program with valid URLs to ensure it correctly identifies them as valid and reachable.,Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",,
1901,validators,15,"Create a Python program using the 'validators' API to validate user-provided IP addresses, checking if they adhere to the standard IP address format. Additionally, the program should also check if the IP address is reachable by making a ping request to it.",code/validators/validators_15.py,"Verify the program's behavior when invalid IP addresses are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid IP address formats to assess its robustness and accuracy in validation.,Test the program with valid IP addresses to ensure it correctly identifies them as valid and reachable.,,
1902,validators,16,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it and display the response status code.",code/validators/validators_16.py,"Test the program with valid URLs to ensure it correctly identifies them as valid and reachable, and displays the correct response status code.",Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",,
1903,validators,17,"Create a Python program using the 'validators' API to validate user-provided email addresses, checking if they adhere to the standard email format. Additionally, the program should also check if the email address is deliverable by making a request to the email server.",code/validators/validators_17.py,"Verify the program's behavior when invalid email addresses are provided, ensuring it properly identifies them as invalid.",Test the program with various valid and invalid email address formats to assess its robustness and accuracy in validation.,Test the program with valid email addresses to ensure it correctly identifies them as valid and deliverable.,,
1904,validators,18,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it and display the response status code. If the URL is not reachable, the program should display an appropriate error message.",code/validators/validators_18.py,"Test the program with valid URLs to ensure it correctly identifies them as valid and reachable, and displays the correct response status code.",Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",,
1905,validators,19,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it and display the response status code. If the URL is not reachable, the program should display an appropriate error message. Finally, the program should also check if the URL is secure (HTTPS) and display a message indicating its security status.",code/validators/validators_19.py,Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.","Test the program with valid URLs to ensure it correctly identifies them as valid, reachable, and secure (HTTPS), and displays the correct response status code.",,
1906,validators,20,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it and display the response status code. If the URL is not reachable, the program should display an appropriate error message. Finally, the program should also check if the URL is secure (HTTPS) and display a message indicating its security status. If the URL is secure, the program should also check if the SSL certificate is valid and display a message indicating its validity.",code/validators/validators_20.py,"Test the program with valid URLs to ensure it correctly identifies them as valid, reachable, secure (HTTPS), and with a valid SSL certificate, and displays the correct response status code.",Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",,
1907,validators,21,"Create a Python program using the 'validators' API to validate user-provided URLs, checking if they adhere to the standard URL format. Additionally, the program should also check if the URL is reachable by making a request to it and display the response status code. If the URL is not reachable, the program should display an appropriate error message. Finally, the program should also check if the URL is secure (HTTPS) and display a message indicating its security status. If the URL is secure, the program should also check if the SSL certificate is valid and display a message indicating its validity. If the SSL certificate is invalid, the program should display an appropriate error message.",code/validators/validators_21.py,"Test the program with valid URLs to ensure it correctly identifies them as valid, reachable, secure (HTTPS), and with a valid SSL certificate, and displays the correct response status code.",Test the program with various valid and invalid URL formats to assess its robustness and accuracy in validation.,"Verify the program's behavior when invalid URLs are provided, ensuring it properly identifies them as invalid.",,
1924,validators,38,Create a Python program using the 'validators' API to validate whether a given string is a valid UUID (Universally Unique Identifier).,code/validators/validators_38.py,Test the program with various string inputs that are not UUIDs to assess its robustness and accuracy in validation.,Test the program with a valid UUID to ensure it correctly identifies it as a valid UUID.,"Verify the program's behavior when an invalid UUID is provided, ensuring it identifies it as an invalid UUID.",,
1928,xarray,1,Create a Python program using the 'xarray' API to generate a time series data array. The program should define a time range for multiple years and months and create a data array with the corresponding time coordinates.,code/xarray/xarray_1.py,Ensure that the program correctly generates the time series data array with the specified time coordinates.,Validate that the generated time series data array is named 'data_time' and has the expected dimensions and coordinates.,Test the program with different time ranges and verify that it handles various combinations of years and months correctly.,,
1929,xarray,2,"Create a Python program using the 'xarray' API to read and manipulate a NetCDF file. The program should read a NetCDF file, extract a specific variable, perform a mathematical operation on the variable, and save the modified variable back to a new NetCDF file.",code/xarray/xarray_2.py,Validate that the modified variable is saved to a new NetCDF file with the expected name and format.,Test the program with different NetCDF files and verify that it correctly performs the mathematical operation on the variable.,Ensure that the program successfully reads the NetCDF file and extracts the specified variable.,,
1930,xarray,3,"Create a Python program using the 'xarray' API to perform statistical analysis on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, calculate the mean, standard deviation, and maximum value along a specified dimension, and print the results.",code/xarray/xarray_3.py,Validate that the program correctly prints the calculated statistics.,"Test the program with different NetCDF files and verify that it correctly calculates the mean, standard deviation, and maximum value along the specified dimension.",Ensure that the program successfully reads the NetCDF file and selects the specified variable.,,
1931,xarray,4,"Create a Python program using the 'xarray' API to perform data interpolation on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, interpolate the data along a specified dimension, and save the interpolated data to a new NetCDF file.",code/xarray/xarray_4.py,Validate that the interpolated data is saved to a new NetCDF file with the expected name and format.,Test the program with different NetCDF files and verify that it correctly interpolates the data along the specified dimension.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,,
1932,xarray,5,"Create a Python program using the 'xarray' API to perform data aggregation on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, aggregate the data along a specified dimension using a specified aggregation function, and print the aggregated data.",code/xarray/xarray_5.py,Validate that the program correctly prints the aggregated data.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly aggregates the data along the specified dimension using the specified aggregation function.,,
1933,xarray,6,"Create a Python program using the 'xarray' API to perform data resampling on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, resample the data to a different time frequency, and save the resampled data to a new NetCDF file.",code/xarray/xarray_6.py,Test the program with different NetCDF files and verify that it correctly resamples the data to the specified time frequency.,Validate that the resampled data is saved to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,,
1934,xarray,7,"Create a Python program using the 'xarray' API to perform data slicing on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, slice the data along one or more dimensions, and print the sliced data.",code/xarray/xarray_7.py,Test the program with different NetCDF files and verify that it correctly slices the data along the specified dimensions.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Validate that the program correctly prints the sliced data.,,
1935,xarray,8,"Create a Python program using the 'xarray' API to perform data merging on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, merge the selected variables along a specified dimension, and save the merged data to a new NetCDF file.",code/xarray/xarray_8.py,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly merges the selected variables along the specified dimension.,Validate that the merged data is saved to a new NetCDF file with the expected name and format.,,
1936,xarray,9,"Create a Python program using the 'xarray' API to perform data masking on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, apply a mask based on a condition, and print the masked data.",code/xarray/xarray_9.py,Test the program with different NetCDF files and verify that it correctly applies the mask based on the specified condition.,Validate that the program correctly prints the masked data.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,,
1937,xarray,10,"Create a Python program using the 'xarray' API to perform data regridding on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, regrid the data to a different grid resolution, and save the regridded data to a new NetCDF file.",code/xarray/xarray_10.py,Validate that the regridded data is saved to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly regrids the data to the specified grid resolution.,,
1938,xarray,11,"Create a Python program using the 'xarray' API to perform data concatenation on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, concatenate the selected variables along a specified dimension, and save the concatenated data to a new NetCDF file.",code/xarray/xarray_11.py,Validate that the concatenated data is saved to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly concatenates the selected variables along the specified dimension.,,
1939,xarray,12,"Create a Python program using the 'xarray' API to perform data rechunking on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, rechunk the data to a different chunk size, and save the rechunked data to a new NetCDF file.",code/xarray/xarray_12.py,Validate that the rechunked data is saved to a new NetCDF file with the expected name and format.,Test the program with different NetCDF files and verify that it correctly rechunks the data to the specified chunk size.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,,
1940,xarray,13,"Create a Python program using the 'xarray' API to perform data masking and interpolation on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, apply a mask based on a condition, interpolate the masked data along a specified dimension, and save the interpolated data to a new NetCDF file.",code/xarray/xarray_13.py,Validate that the interpolated data is saved to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly applies the mask based on the specified condition and interpolates the masked data along the specified dimension.,,
1941,xarray,14,"Create a Python program using the 'xarray' API to perform data aggregation and resampling on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, aggregate the data along a specified dimension using a specified aggregation function, and then resample the aggregated data to a different time frequency. Finally, the program should save the resampled data to a new NetCDF file.",code/xarray/xarray_14.py,Validate that the program correctly resamples the aggregated data to the specified time frequency and saves the resampled data to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly aggregates the data along the specified dimension using the specified aggregation function.,,
1942,xarray,15,"Create a Python program using the 'xarray' API to perform data slicing and masking on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, slice the data along one or more dimensions, apply a mask based on a condition, and print the masked and sliced data.",code/xarray/xarray_15.py,Validate that the program correctly prints the masked and sliced data.,Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly slices the data along the specified dimensions and applies the mask based on the specified condition.,,
1943,xarray,16,"Create a Python program using the 'xarray' API to perform data merging and regridding on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, merge the selected variables along a specified dimension, and then regrid the merged data to a different grid resolution. Finally, the program should save the regridded data to a new NetCDF file.",code/xarray/xarray_16.py,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly merges the selected variables along the specified dimension.,Validate that the program correctly regrids the merged data to the specified grid resolution and saves the regridded data to a new NetCDF file with the expected name and format.,,
1944,xarray,17,"Create a Python program using the 'xarray' API to perform data concatenation and rechunking on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, concatenate the selected variables along a specified dimension, and then rechunk the concatenated data to a different chunk size. Finally, the program should save the rechunked data to a new NetCDF file.",code/xarray/xarray_17.py,Validate that the program correctly rechunks the concatenated data to the specified chunk size and saves the rechunked data to a new NetCDF file with the expected name and format.,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly concatenates the selected variables along the specified dimension.,,
1945,xarray,18,"Create a Python program using the 'xarray' API to perform data masking, interpolation, and aggregation on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, apply a mask based on a condition, interpolate the masked data along a specified dimension, and then calculate the mean, standard deviation, and maximum value of the interpolated data along another specified dimension. Finally, the program should print the calculated statistics.",code/xarray/xarray_18.py,"Validate that the program correctly calculates the mean, standard deviation, and maximum value of the interpolated data along the specified dimension and prints the calculated statistics.",Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly applies the mask based on the specified condition and interpolates the masked data along the specified dimension.,,
1946,xarray,19,"Create a Python program using the 'xarray' API to perform data slicing, masking, and aggregation on a multi-dimensional data array. The program should read a NetCDF file, select a specific variable, slice the data along one or more dimensions, apply a mask based on a condition, and then calculate the mean, standard deviation, and maximum value of the masked and sliced data along another specified dimension. Finally, the program should print the calculated statistics.",code/xarray/xarray_19.py,"Validate that the program correctly calculates the mean, standard deviation, and maximum value of the masked and sliced data along the specified dimension and prints the calculated statistics.",Ensure that the program successfully reads the NetCDF file and selects the specified variable.,Test the program with different NetCDF files and verify that it correctly slices the data along the specified dimensions and applies the mask based on the specified condition.,,
1947,xarray,20,"Create a Python program using the 'xarray' API to perform data merging, regridding, and resampling on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, merge the selected variables along a specified dimension, regrid the merged data to a different grid resolution, and then resample the regridded data to a different time frequency. Finally, the program should save the resampled data to a new NetCDF file.",code/xarray/xarray_20.py,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly merges the selected variables along the specified dimension.,"Validate that the program correctly regrids the merged data to the specified grid resolution, resamples the regridded data to the specified time frequency, and saves the resampled data to a new NetCDF file with the expected name and format.",,
1948,xarray,21,"Create a Python program using the 'xarray' API to perform data concatenation, rechunking, and resampling on multiple multi-dimensional data arrays. The program should read multiple NetCDF files, select a specific variable from each file, concatenate the selected variables along a specified dimension, rechunk the concatenated data to a different chunk size, and then resample the rechunked data to a different time frequency. Finally, the program should save the resampled data to a new NetCDF file.",code/xarray/xarray_21.py,Ensure that the program successfully reads the NetCDF files and selects the specified variables.,Test the program with different combinations of NetCDF files and verify that it correctly concatenates the selected variables along the specified dimension.,"Validate that the program correctly rechunks the concatenated data to the specified chunk size, resamples the rechunked data to the specified time frequency, and saves the resampled data to a new NetCDF file with the expected name and format.",,
1969,ydata-profiling,1,"Create a Python program that uses the ""ydata-profiling"" API to perform data profiling on a CSV file named ""data.csv."" The profiling should include statistics like mean, median, and histograms for numeric columns. Save the profiling report as an HTML file named ""data_profile.html.""",code/ydata-profiling/ydata-profiling_1.py,"Test that the ""data.csv"" file is successfully loaded into a Pandas DataFrame.",Verify that the profiling report contains statistics such as mean and median.,"Check if the ""data_profile.html"" file is created after running the program.",,
1970,ydata-profiling,2,"Create a Python program that utilizes the ""ydata-profiling"" API to profile a JSON file named 'data.json'. The profiling should include statistics for both numeric and categorical columns, as well as a correlation matrix. Save the profiling report as a JSON file named 'data_profile.json'.",code/ydata-profiling/ydata-profiling_2.py,"Ensure that the ""data.json"" file is successfully loaded into a Pandas DataFrame.","Check if the ""data_profile.json"" file is created after running the program.",Confirm that the profiling report contains statistics for both numeric and categorical columns.,,
1971,ydata-profiling,3,"Create a Python program that employs the 'ydata-profiling' API to profile an Excel file named 'data.xlsx'. The profiling should include a summary of the data, a list of missing values, and an interactive report saved as an HTML file named 'data_summary.html'.",code/ydata-profiling/ydata-profiling_3.py,"Verify that the ""data.xlsx"" file is successfully loaded into a Pandas DataFrame.",Ensure that the profiling report contains a summary of the data and a list of missing values.,"Check if the ""data_summary.html"" file is created after running the program.",,
1972,ydata-profiling,4,"Create a Python program that uses the 'ydata-profiling' API to profile a SQL database named 'mydb'. The profiling should include statistics for numeric columns, data types, and a frequency table for a specific column named 'product_category'. Save the profiling report as a PDF file named 'database_profile.pdf'.",code/ydata-profiling/ydata-profiling_4.py,"Check if the ""database_profile.pdf"" file is created after running the program.",Ensure that the SQL database connection is successfully established and data is retrieved.,Confirm that the profiling report contains statistics for numeric columns and data types.,,
1973,ydata-profiling,5,"Create a Python program that utilizes the 'ydata-profiling' API to profile a URL pointing to a CSV file, 'http://example.com/data.csv'. The profiling should include basic statistics for all columns and a visualization of the data distribution. Save the profiling report as a JSON file named 'url_data_profile.json'.",code/ydata-profiling/ydata-profiling_5.py,Verify that the data is successfully loaded from the URL into a Pandas DataFrame.,Confirm that the profiling report contains basic statistics for all columns and data distribution visualization.,"Check if the ""url_data_profile.json"" file is created after running the program.",,
1974,ydata-profiling,6,Create a Python program that uses the 'ydata-profiling' API to profile a Parquet file named 'data.parquet'. The profiling should include basic statistics for all columns and a summary of the data. Save the profiling report as an HTML file named 'parquet_data_summary.html'.,code/ydata-profiling/ydata-profiling_6.py,Confirm that the profiling report contains basic statistics for all columns and a data summary.,"Check if the ""parquet_data_summary.html"" file is created after running the program.","Ensure that the ""data.parquet"" file is successfully loaded into a Pandas DataFrame.",,
1975,ydata-profiling,7,"Create a Python program that employs the 'ydata-profiling' API to profile a JSONL file named 'data.jsonl'. The profiling should include a count of records, data types of columns, and a table of unique values for a column named 'user_id'. Save the profiling report as an HTML file named 'jsonl_data_profile.html'.",code/ydata-profiling/ydata-profiling_7.py,"Check if the ""jsonl_data_profile.html"" file is created after running the program.","Verify that the ""data.jsonl"" file is successfully loaded as a JSONL dataset into a Pandas DataFrame.","Ensure that the profiling report includes a count of records, data types of columns, and a table of unique values for the ""user_id"" column.",,
1976,ydata-profiling,8,"Create a Python program that uses the 'ydata-profiling' API to profile an SQLite database named 'mydb.db'. The profiling should include a list of tables in the database, data types of columns in a specific table named 'customers', and basic statistics for numeric columns in the 'orders' table. Save the profiling report as a PDF file named 'sqlite_db_profile.pdf'.",code/ydata-profiling/ydata-profiling_8.py,"Ensure that the SQLite database connection to ""mydb.db"" is successfully established.","Check if the ""sqlite_db_profile.pdf"" file is created after running the program.","Confirm that the profiling reports include a list of tables, data types of columns in the ""customers"" table, and basic statistics for numeric columns in the ""orders"" table.",,
1977,ydata-profiling,9,"Create a Python program that utilizes the 'ydata-profiling' API to profile a URL pointing to an Excel file, 'http://example.com/data.xlsx'. The profiling should include data types of columns and a summary of the data. Save the profiling report as a JSON file named 'url_excel_profile.json'.",code/ydata-profiling/ydata-profiling_9.py,Ensure that the profiling report includes data types of columns and a data summary.,Verify that the data is successfully loaded from the URL into a Pandas DataFrame.,"Check if the ""url_excel_profile.json"" file is created after running the program.",,
1978,ydata-profiling,10,"Create a Python program that uses the 'ydata-profiling' API to profile a Parquet file named 'data.parquet'. The profiling should include a summary of the data, data types of columns, and a list of unique values for a column named 'product_name'. Save the profiling report as an HTML file named 'parquet_data_summary.html'.",code/ydata-profiling/ydata-profiling_10.py,"Confirm that the profiling report contains a data summary, data types of columns, and a list of unique values for the ""product_name"" column.","Check if the ""parquet_data_summary.html"" file is created after running the program.","Ensure that the ""data.parquet"" file is successfully loaded into a Pandas DataFrame.",,
1979,ydata-profiling,11,"Create a Python program that employs the 'ydata-profiling' API to profile a JSONL file named 'data.jsonl'. The profiling should include a count of records, a summary of the data, and a table of unique values for a column named 'category'. Save the profiling report as an HTML file named 'jsonl_data_profile.html'.",code/ydata-profiling/ydata-profiling_11.py,"Check if the ""jsonl_data_profile.html"" file is created after running the program.","Verify that the ""data.jsonl"" file is successfully loaded as a JSONL dataset into a Pandas DataFrame.","Ensure that the profiling report includes a count of records, a data summary, and a table of unique values for the ""category"" column.",,
1980,ydata-profiling,12,"Create a Python program that uses the 'ydata-profiling' API to profile an SQLite database named 'mydb.db'. The profiling should include a list of tables in the database, data types of columns in a specific table named 'employees', and basic statistics for numeric columns in the 'sales' table. Save the profiling report as a PDF file named 'sqlite_db_profile.pdf'.",code/ydata-profiling/ydata-profiling_12.py,"Ensure that the SQLite database connection to ""mydb.db"" is successfully established.","Check if the ""sqlite_db_profile.pdf"" file is created after running the program.","Confirm that the profiling reports include a list of tables, data types of columns in the ""employees"" table, and basic statistics for numeric columns in the ""sales"" table.",,